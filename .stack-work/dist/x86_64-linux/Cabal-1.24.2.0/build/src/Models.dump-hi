
==================== FINAL INTERFACE ====================
2017-05-19 02:57:13.337937 UTC

interface picFun-0.1.0.0-JNPOSgLeq7jJoAtQCvQXmk:Models [family instance module] 8002
  interface hash: a297068e311e6610751af3deff2388a3
  ABI hash: 6fb98ae4892d0d0e62b287528f2bf53e
  export-list hash: aeb6a5dcc2fbf532117c982464a08afc
  orphan hash: 20e3076ce9868f63935e252e4af36136
  flag hash: 937ef6b8624e64106bbd92a8cb3b4bef
  sig of: Nothing
  used TH splices: False
  where
exports:
  Models.Tool{Models.Blend Models.Checkerboard Models.Wipe Models.ZipImage}
module dependencies:
package dependencies: JuicyPixels-3.2.8.1@JuicyPixels-3.2.8.1-4AbHYLGcEbLBNOsmMKGed
                      aeson-1.0.2.1@aeson-1.0.2.1-CYngHPh1vosBJovY7C9thn
                      array-0.5.1.1@array-0.5.1.1
                      attoparsec-0.13.1.0@attoparsec-0.13.1.0-1ABl8gBrvGSCXKXEElG6rU
                      base-4.9.1.0
                      base-compat-0.9.2@base-compat-0.9.2-6QxKnlgzGYzLT4ZO71q1el
                      binary-0.8.3.0@binary-0.8.3.0
                      bytestring-0.10.8.1@bytestring-0.10.8.1
                      containers-0.5.7.1@containers-0.5.7.1
                      deepseq-1.4.2.0@deepseq-1.4.2.0
                      dlist-0.8.0.2@dlist-0.8.0.2-6Wnps4GD7EFnRucVzXIFD
                      ghc-boot-th-8.0.2@ghc-boot-th-8.0.2 ghc-prim-0.5.0.0
                      hashable-1.2.6.0@hashable-1.2.6.0-3EXxoqeEgbfAKr6aGkye6x
                      integer-gmp-1.0.0.1
                      integer-logarithms-1.0.1@integer-logarithms-1.0.1-IEHCuEd5sG4JjSjlx7m5JF
                      primitive-0.6.1.0@primitive-0.6.1.0-6AbSTw9JXz141LE5p6LGH
                      scientific-0.3.4.10@scientific-0.3.4.10-70WEAestTPg2u2sFCYJUhG
                      tagged-0.8.5@tagged-0.8.5-1mTloBSoUxv8dqUr8XBGBt
                      template-haskell-2.11.1.0
                      text-1.2.2.1@text-1.2.2.1-Ji7hMs2U4BkBwavd4taEVR
                      time-1.6.0.1@time-1.6.0.1
                      time-locale-compat-0.1.1.3@time-locale-compat-0.1.1.3-KZ1jqNx8uhlHjmuPPj6V1Y
                      transformers-0.5.2.0@transformers-0.5.2.0
                      unordered-containers-0.2.8.0@unordered-containers-0.2.8.0-1XEErQCPPPc2SEtcHHNx9o
                      vector-0.11.0.0@vector-0.11.0.0-LMwQhhnXj8U3T5Bm1JFxG
orphans: attoparsec-0.13.1.0@attoparsec-0.13.1.0-1ABl8gBrvGSCXKXEElG6rU:Data.Attoparsec.ByteString.Char8
         attoparsec-0.13.1.0@attoparsec-0.13.1.0-1ABl8gBrvGSCXKXEElG6rU:Data.Attoparsec.Text.Internal
         base-4.9.1.0:GHC.Base base-4.9.1.0:GHC.Float
         binary-0.8.3.0@binary-0.8.3.0:Data.Binary.Generic
         bytestring-0.10.8.1@bytestring-0.10.8.1:Data.ByteString.Builder
         hashable-1.2.6.0@hashable-1.2.6.0-3EXxoqeEgbfAKr6aGkye6x:Data.Hashable.Generic
         text-1.2.2.1@text-1.2.2.1-Ji7hMs2U4BkBwavd4taEVR:Data.Text
         text-1.2.2.1@text-1.2.2.1-Ji7hMs2U4BkBwavd4taEVR:Data.Text.Lazy
         text-1.2.2.1@text-1.2.2.1-Ji7hMs2U4BkBwavd4taEVR:Data.Text.Show
         time-1.6.0.1@time-1.6.0.1:Data.Time.Calendar.Gregorian
         time-1.6.0.1@time-1.6.0.1:Data.Time.Format.Parse
         time-1.6.0.1@time-1.6.0.1:Data.Time.LocalTime.LocalTime
         transformers-0.5.2.0@transformers-0.5.2.0:Control.Monad.Trans.Error
         vector-0.11.0.0@vector-0.11.0.0-LMwQhhnXj8U3T5Bm1JFxG:Data.Vector.Fusion.Bundle
         vector-0.11.0.0@vector-0.11.0.0-LMwQhhnXj8U3T5Bm1JFxG:Data.Vector.Unboxed
family instance modules: JuicyPixels-3.2.8.1@JuicyPixels-3.2.8.1-4AbHYLGcEbLBNOsmMKGed:Codec.Picture.Types
                         attoparsec-0.13.1.0@attoparsec-0.13.1.0-1ABl8gBrvGSCXKXEElG6rU:Data.Attoparsec.Internal.Types
                         base-4.9.1.0:Control.Applicative base-4.9.1.0:Data.Complex
                         base-4.9.1.0:Data.Either base-4.9.1.0:Data.Functor.Compose
                         base-4.9.1.0:Data.Functor.Const base-4.9.1.0:Data.Functor.Identity
                         base-4.9.1.0:Data.Functor.Product base-4.9.1.0:Data.Functor.Sum
                         base-4.9.1.0:Data.List.NonEmpty base-4.9.1.0:Data.Monoid
                         base-4.9.1.0:Data.Semigroup base-4.9.1.0:Data.Type.Equality
                         base-4.9.1.0:Data.Version base-4.9.1.0:Data.Void
                         base-4.9.1.0:GHC.Exts base-4.9.1.0:GHC.Generics
                         base-4.9.1.0:GHC.IO.Exception base-4.9.1.0:GHC.TypeLits
                         containers-0.5.7.1@containers-0.5.7.1:Data.IntMap.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.IntSet.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.Map.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.Sequence
                         containers-0.5.7.1@containers-0.5.7.1:Data.Set.Base
                         dlist-0.8.0.2@dlist-0.8.0.2-6Wnps4GD7EFnRucVzXIFD:Data.DList
                         ghc-boot-th-8.0.2@ghc-boot-th-8.0.2:GHC.LanguageExtensions.Type
                         primitive-0.6.1.0@primitive-0.6.1.0-6AbSTw9JXz141LE5p6LGH:Control.Monad.Primitive
                         tagged-0.8.5@tagged-0.8.5-1mTloBSoUxv8dqUr8XBGBt:Data.Tagged
                         template-haskell-2.11.1.0:Language.Haskell.TH.Syntax
                         text-1.2.2.1@text-1.2.2.1-Ji7hMs2U4BkBwavd4taEVR:Data.Text
                         text-1.2.2.1@text-1.2.2.1-Ji7hMs2U4BkBwavd4taEVR:Data.Text.Lazy
                         unordered-containers-0.2.8.0@unordered-containers-0.2.8.0-1XEErQCPPPc2SEtcHHNx9o:Data.HashMap.Base
                         unordered-containers-0.2.8.0@unordered-containers-0.2.8.0-1XEErQCPPPc2SEtcHHNx9o:Data.HashSet
                         vector-0.11.0.0@vector-0.11.0.0-LMwQhhnXj8U3T5Bm1JFxG:Data.Vector
                         vector-0.11.0.0@vector-0.11.0.0-LMwQhhnXj8U3T5Bm1JFxG:Data.Vector.Primitive
                         vector-0.11.0.0@vector-0.11.0.0-LMwQhhnXj8U3T5Bm1JFxG:Data.Vector.Storable
                         vector-0.11.0.0@vector-0.11.0.0-LMwQhhnXj8U3T5Bm1JFxG:Data.Vector.Unboxed
                         vector-0.11.0.0@vector-0.11.0.0-LMwQhhnXj8U3T5Bm1JFxG:Data.Vector.Unboxed.Base
import  -/  JuicyPixels-3.2.8.1@JuicyPixels-3.2.8.1-4AbHYLGcEbLBNOsmMKGed:Codec.Picture.Types 22b7a216fd591cfd9ca02dad94569487
import  -/  aeson-1.0.2.1@aeson-1.0.2.1-CYngHPh1vosBJovY7C9thn:Data.Aeson f9ddc2b8debac8d0523a7e4841116b13
import  -/  aeson-1.0.2.1@aeson-1.0.2.1-CYngHPh1vosBJovY7C9thn:Data.Aeson.Types.FromJSON f06f5f826c0efb53cec7506569dbe305
import  -/  aeson-1.0.2.1@aeson-1.0.2.1-CYngHPh1vosBJovY7C9thn:Data.Aeson.Types.ToJSON baab7b4623ebe385c579c05ef352f81e
import  -/  base-4.9.1.0:GHC.Base c4231c43c07e46080a26bf94094c7aa1
import  -/  base-4.9.1.0:GHC.Generics 1dbec2bc7dd1c5bd8c89ed857eaed19b
import  -/  base-4.9.1.0:GHC.Read b6821365d2d5fa2155c9e910160e7f57
import  -/  base-4.9.1.0:GHC.Show a027f5ac24879eaba752f44aa90fe511
import  -/  base-4.9.1.0:Prelude 22dd289b8469a8fa8dc81cab7b237771
import  -/  ghc-prim-0.5.0.0:GHC.Classes 0bdf3d057a415ec1b84a7b1994efbe47
3691ed8b5e249ec582535ba8aa70b6ee
  $fEqTool :: GHC.Classes.Eq Models.Tool
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Models.Tool Models.$fEqTool_$c== Models.$fEqTool_$c/= -}
3691ed8b5e249ec582535ba8aa70b6ee
  $fEqTool_$c/= :: Models.Tool -> Models.Tool -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: (\ (a :: Models.Tool) (b :: Models.Tool) ->
                 case a of wild {
                   Models.ZipImage
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.True Models.ZipImage -> GHC.Types.False }
                   Models.Wipe
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.True Models.Wipe -> GHC.Types.False }
                   Models.Blend
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.True Models.Blend -> GHC.Types.False }
                   Models.Checkerboard
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.True
                        Models.Checkerboard -> GHC.Types.False } }) -}
3691ed8b5e249ec582535ba8aa70b6ee
  $fEqTool_$c== :: Models.Tool -> Models.Tool -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: (\ (ds :: Models.Tool) (ds1 :: Models.Tool) ->
                 case ds of wild {
                   Models.ZipImage
                   -> case ds1 of wild1 {
                        DEFAULT -> GHC.Types.False Models.ZipImage -> GHC.Types.True }
                   Models.Wipe
                   -> case ds1 of wild1 {
                        DEFAULT -> GHC.Types.False Models.Wipe -> GHC.Types.True }
                   Models.Blend
                   -> case ds1 of wild1 {
                        DEFAULT -> GHC.Types.False Models.Blend -> GHC.Types.True }
                   Models.Checkerboard
                   -> case ds1 of wild1 {
                        DEFAULT -> GHC.Types.False
                        Models.Checkerboard -> GHC.Types.True } }) -}
3691ed8b5e249ec582535ba8aa70b6ee
  $fFromJSONTool :: Data.Aeson.Types.FromJSON.FromJSON Models.Tool
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Models.Tool
                  Models.$fFromJSONTool_$cparseJSON
                  Models.$fFromJSONTool_$cparseJSONList -}
3691ed8b5e249ec582535ba8aa70b6ee
  $fFromJSONTool1 ::
    [Data.Aeson.Types.Internal.Parser Models.Tool]
    -> forall (f :: * -> *) r.
       Data.Aeson.Types.Internal.JSONPath
       -> Data.Aeson.Types.Internal.Failure f r
       -> Data.Aeson.Types.Internal.Success [Models.Tool] f r
       -> f r
  {- Arity: 4, HasNoCafRefs, Strictness: <S,1*U><L,U><L,U><L,C(U)> -}
ec6c2201553551fb4f39a44aa98fad97
  $fFromJSONTool10 ::
    Data.Aeson.Types.Internal.Options
    -> Data.Aeson.Types.FromJSON.FromArgs
         Data.Aeson.Types.Generic.Zero a1
    -> GHC.Base.String
    -> Data.Aeson.Types.Internal.Object
    -> Data.Text.Internal.Text
    -> GHC.Base.Maybe
         (Data.Aeson.Types.Internal.Parser
            ((GHC.Generics.:+:)
               (GHC.Generics.C1
                  ('GHC.Generics.MetaCons
                     "ZipImage" 'GHC.Generics.PrefixI 'GHC.Types.False)
                  GHC.Generics.U1
                GHC.Generics.:+: GHC.Generics.C1
                                   ('GHC.Generics.MetaCons
                                      "Wipe" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                   GHC.Generics.U1)
               (GHC.Generics.C1
                  ('GHC.Generics.MetaCons
                     "Blend" 'GHC.Generics.PrefixI 'GHC.Types.False)
                  GHC.Generics.U1
                GHC.Generics.:+: GHC.Generics.C1
                                   ('GHC.Generics.MetaCons
                                      "Checkerboard" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                   GHC.Generics.U1)
               a1))
  {- Arity: 5,
     Unfolding: (Data.Aeson.Types.FromJSON.$fFromTaggedObjectarity:+:_$cparseFromTaggedObject
                   @ Data.Aeson.Types.Generic.Zero
                   @ (GHC.Generics.C1
                        ('GHC.Generics.MetaCons
                           "ZipImage" 'GHC.Generics.PrefixI 'GHC.Types.False)
                        GHC.Generics.U1
                      GHC.Generics.:+: GHC.Generics.C1
                                         ('GHC.Generics.MetaCons
                                            "Wipe" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                         GHC.Generics.U1)
                   @ (GHC.Generics.C1
                        ('GHC.Generics.MetaCons
                           "Blend" 'GHC.Generics.PrefixI 'GHC.Types.False)
                        GHC.Generics.U1
                      GHC.Generics.:+: GHC.Generics.C1
                                         ('GHC.Generics.MetaCons
                                            "Checkerboard" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                         GHC.Generics.U1)
                   Models.$fFromJSONTool15
                     `cast`
                   (Sym (Data.Aeson.Types.FromJSON.N:FromTaggedObject[0]
                             <Data.Aeson.Types.Generic.Zero>_N
                             <GHC.Generics.M1
                                GHC.Generics.C
                                ('GHC.Generics.MetaCons
                                   "ZipImage" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                GHC.Generics.U1
                              GHC.Generics.:+: GHC.Generics.M1
                                                 GHC.Generics.C
                                                 ('GHC.Generics.MetaCons
                                                    "Wipe" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                                 GHC.Generics.U1>_N))
                   Models.$fFromJSONTool11
                     `cast`
                   (Sym (Data.Aeson.Types.FromJSON.N:FromTaggedObject[0]
                             <Data.Aeson.Types.Generic.Zero>_N
                             <GHC.Generics.M1
                                GHC.Generics.C
                                ('GHC.Generics.MetaCons
                                   "Blend" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                GHC.Generics.U1
                              GHC.Generics.:+: GHC.Generics.M1
                                                 GHC.Generics.C
                                                 ('GHC.Generics.MetaCons
                                                    "Checkerboard"
                                                    'GHC.Generics.PrefixI
                                                    'GHC.Types.False)
                                                 GHC.Generics.U1>_N))) -}
a7f0f788709972972255d275f6e49ac1
  $fFromJSONTool11 ::
    Data.Aeson.Types.Internal.Options
    -> Data.Aeson.Types.FromJSON.FromArgs
         Data.Aeson.Types.Generic.Zero a1
    -> GHC.Base.String
    -> Data.Aeson.Types.Internal.Object
    -> Data.Text.Internal.Text
    -> GHC.Base.Maybe
         (Data.Aeson.Types.Internal.Parser
            ((GHC.Generics.:+:)
               (GHC.Generics.M1
                  GHC.Generics.C
                  ('GHC.Generics.MetaCons
                     "Blend" 'GHC.Generics.PrefixI 'GHC.Types.False)
                  GHC.Generics.U1)
               (GHC.Generics.M1
                  GHC.Generics.C
                  ('GHC.Generics.MetaCons
                     "Checkerboard" 'GHC.Generics.PrefixI 'GHC.Types.False)
                  GHC.Generics.U1)
               a1))
  {- Arity: 5,
     Unfolding: (Data.Aeson.Types.FromJSON.$fFromTaggedObjectarity:+:_$cparseFromTaggedObject
                   @ Data.Aeson.Types.Generic.Zero
                   @ (GHC.Generics.M1
                        GHC.Generics.C
                        ('GHC.Generics.MetaCons
                           "Blend" 'GHC.Generics.PrefixI 'GHC.Types.False)
                        GHC.Generics.U1)
                   @ (GHC.Generics.M1
                        GHC.Generics.C
                        ('GHC.Generics.MetaCons
                           "Checkerboard" 'GHC.Generics.PrefixI 'GHC.Types.False)
                        GHC.Generics.U1)
                   Models.$fFromJSONTool14
                     `cast`
                   (Sym (Data.Aeson.Types.FromJSON.N:FromTaggedObject[0]
                             <Data.Aeson.Types.Generic.Zero>_N
                             <GHC.Generics.C1
                                ('GHC.Generics.MetaCons
                                   "Blend" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                GHC.Generics.U1>_N))
                   Models.$fFromJSONTool12
                     `cast`
                   (Sym (Data.Aeson.Types.FromJSON.N:FromTaggedObject[0]
                             <Data.Aeson.Types.Generic.Zero>_N
                             <GHC.Generics.C1
                                ('GHC.Generics.MetaCons
                                   "Checkerboard" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                GHC.Generics.U1>_N))) -}
6e20ad902701d408f746469a16baca54
  $fFromJSONTool12 ::
    Data.Aeson.Types.Internal.Options
    -> Data.Aeson.Types.FromJSON.FromArgs
         Data.Aeson.Types.Generic.Zero a
    -> GHC.Base.String
    -> Data.Aeson.Types.Internal.Object
    -> Data.Text.Internal.Text
    -> GHC.Base.Maybe
         (Data.Aeson.Types.Internal.Parser
            (GHC.Generics.C1
               ('GHC.Generics.MetaCons
                  "Checkerboard" 'GHC.Generics.PrefixI 'GHC.Types.False)
               GHC.Generics.U1
               a))
  {- Arity: 5,
     Strictness: <S(LC(S)LLLL),1*U(U,U,U,U,U,U)><L,U><L,U><L,U><S(SSS),1*U(U,U,U)>,
     Inline: INLINE[0],
     Unfolding: InlineRule (5, True, False)
                (\ @ a
                   (w :: Data.Aeson.Types.Internal.Options)
                   (w1 :: Data.Aeson.Types.FromJSON.FromArgs
                            Data.Aeson.Types.Generic.Zero a)
                   (w2 :: GHC.Base.String)
                   (w3 :: Data.Aeson.Types.Internal.Object)
                   (w4 :: Data.Text.Internal.Text) ->
                 case w of ww { Data.Aeson.Types.Internal.Options ww1 ww2 ww3 ww4 ww5 ww6 ->
                 case w4 of ww7 { Data.Text.Internal.Text ww8 ww9 ww10 ->
                 Models.$w$dFromTaggedObject
                   @ a
                   ww1
                   ww2
                   ww3
                   ww4
                   ww5
                   ww6
                   w1
                   w2
                   w3
                   ww8
                   ww9
                   ww10 } }) -}
66a4b623c713805c0da019f744139527
  $fFromJSONTool13 ::
    Data.Aeson.Types.Internal.Options
    -> Data.Aeson.Types.FromJSON.FromArgs
         Data.Aeson.Types.Generic.Zero a
    -> GHC.Base.String
    -> Data.Aeson.Types.Internal.Object
    -> forall (f :: * -> *) r.
       Data.Aeson.Types.Internal.JSONPath
       -> Data.Aeson.Types.Internal.Failure f r
       -> Data.Aeson.Types.Internal.Success (GHC.Generics.U1 a) f r
       -> f r
  {- Arity: 7, HasNoCafRefs,
     Strictness: <L,A><L,A><L,A><L,A><L,A><L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (7, True, True)
                (\ @ a
                   (opts :: Data.Aeson.Types.Internal.Options)
                   (fargs :: Data.Aeson.Types.FromJSON.FromArgs
                               Data.Aeson.Types.Generic.Zero a)
                   (contentsFieldName :: GHC.Base.String)
                   (x :: Data.Aeson.Types.Internal.Object)
                   @ (f :: * -> *)
                   @ r
                   (eta :: Data.Aeson.Types.Internal.JSONPath)
                   (eta1 :: Data.Aeson.Types.Internal.Failure f r)
                   (eta2 :: Data.Aeson.Types.Internal.Success
                              (GHC.Generics.U1 a) f r) ->
                 eta2 (GHC.Generics.U1 @ a)) -}
e9a145c2952fb2def1016f79b78b9cc6
  $fFromJSONTool14 ::
    Data.Aeson.Types.Internal.Options
    -> Data.Aeson.Types.FromJSON.FromArgs
         Data.Aeson.Types.Generic.Zero a
    -> GHC.Base.String
    -> Data.Aeson.Types.Internal.Object
    -> Data.Text.Internal.Text
    -> GHC.Base.Maybe
         (Data.Aeson.Types.Internal.Parser
            (GHC.Generics.C1
               ('GHC.Generics.MetaCons
                  "Blend" 'GHC.Generics.PrefixI 'GHC.Types.False)
               GHC.Generics.U1
               a))
  {- Arity: 5,
     Strictness: <S(LC(S)LLLL),1*U(U,U,U,U,U,U)><L,U><L,U><L,U><S(SSS),1*U(U,U,U)>,
     Inline: INLINE[0],
     Unfolding: InlineRule (5, True, False)
                (\ @ a
                   (w :: Data.Aeson.Types.Internal.Options)
                   (w1 :: Data.Aeson.Types.FromJSON.FromArgs
                            Data.Aeson.Types.Generic.Zero a)
                   (w2 :: GHC.Base.String)
                   (w3 :: Data.Aeson.Types.Internal.Object)
                   (w4 :: Data.Text.Internal.Text) ->
                 case w of ww { Data.Aeson.Types.Internal.Options ww1 ww2 ww3 ww4 ww5 ww6 ->
                 case w4 of ww7 { Data.Text.Internal.Text ww8 ww9 ww10 ->
                 Models.$w$dFromTaggedObject1
                   @ a
                   ww1
                   ww2
                   ww3
                   ww4
                   ww5
                   ww6
                   w1
                   w2
                   w3
                   ww8
                   ww9
                   ww10 } }) -}
0708a8d8733b776f9eb00a486941e614
  $fFromJSONTool15 ::
    Data.Aeson.Types.Internal.Options
    -> Data.Aeson.Types.FromJSON.FromArgs
         Data.Aeson.Types.Generic.Zero a1
    -> GHC.Base.String
    -> Data.Aeson.Types.Internal.Object
    -> Data.Text.Internal.Text
    -> GHC.Base.Maybe
         (Data.Aeson.Types.Internal.Parser
            ((GHC.Generics.:+:)
               (GHC.Generics.M1
                  GHC.Generics.C
                  ('GHC.Generics.MetaCons
                     "ZipImage" 'GHC.Generics.PrefixI 'GHC.Types.False)
                  GHC.Generics.U1)
               (GHC.Generics.M1
                  GHC.Generics.C
                  ('GHC.Generics.MetaCons
                     "Wipe" 'GHC.Generics.PrefixI 'GHC.Types.False)
                  GHC.Generics.U1)
               a1))
  {- Arity: 5,
     Unfolding: (Data.Aeson.Types.FromJSON.$fFromTaggedObjectarity:+:_$cparseFromTaggedObject
                   @ Data.Aeson.Types.Generic.Zero
                   @ (GHC.Generics.M1
                        GHC.Generics.C
                        ('GHC.Generics.MetaCons
                           "ZipImage" 'GHC.Generics.PrefixI 'GHC.Types.False)
                        GHC.Generics.U1)
                   @ (GHC.Generics.M1
                        GHC.Generics.C
                        ('GHC.Generics.MetaCons
                           "Wipe" 'GHC.Generics.PrefixI 'GHC.Types.False)
                        GHC.Generics.U1)
                   Models.$fFromJSONTool17
                     `cast`
                   (Sym (Data.Aeson.Types.FromJSON.N:FromTaggedObject[0]
                             <Data.Aeson.Types.Generic.Zero>_N
                             <GHC.Generics.C1
                                ('GHC.Generics.MetaCons
                                   "ZipImage" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                GHC.Generics.U1>_N))
                   Models.$fFromJSONTool16
                     `cast`
                   (Sym (Data.Aeson.Types.FromJSON.N:FromTaggedObject[0]
                             <Data.Aeson.Types.Generic.Zero>_N
                             <GHC.Generics.C1
                                ('GHC.Generics.MetaCons
                                   "Wipe" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                GHC.Generics.U1>_N))) -}
a36e32734e323de6ec4680068a058afb
  $fFromJSONTool16 ::
    Data.Aeson.Types.Internal.Options
    -> Data.Aeson.Types.FromJSON.FromArgs
         Data.Aeson.Types.Generic.Zero a
    -> GHC.Base.String
    -> Data.Aeson.Types.Internal.Object
    -> Data.Text.Internal.Text
    -> GHC.Base.Maybe
         (Data.Aeson.Types.Internal.Parser
            (GHC.Generics.C1
               ('GHC.Generics.MetaCons
                  "Wipe" 'GHC.Generics.PrefixI 'GHC.Types.False)
               GHC.Generics.U1
               a))
  {- Arity: 5,
     Strictness: <S(LC(S)LLLL),1*U(U,U,U,U,U,U)><L,U><L,U><L,U><S(SSS),1*U(U,U,U)>,
     Inline: INLINE[0],
     Unfolding: InlineRule (5, True, False)
                (\ @ a
                   (w :: Data.Aeson.Types.Internal.Options)
                   (w1 :: Data.Aeson.Types.FromJSON.FromArgs
                            Data.Aeson.Types.Generic.Zero a)
                   (w2 :: GHC.Base.String)
                   (w3 :: Data.Aeson.Types.Internal.Object)
                   (w4 :: Data.Text.Internal.Text) ->
                 case w of ww { Data.Aeson.Types.Internal.Options ww1 ww2 ww3 ww4 ww5 ww6 ->
                 case w4 of ww7 { Data.Text.Internal.Text ww8 ww9 ww10 ->
                 Models.$w$dFromTaggedObject2
                   @ a
                   ww1
                   ww2
                   ww3
                   ww4
                   ww5
                   ww6
                   w1
                   w2
                   w3
                   ww8
                   ww9
                   ww10 } }) -}
8997156d1204f8b6fe38eb34a9ae450c
  $fFromJSONTool17 ::
    Data.Aeson.Types.Internal.Options
    -> Data.Aeson.Types.FromJSON.FromArgs
         Data.Aeson.Types.Generic.Zero a
    -> GHC.Base.String
    -> Data.Aeson.Types.Internal.Object
    -> Data.Text.Internal.Text
    -> GHC.Base.Maybe
         (Data.Aeson.Types.Internal.Parser
            (GHC.Generics.C1
               ('GHC.Generics.MetaCons
                  "ZipImage" 'GHC.Generics.PrefixI 'GHC.Types.False)
               GHC.Generics.U1
               a))
  {- Arity: 5,
     Strictness: <S(LC(S)LLLL),1*U(U,U,U,U,U,U)><L,U><L,U><L,U><S(SSS),1*U(U,U,U)>,
     Inline: INLINE[0],
     Unfolding: InlineRule (5, True, False)
                (\ @ a
                   (w :: Data.Aeson.Types.Internal.Options)
                   (w1 :: Data.Aeson.Types.FromJSON.FromArgs
                            Data.Aeson.Types.Generic.Zero a)
                   (w2 :: GHC.Base.String)
                   (w3 :: Data.Aeson.Types.Internal.Object)
                   (w4 :: Data.Text.Internal.Text) ->
                 case w of ww { Data.Aeson.Types.Internal.Options ww1 ww2 ww3 ww4 ww5 ww6 ->
                 case w4 of ww7 { Data.Text.Internal.Text ww8 ww9 ww10 ->
                 Models.$w$dFromTaggedObject3
                   @ a
                   ww1
                   ww2
                   ww3
                   ww4
                   ww5
                   ww6
                   w1
                   w2
                   w3
                   ww8
                   ww9
                   ww10 } }) -}
1ac87bf266e78b11f433683f898e6429
  $fFromJSONTool18 ::
    Data.Aeson.Types.Internal.Options
    -> Data.Aeson.Types.FromJSON.FromArgs
         Data.Aeson.Types.Generic.Zero a1
    -> Data.Aeson.Types.Internal.Pair
    -> GHC.Base.Maybe
         (Data.Aeson.Types.Internal.Parser
            ((GHC.Generics.:+:)
               (GHC.Generics.C1
                  ('GHC.Generics.MetaCons
                     "ZipImage" 'GHC.Generics.PrefixI 'GHC.Types.False)
                  GHC.Generics.U1
                GHC.Generics.:+: GHC.Generics.C1
                                   ('GHC.Generics.MetaCons
                                      "Wipe" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                   GHC.Generics.U1)
               (GHC.Generics.C1
                  ('GHC.Generics.MetaCons
                     "Blend" 'GHC.Generics.PrefixI 'GHC.Types.False)
                  GHC.Generics.U1
                GHC.Generics.:+: GHC.Generics.C1
                                   ('GHC.Generics.MetaCons
                                      "Checkerboard" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                   GHC.Generics.U1)
               a1))
  {- Arity: 3,
     Unfolding: (Data.Aeson.Types.FromJSON.$fFromPairarity:+:_$cparsePair
                   @ Data.Aeson.Types.Generic.Zero
                   @ (GHC.Generics.C1
                        ('GHC.Generics.MetaCons
                           "ZipImage" 'GHC.Generics.PrefixI 'GHC.Types.False)
                        GHC.Generics.U1
                      GHC.Generics.:+: GHC.Generics.C1
                                         ('GHC.Generics.MetaCons
                                            "Wipe" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                         GHC.Generics.U1)
                   @ (GHC.Generics.C1
                        ('GHC.Generics.MetaCons
                           "Blend" 'GHC.Generics.PrefixI 'GHC.Types.False)
                        GHC.Generics.U1
                      GHC.Generics.:+: GHC.Generics.C1
                                         ('GHC.Generics.MetaCons
                                            "Checkerboard" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                         GHC.Generics.U1)
                   Models.$fFromJSONTool23
                     `cast`
                   (Sym (Data.Aeson.Types.FromJSON.N:FromPair[0]
                             <Data.Aeson.Types.Generic.Zero>_N
                             <GHC.Generics.M1
                                GHC.Generics.C
                                ('GHC.Generics.MetaCons
                                   "ZipImage" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                GHC.Generics.U1
                              GHC.Generics.:+: GHC.Generics.M1
                                                 GHC.Generics.C
                                                 ('GHC.Generics.MetaCons
                                                    "Wipe" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                                 GHC.Generics.U1>_N))
                   Models.$fFromJSONTool19
                     `cast`
                   (Sym (Data.Aeson.Types.FromJSON.N:FromPair[0]
                             <Data.Aeson.Types.Generic.Zero>_N
                             <GHC.Generics.M1
                                GHC.Generics.C
                                ('GHC.Generics.MetaCons
                                   "Blend" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                GHC.Generics.U1
                              GHC.Generics.:+: GHC.Generics.M1
                                                 GHC.Generics.C
                                                 ('GHC.Generics.MetaCons
                                                    "Checkerboard"
                                                    'GHC.Generics.PrefixI
                                                    'GHC.Types.False)
                                                 GHC.Generics.U1>_N))) -}
01c5f861c767662a17e3179fcf2ee8ac
  $fFromJSONTool19 ::
    Data.Aeson.Types.Internal.Options
    -> Data.Aeson.Types.FromJSON.FromArgs
         Data.Aeson.Types.Generic.Zero a1
    -> Data.Aeson.Types.Internal.Pair
    -> GHC.Base.Maybe
         (Data.Aeson.Types.Internal.Parser
            ((GHC.Generics.:+:)
               (GHC.Generics.M1
                  GHC.Generics.C
                  ('GHC.Generics.MetaCons
                     "Blend" 'GHC.Generics.PrefixI 'GHC.Types.False)
                  GHC.Generics.U1)
               (GHC.Generics.M1
                  GHC.Generics.C
                  ('GHC.Generics.MetaCons
                     "Checkerboard" 'GHC.Generics.PrefixI 'GHC.Types.False)
                  GHC.Generics.U1)
               a1))
  {- Arity: 3,
     Unfolding: (Data.Aeson.Types.FromJSON.$fFromPairarity:+:_$cparsePair
                   @ Data.Aeson.Types.Generic.Zero
                   @ (GHC.Generics.M1
                        GHC.Generics.C
                        ('GHC.Generics.MetaCons
                           "Blend" 'GHC.Generics.PrefixI 'GHC.Types.False)
                        GHC.Generics.U1)
                   @ (GHC.Generics.M1
                        GHC.Generics.C
                        ('GHC.Generics.MetaCons
                           "Checkerboard" 'GHC.Generics.PrefixI 'GHC.Types.False)
                        GHC.Generics.U1)
                   Models.$fFromJSONTool22
                     `cast`
                   (Sym (Data.Aeson.Types.FromJSON.N:FromPair[0]
                             <Data.Aeson.Types.Generic.Zero>_N
                             <GHC.Generics.C1
                                ('GHC.Generics.MetaCons
                                   "Blend" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                GHC.Generics.U1>_N))
                   Models.$fFromJSONTool20
                     `cast`
                   (Sym (Data.Aeson.Types.FromJSON.N:FromPair[0]
                             <Data.Aeson.Types.Generic.Zero>_N
                             <GHC.Generics.C1
                                ('GHC.Generics.MetaCons
                                   "Checkerboard" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                GHC.Generics.U1>_N))) -}
7ce1b9573dac28095c8c6838976c56b6
  $fFromJSONTool2 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "[a]"#) -}
e3527c1ead78977ec01b84e713be5673
  $fFromJSONTool20 ::
    Data.Aeson.Types.Internal.Options
    -> Data.Aeson.Types.FromJSON.FromArgs
         Data.Aeson.Types.Generic.Zero a1
    -> Data.Aeson.Types.Internal.Pair
    -> GHC.Base.Maybe
         (Data.Aeson.Types.Internal.Parser
            (GHC.Generics.C1
               ('GHC.Generics.MetaCons
                  "Checkerboard" 'GHC.Generics.PrefixI 'GHC.Types.False)
               GHC.Generics.U1
               a1))
  {- Arity: 3,
     Strictness: <S(LC(S)LLLL),1*U(U,U,U,U,U,U)><L,U><S(S(SSS)L),1*U(1*U(U,U,U),U)>,
     Inline: INLINE[0],
     Unfolding: InlineRule (3, True, False)
                (\ @ a1
                   (w :: Data.Aeson.Types.Internal.Options)
                   (w1 :: Data.Aeson.Types.FromJSON.FromArgs
                            Data.Aeson.Types.Generic.Zero a1)
                   (w2 :: Data.Aeson.Types.Internal.Pair) ->
                 case w of ww { Data.Aeson.Types.Internal.Options ww1 ww2 ww3 ww4 ww5 ww6 ->
                 case w2 of ww7 { (,) ww8 ww9 ->
                 case ww8 of ww10 { Data.Text.Internal.Text ww11 ww12 ww13 ->
                 Models.$w$dFromPair
                   @ a1
                   ww1
                   ww2
                   ww3
                   ww4
                   ww5
                   ww6
                   w1
                   ww11
                   ww12
                   ww13
                   ww9 } } }) -}
f4e1a7819ac7c27a266017dbe4e89f35
  $fFromJSONTool21 ::
    Data.Aeson.Types.Internal.Options
    -> Data.Aeson.Types.FromJSON.FromArgs
         Data.Aeson.Types.Generic.Zero a
    -> Data.Aeson.Types.Internal.Value
    -> Data.Aeson.Types.Internal.Parser (GHC.Generics.U1 a)
  {- Arity: 3,
     Strictness: <S(LLLLLS),1*U(A,A,A,A,A,1*U)><L,A><S,1*U>,
     Unfolding: InlineRule (3, True, False)
                (\ @ a
                   (opts :: Data.Aeson.Types.Internal.Options)
                   (fargs :: Data.Aeson.Types.FromJSON.FromArgs
                               Data.Aeson.Types.Generic.Zero a)
                   (v :: Data.Aeson.Types.Internal.Value) ->
                 case opts of wild { Data.Aeson.Types.Internal.Options ds1 ds2 ds3 ds4 ds5 ds6 ->
                 case ds6 of wild1 { DEFAULT ->
                 Data.Aeson.Types.FromJSON.$w$cgParseJSON3
                   @ Data.Aeson.Types.Generic.Zero
                   @ a
                   v } }) -}
521f88ef1927af8e72679cd3561aee43
  $fFromJSONTool22 ::
    Data.Aeson.Types.Internal.Options
    -> Data.Aeson.Types.FromJSON.FromArgs
         Data.Aeson.Types.Generic.Zero a1
    -> Data.Aeson.Types.Internal.Pair
    -> GHC.Base.Maybe
         (Data.Aeson.Types.Internal.Parser
            (GHC.Generics.C1
               ('GHC.Generics.MetaCons
                  "Blend" 'GHC.Generics.PrefixI 'GHC.Types.False)
               GHC.Generics.U1
               a1))
  {- Arity: 3,
     Strictness: <S(LC(S)LLLL),1*U(U,U,U,U,U,U)><L,U><S(S(SSS)L),1*U(1*U(U,U,U),U)>,
     Inline: INLINE[0],
     Unfolding: InlineRule (3, True, False)
                (\ @ a1
                   (w :: Data.Aeson.Types.Internal.Options)
                   (w1 :: Data.Aeson.Types.FromJSON.FromArgs
                            Data.Aeson.Types.Generic.Zero a1)
                   (w2 :: Data.Aeson.Types.Internal.Pair) ->
                 case w of ww { Data.Aeson.Types.Internal.Options ww1 ww2 ww3 ww4 ww5 ww6 ->
                 case w2 of ww7 { (,) ww8 ww9 ->
                 case ww8 of ww10 { Data.Text.Internal.Text ww11 ww12 ww13 ->
                 Models.$w$dFromPair1
                   @ a1
                   ww1
                   ww2
                   ww3
                   ww4
                   ww5
                   ww6
                   w1
                   ww11
                   ww12
                   ww13
                   ww9 } } }) -}
27b95eddf57aa12c3d2982b9b75b6fcf
  $fFromJSONTool23 ::
    Data.Aeson.Types.Internal.Options
    -> Data.Aeson.Types.FromJSON.FromArgs
         Data.Aeson.Types.Generic.Zero a1
    -> Data.Aeson.Types.Internal.Pair
    -> GHC.Base.Maybe
         (Data.Aeson.Types.Internal.Parser
            ((GHC.Generics.:+:)
               (GHC.Generics.M1
                  GHC.Generics.C
                  ('GHC.Generics.MetaCons
                     "ZipImage" 'GHC.Generics.PrefixI 'GHC.Types.False)
                  GHC.Generics.U1)
               (GHC.Generics.M1
                  GHC.Generics.C
                  ('GHC.Generics.MetaCons
                     "Wipe" 'GHC.Generics.PrefixI 'GHC.Types.False)
                  GHC.Generics.U1)
               a1))
  {- Arity: 3,
     Unfolding: (Data.Aeson.Types.FromJSON.$fFromPairarity:+:_$cparsePair
                   @ Data.Aeson.Types.Generic.Zero
                   @ (GHC.Generics.M1
                        GHC.Generics.C
                        ('GHC.Generics.MetaCons
                           "ZipImage" 'GHC.Generics.PrefixI 'GHC.Types.False)
                        GHC.Generics.U1)
                   @ (GHC.Generics.M1
                        GHC.Generics.C
                        ('GHC.Generics.MetaCons
                           "Wipe" 'GHC.Generics.PrefixI 'GHC.Types.False)
                        GHC.Generics.U1)
                   Models.$fFromJSONTool25
                     `cast`
                   (Sym (Data.Aeson.Types.FromJSON.N:FromPair[0]
                             <Data.Aeson.Types.Generic.Zero>_N
                             <GHC.Generics.C1
                                ('GHC.Generics.MetaCons
                                   "ZipImage" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                GHC.Generics.U1>_N))
                   Models.$fFromJSONTool24
                     `cast`
                   (Sym (Data.Aeson.Types.FromJSON.N:FromPair[0]
                             <Data.Aeson.Types.Generic.Zero>_N
                             <GHC.Generics.C1
                                ('GHC.Generics.MetaCons
                                   "Wipe" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                GHC.Generics.U1>_N))) -}
2d6530fdc6095298b3b974c0b34bccab
  $fFromJSONTool24 ::
    Data.Aeson.Types.Internal.Options
    -> Data.Aeson.Types.FromJSON.FromArgs
         Data.Aeson.Types.Generic.Zero a1
    -> Data.Aeson.Types.Internal.Pair
    -> GHC.Base.Maybe
         (Data.Aeson.Types.Internal.Parser
            (GHC.Generics.C1
               ('GHC.Generics.MetaCons
                  "Wipe" 'GHC.Generics.PrefixI 'GHC.Types.False)
               GHC.Generics.U1
               a1))
  {- Arity: 3,
     Strictness: <S(LC(S)LLLL),1*U(U,U,U,U,U,U)><L,U><S(S(SSS)L),1*U(1*U(U,U,U),U)>,
     Inline: INLINE[0],
     Unfolding: InlineRule (3, True, False)
                (\ @ a1
                   (w :: Data.Aeson.Types.Internal.Options)
                   (w1 :: Data.Aeson.Types.FromJSON.FromArgs
                            Data.Aeson.Types.Generic.Zero a1)
                   (w2 :: Data.Aeson.Types.Internal.Pair) ->
                 case w of ww { Data.Aeson.Types.Internal.Options ww1 ww2 ww3 ww4 ww5 ww6 ->
                 case w2 of ww7 { (,) ww8 ww9 ->
                 case ww8 of ww10 { Data.Text.Internal.Text ww11 ww12 ww13 ->
                 Models.$w$dFromPair2
                   @ a1
                   ww1
                   ww2
                   ww3
                   ww4
                   ww5
                   ww6
                   w1
                   ww11
                   ww12
                   ww13
                   ww9 } } }) -}
820408162fba48829c8ab24579ddd173
  $fFromJSONTool25 ::
    Data.Aeson.Types.Internal.Options
    -> Data.Aeson.Types.FromJSON.FromArgs
         Data.Aeson.Types.Generic.Zero a1
    -> Data.Aeson.Types.Internal.Pair
    -> GHC.Base.Maybe
         (Data.Aeson.Types.Internal.Parser
            (GHC.Generics.C1
               ('GHC.Generics.MetaCons
                  "ZipImage" 'GHC.Generics.PrefixI 'GHC.Types.False)
               GHC.Generics.U1
               a1))
  {- Arity: 3,
     Strictness: <S(LC(S)LLLL),1*U(U,U,U,U,U,U)><L,U><S(S(SSS)L),1*U(1*U(U,U,U),U)>,
     Inline: INLINE[0],
     Unfolding: InlineRule (3, True, False)
                (\ @ a1
                   (w :: Data.Aeson.Types.Internal.Options)
                   (w1 :: Data.Aeson.Types.FromJSON.FromArgs
                            Data.Aeson.Types.Generic.Zero a1)
                   (w2 :: Data.Aeson.Types.Internal.Pair) ->
                 case w of ww { Data.Aeson.Types.Internal.Options ww1 ww2 ww3 ww4 ww5 ww6 ->
                 case w2 of ww7 { (,) ww8 ww9 ->
                 case ww8 of ww10 { Data.Text.Internal.Text ww11 ww12 ww13 ->
                 Models.$w$dFromPair3
                   @ a1
                   ww1
                   ww2
                   ww3
                   ww4
                   ww5
                   ww6
                   w1
                   ww11
                   ww12
                   ww13
                   ww9 } } }) -}
0f2fa873d1ac49d48a57a75037d44c43
  $fFromJSONTool26 ::
    Data.Aeson.Types.Internal.Options
    -> Data.Text.Internal.Text
    -> GHC.Base.Maybe
         ((GHC.Generics.:+:)
            (GHC.Generics.C1
               ('GHC.Generics.MetaCons
                  "ZipImage" 'GHC.Generics.PrefixI 'GHC.Types.False)
               GHC.Generics.U1
             GHC.Generics.:+: GHC.Generics.C1
                                ('GHC.Generics.MetaCons
                                   "Wipe" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                GHC.Generics.U1)
            (GHC.Generics.C1
               ('GHC.Generics.MetaCons
                  "Blend" 'GHC.Generics.PrefixI 'GHC.Types.False)
               GHC.Generics.U1
             GHC.Generics.:+: GHC.Generics.C1
                                ('GHC.Generics.MetaCons
                                   "Checkerboard" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                GHC.Generics.U1)
            a1)
  {- Arity: 2,
     Strictness: <S(LC(S)LLLL),1*U(A,C(U),A,A,A,A)><S(SSS),1*U(U,U,U)>,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ @ a1
                   (w :: Data.Aeson.Types.Internal.Options)
                   (w1 :: Data.Text.Internal.Text) ->
                 case w of ww { Data.Aeson.Types.Internal.Options ww1 ww2 ww3 ww4 ww5 ww6 ->
                 case w1 of ww7 { Data.Text.Internal.Text ww8 ww9 ww10 ->
                 Models.$w$dSumFromString @ a1 ww2 ww8 ww9 ww10 } }) -}
aa1b179809ccaaa7b055ddf9fc0433ee
  $fFromJSONTool3 ::
    Data.Aeson.Types.Internal.Value
    -> Data.Aeson.Types.Internal.Parser
         (GHC.Generics.M1
            GHC.Generics.D
            ('GHC.Generics.MetaData
               "Tool"
               "Models"
               "picFun-0.1.0.0-JNPOSgLeq7jJoAtQCvQXmk"
               'GHC.Types.False)
            ((GHC.Generics.C1
                ('GHC.Generics.MetaCons
                   "ZipImage" 'GHC.Generics.PrefixI 'GHC.Types.False)
                GHC.Generics.U1
              GHC.Generics.:+: GHC.Generics.C1
                                 ('GHC.Generics.MetaCons
                                    "Wipe" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                 GHC.Generics.U1)
             GHC.Generics.:+: (GHC.Generics.C1
                                 ('GHC.Generics.MetaCons
                                    "Blend" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                 GHC.Generics.U1
                               GHC.Generics.:+: GHC.Generics.C1
                                                  ('GHC.Generics.MetaCons
                                                     "Checkerboard"
                                                     'GHC.Generics.PrefixI
                                                     'GHC.Types.False)
                                                  GHC.Generics.U1))
            GHC.Prim.Any)
  {- Unfolding: (Models.$fFromJSONTool4
                   @ GHC.Prim.Any
                   Data.Aeson.Types.Internal.defaultOptions
                   (Data.Aeson.Types.FromJSON.$WNoFromArgs @ GHC.Prim.Any)) -}
2f633deaafc9436a0093b9be4dda6aa2
  $fFromJSONTool4 ::
    Data.Aeson.Types.Internal.Options
    -> Data.Aeson.Types.FromJSON.FromArgs
         Data.Aeson.Types.Generic.Zero a1
    -> Data.Aeson.Types.Internal.Value
    -> Data.Aeson.Types.Internal.Parser
         (GHC.Generics.M1
            GHC.Generics.D
            ('GHC.Generics.MetaData
               "Tool"
               "Models"
               "picFun-0.1.0.0-JNPOSgLeq7jJoAtQCvQXmk"
               'GHC.Types.False)
            ((GHC.Generics.C1
                ('GHC.Generics.MetaCons
                   "ZipImage" 'GHC.Generics.PrefixI 'GHC.Types.False)
                GHC.Generics.U1
              GHC.Generics.:+: GHC.Generics.C1
                                 ('GHC.Generics.MetaCons
                                    "Wipe" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                 GHC.Generics.U1)
             GHC.Generics.:+: (GHC.Generics.C1
                                 ('GHC.Generics.MetaCons
                                    "Blend" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                 GHC.Generics.U1
                               GHC.Generics.:+: GHC.Generics.C1
                                                  ('GHC.Generics.MetaCons
                                                     "Checkerboard"
                                                     'GHC.Generics.PrefixI
                                                     'GHC.Types.False)
                                                  GHC.Generics.U1))
            a1)
  {- Arity: 2, Strictness: <L,1*U(U,U,U,U,U,U)><L,U>,
     Unfolding: (\ @ a1
                   (opts :: Data.Aeson.Types.Internal.Options)
                   (fargs :: Data.Aeson.Types.FromJSON.FromArgs
                               Data.Aeson.Types.Generic.Zero a1) ->
                 let {
                   g :: Data.Aeson.Types.Internal.Value
                        -> Data.Tagged.Tagged
                             Data.Aeson.Types.Generic.True
                             (Data.Aeson.Types.Internal.Parser
                                ((GHC.Generics.:+:)
                                   (GHC.Generics.C1
                                      ('GHC.Generics.MetaCons
                                         "ZipImage" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                      GHC.Generics.U1
                                    GHC.Generics.:+: GHC.Generics.C1
                                                       ('GHC.Generics.MetaCons
                                                          "Wipe"
                                                          'GHC.Generics.PrefixI
                                                          'GHC.Types.False)
                                                       GHC.Generics.U1)
                                   (GHC.Generics.C1
                                      ('GHC.Generics.MetaCons
                                         "Blend" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                      GHC.Generics.U1
                                    GHC.Generics.:+: GHC.Generics.C1
                                                       ('GHC.Generics.MetaCons
                                                          "Checkerboard"
                                                          'GHC.Generics.PrefixI
                                                          'GHC.Types.False)
                                                       GHC.Generics.U1)
                                   a1))
                   = case opts of ww { Data.Aeson.Types.Internal.Options ww1 ww2 ww3 ww4 ww5 ww6 ->
                     Data.Aeson.Types.FromJSON.$w$cparseSum
                       @ (GHC.Generics.C1
                            ('GHC.Generics.MetaCons
                               "ZipImage" 'GHC.Generics.PrefixI 'GHC.Types.False)
                            GHC.Generics.U1
                          GHC.Generics.:+: GHC.Generics.C1
                                             ('GHC.Generics.MetaCons
                                                "Wipe" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                             GHC.Generics.U1)
                       @ (GHC.Generics.C1
                            ('GHC.Generics.MetaCons
                               "Blend" 'GHC.Generics.PrefixI 'GHC.Types.False)
                            GHC.Generics.U1
                          GHC.Generics.:+: GHC.Generics.C1
                                             ('GHC.Generics.MetaCons
                                                "Checkerboard"
                                                'GHC.Generics.PrefixI
                                                'GHC.Types.False)
                                             GHC.Generics.U1)
                       @ Data.Aeson.Types.Generic.Zero
                       Models.$fFromJSONTool26
                         `cast`
                       (Sym (Data.Aeson.Types.FromJSON.N:SumFromString[0]
                                 <GHC.Types.*>_N
                                 <(GHC.Generics.C1
                                     ('GHC.Generics.MetaCons
                                        "ZipImage" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                     GHC.Generics.U1
                                   GHC.Generics.:+: GHC.Generics.C1
                                                      ('GHC.Generics.MetaCons
                                                         "Wipe"
                                                         'GHC.Generics.PrefixI
                                                         'GHC.Types.False)
                                                      GHC.Generics.U1)
                                  GHC.Generics.:+: (GHC.Generics.C1
                                                      ('GHC.Generics.MetaCons
                                                         "Blend"
                                                         'GHC.Generics.PrefixI
                                                         'GHC.Types.False)
                                                      GHC.Generics.U1
                                                    GHC.Generics.:+: GHC.Generics.C1
                                                                       ('GHC.Generics.MetaCons
                                                                          "Checkerboard"
                                                                          'GHC.Generics.PrefixI
                                                                          'GHC.Types.False)
                                                                       GHC.Generics.U1)>_N))
                       Models.$fFromJSONTool18
                         `cast`
                       (Sym (Data.Aeson.Types.FromJSON.N:FromPair[0]
                                 <Data.Aeson.Types.Generic.Zero>_N
                                 <(GHC.Generics.C1
                                     ('GHC.Generics.MetaCons
                                        "ZipImage" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                     GHC.Generics.U1
                                   GHC.Generics.:+: GHC.Generics.C1
                                                      ('GHC.Generics.MetaCons
                                                         "Wipe"
                                                         'GHC.Generics.PrefixI
                                                         'GHC.Types.False)
                                                      GHC.Generics.U1)
                                  GHC.Generics.:+: (GHC.Generics.C1
                                                      ('GHC.Generics.MetaCons
                                                         "Blend"
                                                         'GHC.Generics.PrefixI
                                                         'GHC.Types.False)
                                                      GHC.Generics.U1
                                                    GHC.Generics.:+: GHC.Generics.C1
                                                                       ('GHC.Generics.MetaCons
                                                                          "Checkerboard"
                                                                          'GHC.Generics.PrefixI
                                                                          'GHC.Types.False)
                                                                       GHC.Generics.U1)>_N))
                       Models.$fFromJSONTool10
                         `cast`
                       (Sym (Data.Aeson.Types.FromJSON.N:FromTaggedObject[0]
                                 <Data.Aeson.Types.Generic.Zero>_N
                                 <(GHC.Generics.C1
                                     ('GHC.Generics.MetaCons
                                        "ZipImage" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                     GHC.Generics.U1
                                   GHC.Generics.:+: GHC.Generics.C1
                                                      ('GHC.Generics.MetaCons
                                                         "Wipe"
                                                         'GHC.Generics.PrefixI
                                                         'GHC.Types.False)
                                                      GHC.Generics.U1)
                                  GHC.Generics.:+: (GHC.Generics.C1
                                                      ('GHC.Generics.MetaCons
                                                         "Blend"
                                                         'GHC.Generics.PrefixI
                                                         'GHC.Types.False)
                                                      GHC.Generics.U1
                                                    GHC.Generics.:+: GHC.Generics.C1
                                                                       ('GHC.Generics.MetaCons
                                                                          "Checkerboard"
                                                                          'GHC.Generics.PrefixI
                                                                          'GHC.Types.False)
                                                                       GHC.Generics.U1)>_N))
                       Models.$fFromJSONTool5
                         `cast`
                       (Sym (Data.Aeson.Types.FromJSON.N:FromUntaggedValue[0]
                                 <Data.Aeson.Types.Generic.Zero>_N
                                 <(GHC.Generics.C1
                                     ('GHC.Generics.MetaCons
                                        "ZipImage" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                     GHC.Generics.U1
                                   GHC.Generics.:+: GHC.Generics.C1
                                                      ('GHC.Generics.MetaCons
                                                         "Wipe"
                                                         'GHC.Generics.PrefixI
                                                         'GHC.Types.False)
                                                      GHC.Generics.U1)
                                  GHC.Generics.:+: (GHC.Generics.C1
                                                      ('GHC.Generics.MetaCons
                                                         "Blend"
                                                         'GHC.Generics.PrefixI
                                                         'GHC.Types.False)
                                                      GHC.Generics.U1
                                                    GHC.Generics.:+: GHC.Generics.C1
                                                                       ('GHC.Generics.MetaCons
                                                                          "Checkerboard"
                                                                          'GHC.Generics.PrefixI
                                                                          'GHC.Types.False)
                                                                       GHC.Generics.U1)>_N))
                       @ a1
                       ww1
                       ww2
                       ww3
                       ww4
                       ww5
                       ww6
                       fargs }
                 } in
                 \ (x :: Data.Aeson.Types.Internal.Value) ->
                 let {
                   m :: Data.Tagged.Tagged
                          Data.Aeson.Types.Generic.True
                          (Data.Aeson.Types.Internal.Parser
                             ((GHC.Generics.:+:)
                                (GHC.Generics.C1
                                   ('GHC.Generics.MetaCons
                                      "ZipImage" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                   GHC.Generics.U1
                                 GHC.Generics.:+: GHC.Generics.C1
                                                    ('GHC.Generics.MetaCons
                                                       "Wipe"
                                                       'GHC.Generics.PrefixI
                                                       'GHC.Types.False)
                                                    GHC.Generics.U1)
                                (GHC.Generics.C1
                                   ('GHC.Generics.MetaCons
                                      "Blend" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                   GHC.Generics.U1
                                 GHC.Generics.:+: GHC.Generics.C1
                                                    ('GHC.Generics.MetaCons
                                                       "Checkerboard"
                                                       'GHC.Generics.PrefixI
                                                       'GHC.Types.False)
                                                    GHC.Generics.U1)
                                a1))
                   = g x
                 } in
                 (\ @ (f4 :: * -> *)
                    @ r
                    (path :: Data.Aeson.Types.Internal.JSONPath)
                    (kf :: Data.Aeson.Types.Internal.Failure f4 r)
                    (ks :: Data.Aeson.Types.Internal.Success
                             (GHC.Generics.M1
                                GHC.Generics.D
                                ('GHC.Generics.MetaData
                                   "Tool"
                                   "Models"
                                   "picFun-0.1.0.0-JNPOSgLeq7jJoAtQCvQXmk"
                                   'GHC.Types.False)
                                ((GHC.Generics.C1
                                    ('GHC.Generics.MetaCons
                                       "ZipImage" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                    GHC.Generics.U1
                                  GHC.Generics.:+: GHC.Generics.C1
                                                     ('GHC.Generics.MetaCons
                                                        "Wipe"
                                                        'GHC.Generics.PrefixI
                                                        'GHC.Types.False)
                                                     GHC.Generics.U1)
                                 GHC.Generics.:+: (GHC.Generics.C1
                                                     ('GHC.Generics.MetaCons
                                                        "Blend"
                                                        'GHC.Generics.PrefixI
                                                        'GHC.Types.False)
                                                     GHC.Generics.U1
                                                   GHC.Generics.:+: GHC.Generics.C1
                                                                      ('GHC.Generics.MetaCons
                                                                         "Checkerboard"
                                                                         'GHC.Generics.PrefixI
                                                                         'GHC.Types.False)
                                                                      GHC.Generics.U1))
                                a1)
                             f4
                             r) ->
                  m `cast`
                  (Trans
                       (Data.Tagged.N:Tagged[0]
                            <*>_N
                            <Data.Aeson.Types.Generic.True>_P
                            <Data.Aeson.Types.Internal.Parser
                               ((GHC.Generics.:+:)
                                  (GHC.Generics.C1
                                     ('GHC.Generics.MetaCons
                                        "ZipImage" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                     GHC.Generics.U1
                                   GHC.Generics.:+: GHC.Generics.C1
                                                      ('GHC.Generics.MetaCons
                                                         "Wipe"
                                                         'GHC.Generics.PrefixI
                                                         'GHC.Types.False)
                                                      GHC.Generics.U1)
                                  (GHC.Generics.C1
                                     ('GHC.Generics.MetaCons
                                        "Blend" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                     GHC.Generics.U1
                                   GHC.Generics.:+: GHC.Generics.C1
                                                      ('GHC.Generics.MetaCons
                                                         "Checkerboard"
                                                         'GHC.Generics.PrefixI
                                                         'GHC.Types.False)
                                                      GHC.Generics.U1)
                                  a1)>_R)
                       (Data.Aeson.Types.Internal.N:Parser[0]
                            <(GHC.Generics.:+:)
                               (GHC.Generics.C1
                                  ('GHC.Generics.MetaCons
                                     "ZipImage" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                  GHC.Generics.U1
                                GHC.Generics.:+: GHC.Generics.C1
                                                   ('GHC.Generics.MetaCons
                                                      "Wipe" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                                   GHC.Generics.U1)
                               (GHC.Generics.C1
                                  ('GHC.Generics.MetaCons
                                     "Blend" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                  GHC.Generics.U1
                                GHC.Generics.:+: GHC.Generics.C1
                                                   ('GHC.Generics.MetaCons
                                                      "Checkerboard"
                                                      'GHC.Generics.PrefixI
                                                      'GHC.Types.False)
                                                   GHC.Generics.U1)
                               a1>_R))
                    @ f4
                    @ r
                    path
                    kf
                    (\ (a2 :: (GHC.Generics.:+:)
                                (GHC.Generics.C1
                                   ('GHC.Generics.MetaCons
                                      "ZipImage" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                   GHC.Generics.U1
                                 GHC.Generics.:+: GHC.Generics.C1
                                                    ('GHC.Generics.MetaCons
                                                       "Wipe"
                                                       'GHC.Generics.PrefixI
                                                       'GHC.Types.False)
                                                    GHC.Generics.U1)
                                (GHC.Generics.C1
                                   ('GHC.Generics.MetaCons
                                      "Blend" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                   GHC.Generics.U1
                                 GHC.Generics.:+: GHC.Generics.C1
                                                    ('GHC.Generics.MetaCons
                                                       "Checkerboard"
                                                       'GHC.Generics.PrefixI
                                                       'GHC.Types.False)
                                                    GHC.Generics.U1)
                                a1) ->
                     ks
                       a2
                         `cast`
                       (Sym (GHC.Generics.N:M1[0]
                                 <GHC.Generics.D>_P
                                 <'GHC.Generics.MetaData
                                    "Tool"
                                    "Models"
                                    "picFun-0.1.0.0-JNPOSgLeq7jJoAtQCvQXmk"
                                    'GHC.Types.False>_P
                                 <(GHC.Generics.C1
                                     ('GHC.Generics.MetaCons
                                        "ZipImage" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                     GHC.Generics.U1
                                   GHC.Generics.:+: GHC.Generics.C1
                                                      ('GHC.Generics.MetaCons
                                                         "Wipe"
                                                         'GHC.Generics.PrefixI
                                                         'GHC.Types.False)
                                                      GHC.Generics.U1)
                                  GHC.Generics.:+: (GHC.Generics.C1
                                                      ('GHC.Generics.MetaCons
                                                         "Blend"
                                                         'GHC.Generics.PrefixI
                                                         'GHC.Types.False)
                                                      GHC.Generics.U1
                                                    GHC.Generics.:+: GHC.Generics.C1
                                                                       ('GHC.Generics.MetaCons
                                                                          "Checkerboard"
                                                                          'GHC.Generics.PrefixI
                                                                          'GHC.Types.False)
                                                                       GHC.Generics.U1)>_R) <a1>_N)))
                   `cast`
                 (Sym (Data.Aeson.Types.Internal.N:Parser[0]
                           <GHC.Generics.M1
                              GHC.Generics.D
                              ('GHC.Generics.MetaData
                                 "Tool"
                                 "Models"
                                 "picFun-0.1.0.0-JNPOSgLeq7jJoAtQCvQXmk"
                                 'GHC.Types.False)
                              ((GHC.Generics.C1
                                  ('GHC.Generics.MetaCons
                                     "ZipImage" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                  GHC.Generics.U1
                                GHC.Generics.:+: GHC.Generics.C1
                                                   ('GHC.Generics.MetaCons
                                                      "Wipe" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                                   GHC.Generics.U1)
                               GHC.Generics.:+: (GHC.Generics.C1
                                                   ('GHC.Generics.MetaCons
                                                      "Blend"
                                                      'GHC.Generics.PrefixI
                                                      'GHC.Types.False)
                                                   GHC.Generics.U1
                                                 GHC.Generics.:+: GHC.Generics.C1
                                                                    ('GHC.Generics.MetaCons
                                                                       "Checkerboard"
                                                                       'GHC.Generics.PrefixI
                                                                       'GHC.Types.False)
                                                                    GHC.Generics.U1))
                              a1>_R))) -}
0fc7f481fbc370b2d7df28bc287fd36c
  $fFromJSONTool5 ::
    Data.Aeson.Types.Internal.Options
    -> Data.Aeson.Types.FromJSON.FromArgs
         Data.Aeson.Types.Generic.Zero a1
    -> Data.Aeson.Types.Internal.Value
    -> Data.Aeson.Types.Internal.Parser
         ((GHC.Generics.:+:)
            (GHC.Generics.C1
               ('GHC.Generics.MetaCons
                  "ZipImage" 'GHC.Generics.PrefixI 'GHC.Types.False)
               GHC.Generics.U1
             GHC.Generics.:+: GHC.Generics.C1
                                ('GHC.Generics.MetaCons
                                   "Wipe" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                GHC.Generics.U1)
            (GHC.Generics.C1
               ('GHC.Generics.MetaCons
                  "Blend" 'GHC.Generics.PrefixI 'GHC.Types.False)
               GHC.Generics.U1
             GHC.Generics.:+: GHC.Generics.C1
                                ('GHC.Generics.MetaCons
                                   "Checkerboard" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                GHC.Generics.U1)
            a1)
  {- Arity: 3, Strictness: <L,U(A,C(U),A,A,A,A)><L,A><L,U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (3, True, True)
                (\ @ a1
                   (w :: Data.Aeson.Types.Internal.Options)
                   (w1 :: Data.Aeson.Types.FromJSON.FromArgs
                            Data.Aeson.Types.Generic.Zero a1)
                   (w2 :: Data.Aeson.Types.Internal.Value) ->
                 Models.$w$dFromUntaggedValue @ a1 w w2) -}
e0fdb45870d480ec6b82e7ee0a331f34
  $fFromJSONTool6 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Checkerboard"#) -}
e9bf91259d7e2edb674e08dae5761f7f
  $fFromJSONTool7 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Blend"#) -}
54bd21eace2bb74b90855e4231a348ac
  $fFromJSONTool8 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Wipe"#) -}
1c8245630ad3ac396df0d1598a170526
  $fFromJSONTool9 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "ZipImage"#) -}
3691ed8b5e249ec582535ba8aa70b6ee
  $fFromJSONTool_$cparseJSON ::
    Data.Aeson.Types.Internal.Value
    -> Data.Aeson.Types.Internal.Parser Models.Tool
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: (\ (x :: Data.Aeson.Types.Internal.Value) ->
                 let {
                   m :: Data.Aeson.Types.Internal.Parser
                          (GHC.Generics.M1
                             GHC.Generics.D
                             ('GHC.Generics.MetaData
                                "Tool"
                                "Models"
                                "picFun-0.1.0.0-JNPOSgLeq7jJoAtQCvQXmk"
                                'GHC.Types.False)
                             ((GHC.Generics.C1
                                 ('GHC.Generics.MetaCons
                                    "ZipImage" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                 GHC.Generics.U1
                               GHC.Generics.:+: GHC.Generics.C1
                                                  ('GHC.Generics.MetaCons
                                                     "Wipe" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                                  GHC.Generics.U1)
                              GHC.Generics.:+: (GHC.Generics.C1
                                                  ('GHC.Generics.MetaCons
                                                     "Blend" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                                  GHC.Generics.U1
                                                GHC.Generics.:+: GHC.Generics.C1
                                                                   ('GHC.Generics.MetaCons
                                                                      "Checkerboard"
                                                                      'GHC.Generics.PrefixI
                                                                      'GHC.Types.False)
                                                                   GHC.Generics.U1))
                             GHC.Prim.Any)
                   = Models.$fFromJSONTool3 x
                 } in
                 (\ @ (f4 :: * -> *)
                    @ r
                    (path :: Data.Aeson.Types.Internal.JSONPath)
                    (kf :: Data.Aeson.Types.Internal.Failure f4 r)
                    (ks :: Data.Aeson.Types.Internal.Success Models.Tool f4 r) ->
                  m `cast`
                  (Data.Aeson.Types.Internal.N:Parser[0]
                       (Sub (Sym (Models.Rep_Tool[0])) <GHC.Prim.Any>_N))
                    @ f4
                    @ r
                    path
                    kf
                    (\ (a1 :: GHC.Generics.Rep Models.Tool GHC.Prim.Any) ->
                     ks (Models.$fFromJSONTool_$cto @ GHC.Prim.Any a1)))
                   `cast`
                 (Sym (Data.Aeson.Types.Internal.N:Parser[0] <Models.Tool>_R))) -}
3691ed8b5e249ec582535ba8aa70b6ee
  $fFromJSONTool_$cparseJSONList ::
    Data.Aeson.Types.Internal.Value
    -> Data.Aeson.Types.Internal.Parser [Models.Tool]
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ (ds :: Data.Aeson.Types.Internal.Value) ->
                 case ds of wild {
                   DEFAULT
                   -> Data.Aeson.Types.FromJSON.typeMismatch
                        @ [Models.Tool]
                        Models.$fFromJSONTool2
                        wild
                   Data.Aeson.Types.Internal.Array a1
                   -> case a1 of wild1 { Data.Vector.Vector dt dt1 dt2 ->
                      (Models.$fFromJSONTool1
                         (letrec {
                            $wgo :: GHC.Prim.Int# -> [Data.Aeson.Types.Internal.Value]
                              {- Arity: 1, Strictness: <S,U>, Inline: [0] -}
                            = \ (ww :: GHC.Prim.Int#) ->
                              case GHC.Prim.tagToEnum#
                                     @ GHC.Types.Bool
                                     (GHC.Prim.>=# ww dt1) of wild2 {
                                GHC.Types.False
                                -> case GHC.Prim.indexArray#
                                          @ Data.Aeson.Types.Internal.Value
                                          dt2
                                          (GHC.Prim.+# dt ww) of ds2 { Unit# ipv ->
                                   GHC.Types.:
                                     @ Data.Aeson.Types.Internal.Value
                                     ipv
                                     ($wgo (GHC.Prim.+# ww 1#)) }
                                GHC.Types.True -> GHC.Types.[] @ Data.Aeson.Types.Internal.Value }
                          } in
                          Models.$fFromJSONTool_go 0# ($wgo 0#)))
                        `cast`
                      (Sym (Data.Aeson.Types.Internal.N:Parser[0]
                                <[Models.Tool]>_R)) } }) -}
3691ed8b5e249ec582535ba8aa70b6ee
  $fFromJSONTool_$cto ::
    GHC.Generics.Rep Models.Tool x -> Models.Tool
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>,
     Unfolding: (\ @ x (ds :: GHC.Generics.Rep Models.Tool x) ->
                 case ds
                        `cast`
                      (Trans
                           (Sub (Models.Rep_Tool[0]))
                           (GHC.Generics.N:M1[0]
                                <GHC.Generics.D>_P
                                <'GHC.Generics.MetaData
                                   "Tool"
                                   "Models"
                                   "picFun-0.1.0.0-JNPOSgLeq7jJoAtQCvQXmk"
                                   'GHC.Types.False>_P
                                <(GHC.Generics.M1
                                    GHC.Generics.C
                                    ('GHC.Generics.MetaCons
                                       "ZipImage" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                    GHC.Generics.U1
                                  GHC.Generics.:+: GHC.Generics.M1
                                                     GHC.Generics.C
                                                     ('GHC.Generics.MetaCons
                                                        "Wipe"
                                                        'GHC.Generics.PrefixI
                                                        'GHC.Types.False)
                                                     GHC.Generics.U1)
                                 GHC.Generics.:+: (GHC.Generics.M1
                                                     GHC.Generics.C
                                                     ('GHC.Generics.MetaCons
                                                        "Blend"
                                                        'GHC.Generics.PrefixI
                                                        'GHC.Types.False)
                                                     GHC.Generics.U1
                                                   GHC.Generics.:+: GHC.Generics.M1
                                                                      GHC.Generics.C
                                                                      ('GHC.Generics.MetaCons
                                                                         "Checkerboard"
                                                                         'GHC.Generics.PrefixI
                                                                         'GHC.Types.False)
                                                                      GHC.Generics.U1)>_R) <x>_N) of wild {
                   GHC.Generics.L1 ds1
                   -> case ds1 of wild1 {
                        GHC.Generics.L1 ds2
                        -> case ds2 of tpl { DEFAULT -> Models.ZipImage }
                        GHC.Generics.R1 ds2 -> case ds2 of tpl { DEFAULT -> Models.Wipe } }
                   GHC.Generics.R1 ds1
                   -> case ds1 of wild1 {
                        GHC.Generics.L1 ds2 -> case ds2 of tpl { DEFAULT -> Models.Blend }
                        GHC.Generics.R1 ds2
                        -> case ds2 of tpl { DEFAULT -> Models.Checkerboard } } }) -}
028c7e607a41189cbdf89f65c7f0b75a
  $fFromJSONTool_$s$fConstructorMetaMetaCons ::
    GHC.Generics.Constructor
      ('GHC.Generics.MetaCons
         "Checkerboard" 'GHC.Generics.PrefixI 'GHC.Types.False)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ GHC.Generics.Meta
                  @ ('GHC.Generics.MetaCons
                       "Checkerboard" 'GHC.Generics.PrefixI 'GHC.Types.False)
                  (GHC.Generics.$fConstructorMetaMetaCons_$cconName
                     @ "Checkerboard"
                     @ 'GHC.Generics.PrefixI
                     @ 'GHC.Types.False
                     Models.$fFromJSONTool6
                       `cast`
                     (Trans
                          (Sym (GHC.TypeLits.N:SSymbol[0] <"Checkerboard">_P))
                          (Sym (GHC.TypeLits.N:KnownSymbol[0]) <"Checkerboard">_N))
                     GHC.Generics.$WSPrefix
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.FixityI>_N <'GHC.Generics.PrefixI>_N)
                     GHC.Generics.$WSFalse
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Types.Bool>_N <'GHC.Types.False>_N))
                  (GHC.Generics.$fConstructorMetaMetaCons_$cconFixity
                     @ "Checkerboard"
                     @ 'GHC.Generics.PrefixI
                     @ 'GHC.Types.False
                     Models.$fFromJSONTool6
                       `cast`
                     (Trans
                          (Sym (GHC.TypeLits.N:SSymbol[0] <"Checkerboard">_P))
                          (Sym (GHC.TypeLits.N:KnownSymbol[0]) <"Checkerboard">_N))
                     GHC.Generics.$WSPrefix
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.FixityI>_N <'GHC.Generics.PrefixI>_N)
                     GHC.Generics.$WSFalse
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Types.Bool>_N <'GHC.Types.False>_N))
                  (GHC.Generics.$fConstructorMetaMetaCons_$cconIsRecord
                     @ "Checkerboard"
                     @ 'GHC.Generics.PrefixI
                     @ 'GHC.Types.False
                     Models.$fFromJSONTool6
                       `cast`
                     (Trans
                          (Sym (GHC.TypeLits.N:SSymbol[0] <"Checkerboard">_P))
                          (Sym (GHC.TypeLits.N:KnownSymbol[0]) <"Checkerboard">_N))
                     GHC.Generics.$WSPrefix
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.FixityI>_N <'GHC.Generics.PrefixI>_N)
                     GHC.Generics.$WSFalse
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Types.Bool>_N <'GHC.Types.False>_N)) -}
7225fc5d619b678eb60f898bf3651a05
  $fFromJSONTool_$s$fConstructorMetaMetaCons1 ::
    GHC.Generics.Constructor
      ('GHC.Generics.MetaCons
         "Blend" 'GHC.Generics.PrefixI 'GHC.Types.False)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ GHC.Generics.Meta
                  @ ('GHC.Generics.MetaCons
                       "Blend" 'GHC.Generics.PrefixI 'GHC.Types.False)
                  (GHC.Generics.$fConstructorMetaMetaCons_$cconName
                     @ "Blend"
                     @ 'GHC.Generics.PrefixI
                     @ 'GHC.Types.False
                     Models.$fFromJSONTool7
                       `cast`
                     (Trans
                          (Sym (GHC.TypeLits.N:SSymbol[0] <"Blend">_P))
                          (Sym (GHC.TypeLits.N:KnownSymbol[0]) <"Blend">_N))
                     GHC.Generics.$WSPrefix
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.FixityI>_N <'GHC.Generics.PrefixI>_N)
                     GHC.Generics.$WSFalse
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Types.Bool>_N <'GHC.Types.False>_N))
                  (GHC.Generics.$fConstructorMetaMetaCons_$cconFixity
                     @ "Blend"
                     @ 'GHC.Generics.PrefixI
                     @ 'GHC.Types.False
                     Models.$fFromJSONTool7
                       `cast`
                     (Trans
                          (Sym (GHC.TypeLits.N:SSymbol[0] <"Blend">_P))
                          (Sym (GHC.TypeLits.N:KnownSymbol[0]) <"Blend">_N))
                     GHC.Generics.$WSPrefix
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.FixityI>_N <'GHC.Generics.PrefixI>_N)
                     GHC.Generics.$WSFalse
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Types.Bool>_N <'GHC.Types.False>_N))
                  (GHC.Generics.$fConstructorMetaMetaCons_$cconIsRecord
                     @ "Blend"
                     @ 'GHC.Generics.PrefixI
                     @ 'GHC.Types.False
                     Models.$fFromJSONTool7
                       `cast`
                     (Trans
                          (Sym (GHC.TypeLits.N:SSymbol[0] <"Blend">_P))
                          (Sym (GHC.TypeLits.N:KnownSymbol[0]) <"Blend">_N))
                     GHC.Generics.$WSPrefix
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.FixityI>_N <'GHC.Generics.PrefixI>_N)
                     GHC.Generics.$WSFalse
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Types.Bool>_N <'GHC.Types.False>_N)) -}
ff13153caf6bd734df4de58997fffd34
  $fFromJSONTool_$s$fConstructorMetaMetaCons2 ::
    GHC.Generics.Constructor
      ('GHC.Generics.MetaCons
         "Wipe" 'GHC.Generics.PrefixI 'GHC.Types.False)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ GHC.Generics.Meta
                  @ ('GHC.Generics.MetaCons
                       "Wipe" 'GHC.Generics.PrefixI 'GHC.Types.False)
                  (GHC.Generics.$fConstructorMetaMetaCons_$cconName
                     @ "Wipe"
                     @ 'GHC.Generics.PrefixI
                     @ 'GHC.Types.False
                     Models.$fFromJSONTool8
                       `cast`
                     (Trans
                          (Sym (GHC.TypeLits.N:SSymbol[0] <"Wipe">_P))
                          (Sym (GHC.TypeLits.N:KnownSymbol[0]) <"Wipe">_N))
                     GHC.Generics.$WSPrefix
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.FixityI>_N <'GHC.Generics.PrefixI>_N)
                     GHC.Generics.$WSFalse
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Types.Bool>_N <'GHC.Types.False>_N))
                  (GHC.Generics.$fConstructorMetaMetaCons_$cconFixity
                     @ "Wipe"
                     @ 'GHC.Generics.PrefixI
                     @ 'GHC.Types.False
                     Models.$fFromJSONTool8
                       `cast`
                     (Trans
                          (Sym (GHC.TypeLits.N:SSymbol[0] <"Wipe">_P))
                          (Sym (GHC.TypeLits.N:KnownSymbol[0]) <"Wipe">_N))
                     GHC.Generics.$WSPrefix
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.FixityI>_N <'GHC.Generics.PrefixI>_N)
                     GHC.Generics.$WSFalse
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Types.Bool>_N <'GHC.Types.False>_N))
                  (GHC.Generics.$fConstructorMetaMetaCons_$cconIsRecord
                     @ "Wipe"
                     @ 'GHC.Generics.PrefixI
                     @ 'GHC.Types.False
                     Models.$fFromJSONTool8
                       `cast`
                     (Trans
                          (Sym (GHC.TypeLits.N:SSymbol[0] <"Wipe">_P))
                          (Sym (GHC.TypeLits.N:KnownSymbol[0]) <"Wipe">_N))
                     GHC.Generics.$WSPrefix
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.FixityI>_N <'GHC.Generics.PrefixI>_N)
                     GHC.Generics.$WSFalse
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Types.Bool>_N <'GHC.Types.False>_N)) -}
7a554072b8156d49eab9d7b53a1a74b9
  $fFromJSONTool_$s$fConstructorMetaMetaCons3 ::
    GHC.Generics.Constructor
      ('GHC.Generics.MetaCons
         "ZipImage" 'GHC.Generics.PrefixI 'GHC.Types.False)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ GHC.Generics.Meta
                  @ ('GHC.Generics.MetaCons
                       "ZipImage" 'GHC.Generics.PrefixI 'GHC.Types.False)
                  (GHC.Generics.$fConstructorMetaMetaCons_$cconName
                     @ "ZipImage"
                     @ 'GHC.Generics.PrefixI
                     @ 'GHC.Types.False
                     Models.$fFromJSONTool9
                       `cast`
                     (Trans
                          (Sym (GHC.TypeLits.N:SSymbol[0] <"ZipImage">_P))
                          (Sym (GHC.TypeLits.N:KnownSymbol[0]) <"ZipImage">_N))
                     GHC.Generics.$WSPrefix
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.FixityI>_N <'GHC.Generics.PrefixI>_N)
                     GHC.Generics.$WSFalse
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Types.Bool>_N <'GHC.Types.False>_N))
                  (GHC.Generics.$fConstructorMetaMetaCons_$cconFixity
                     @ "ZipImage"
                     @ 'GHC.Generics.PrefixI
                     @ 'GHC.Types.False
                     Models.$fFromJSONTool9
                       `cast`
                     (Trans
                          (Sym (GHC.TypeLits.N:SSymbol[0] <"ZipImage">_P))
                          (Sym (GHC.TypeLits.N:KnownSymbol[0]) <"ZipImage">_N))
                     GHC.Generics.$WSPrefix
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.FixityI>_N <'GHC.Generics.PrefixI>_N)
                     GHC.Generics.$WSFalse
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Types.Bool>_N <'GHC.Types.False>_N))
                  (GHC.Generics.$fConstructorMetaMetaCons_$cconIsRecord
                     @ "ZipImage"
                     @ 'GHC.Generics.PrefixI
                     @ 'GHC.Types.False
                     Models.$fFromJSONTool9
                       `cast`
                     (Trans
                          (Sym (GHC.TypeLits.N:SSymbol[0] <"ZipImage">_P))
                          (Sym (GHC.TypeLits.N:KnownSymbol[0]) <"ZipImage">_N))
                     GHC.Generics.$WSPrefix
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.FixityI>_N <'GHC.Generics.PrefixI>_N)
                     GHC.Generics.$WSFalse
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Types.Bool>_N <'GHC.Types.False>_N)) -}
3691ed8b5e249ec582535ba8aa70b6ee
  $fFromJSONTool_go ::
    GHC.Prim.Int#
    -> [Data.Aeson.Types.Internal.Value]
    -> [Data.Aeson.Types.Internal.Parser Models.Tool]
  {- Arity: 2, Strictness: <L,U><S,1*U> -}
3691ed8b5e249ec582535ba8aa70b6ee
  $fGenericTool :: GHC.Generics.Generic Models.Tool
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Models.Tool
                  Models.$fGenericTool_$cfrom
                  Models.$fFromJSONTool_$cto -}
3691ed8b5e249ec582535ba8aa70b6ee
  $fGenericTool1 ::
    Models.Tool
    -> (GHC.Generics.:+:)
         (GHC.Generics.M1
            GHC.Generics.C
            ('GHC.Generics.MetaCons
               "ZipImage" 'GHC.Generics.PrefixI 'GHC.Types.False)
            GHC.Generics.U1
          GHC.Generics.:+: GHC.Generics.M1
                             GHC.Generics.C
                             ('GHC.Generics.MetaCons
                                "Wipe" 'GHC.Generics.PrefixI 'GHC.Types.False)
                             GHC.Generics.U1)
         (GHC.Generics.M1
            GHC.Generics.C
            ('GHC.Generics.MetaCons
               "Blend" 'GHC.Generics.PrefixI 'GHC.Types.False)
            GHC.Generics.U1
          GHC.Generics.:+: GHC.Generics.M1
                             GHC.Generics.C
                             ('GHC.Generics.MetaCons
                                "Checkerboard" 'GHC.Generics.PrefixI 'GHC.Types.False)
                             GHC.Generics.U1)
         x
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ @ x (x1 :: Models.Tool) ->
                 case x1 of wild {
                   Models.ZipImage -> Models.$fGenericTool8 @ x
                   Models.Wipe -> Models.$fGenericTool6 @ x
                   Models.Blend -> Models.$fGenericTool4 @ x
                   Models.Checkerboard -> Models.$fGenericTool2 @ x }) -}
43e6b03e64452f544816fa6c0d127708
  $fGenericTool2 ::
    (GHC.Generics.:+:)
      (GHC.Generics.M1
         GHC.Generics.C
         ('GHC.Generics.MetaCons
            "ZipImage" 'GHC.Generics.PrefixI 'GHC.Types.False)
         GHC.Generics.U1
       GHC.Generics.:+: GHC.Generics.M1
                          GHC.Generics.C
                          ('GHC.Generics.MetaCons
                             "Wipe" 'GHC.Generics.PrefixI 'GHC.Types.False)
                          GHC.Generics.U1)
      (GHC.Generics.M1
         GHC.Generics.C
         ('GHC.Generics.MetaCons
            "Blend" 'GHC.Generics.PrefixI 'GHC.Types.False)
         GHC.Generics.U1
       GHC.Generics.:+: GHC.Generics.M1
                          GHC.Generics.C
                          ('GHC.Generics.MetaCons
                             "Checkerboard" 'GHC.Generics.PrefixI 'GHC.Types.False)
                          GHC.Generics.U1)
      x
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (\ @ x ->
                 GHC.Generics.R1
                   @ (GHC.Generics.M1
                        GHC.Generics.C
                        ('GHC.Generics.MetaCons
                           "ZipImage" 'GHC.Generics.PrefixI 'GHC.Types.False)
                        GHC.Generics.U1
                      GHC.Generics.:+: GHC.Generics.M1
                                         GHC.Generics.C
                                         ('GHC.Generics.MetaCons
                                            "Wipe" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                         GHC.Generics.U1)
                   @ (GHC.Generics.M1
                        GHC.Generics.C
                        ('GHC.Generics.MetaCons
                           "Blend" 'GHC.Generics.PrefixI 'GHC.Types.False)
                        GHC.Generics.U1
                      GHC.Generics.:+: GHC.Generics.M1
                                         GHC.Generics.C
                                         ('GHC.Generics.MetaCons
                                            "Checkerboard" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                         GHC.Generics.U1)
                   @ x
                   (Models.$fGenericTool3 @ x)) -}
99cc63776b3ddea8b9eeec52cabf0d13
  $fGenericTool3 ::
    (GHC.Generics.:+:)
      (GHC.Generics.M1
         GHC.Generics.C
         ('GHC.Generics.MetaCons
            "Blend" 'GHC.Generics.PrefixI 'GHC.Types.False)
         GHC.Generics.U1)
      (GHC.Generics.M1
         GHC.Generics.C
         ('GHC.Generics.MetaCons
            "Checkerboard" 'GHC.Generics.PrefixI 'GHC.Types.False)
         GHC.Generics.U1)
      x
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (\ @ x ->
                 GHC.Generics.R1
                   @ (GHC.Generics.M1
                        GHC.Generics.C
                        ('GHC.Generics.MetaCons
                           "Blend" 'GHC.Generics.PrefixI 'GHC.Types.False)
                        GHC.Generics.U1)
                   @ (GHC.Generics.M1
                        GHC.Generics.C
                        ('GHC.Generics.MetaCons
                           "Checkerboard" 'GHC.Generics.PrefixI 'GHC.Types.False)
                        GHC.Generics.U1)
                   @ x
                   (GHC.Generics.U1 @ x)
                     `cast`
                   (Sym (GHC.Generics.N:M1[0]
                             <GHC.Generics.C>_P
                             <'GHC.Generics.MetaCons
                                "Checkerboard" 'GHC.Generics.PrefixI 'GHC.Types.False>_P
                             <GHC.Generics.U1>_R) <x>_N)) -}
300b6fc40494fe918f6d71a9648ad642
  $fGenericTool4 ::
    (GHC.Generics.:+:)
      (GHC.Generics.M1
         GHC.Generics.C
         ('GHC.Generics.MetaCons
            "ZipImage" 'GHC.Generics.PrefixI 'GHC.Types.False)
         GHC.Generics.U1
       GHC.Generics.:+: GHC.Generics.M1
                          GHC.Generics.C
                          ('GHC.Generics.MetaCons
                             "Wipe" 'GHC.Generics.PrefixI 'GHC.Types.False)
                          GHC.Generics.U1)
      (GHC.Generics.M1
         GHC.Generics.C
         ('GHC.Generics.MetaCons
            "Blend" 'GHC.Generics.PrefixI 'GHC.Types.False)
         GHC.Generics.U1
       GHC.Generics.:+: GHC.Generics.M1
                          GHC.Generics.C
                          ('GHC.Generics.MetaCons
                             "Checkerboard" 'GHC.Generics.PrefixI 'GHC.Types.False)
                          GHC.Generics.U1)
      x
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (\ @ x ->
                 GHC.Generics.R1
                   @ (GHC.Generics.M1
                        GHC.Generics.C
                        ('GHC.Generics.MetaCons
                           "ZipImage" 'GHC.Generics.PrefixI 'GHC.Types.False)
                        GHC.Generics.U1
                      GHC.Generics.:+: GHC.Generics.M1
                                         GHC.Generics.C
                                         ('GHC.Generics.MetaCons
                                            "Wipe" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                         GHC.Generics.U1)
                   @ (GHC.Generics.M1
                        GHC.Generics.C
                        ('GHC.Generics.MetaCons
                           "Blend" 'GHC.Generics.PrefixI 'GHC.Types.False)
                        GHC.Generics.U1
                      GHC.Generics.:+: GHC.Generics.M1
                                         GHC.Generics.C
                                         ('GHC.Generics.MetaCons
                                            "Checkerboard" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                         GHC.Generics.U1)
                   @ x
                   (Models.$fGenericTool5 @ x)) -}
7e85e38dfed96f086b980a1e4adc7607
  $fGenericTool5 ::
    (GHC.Generics.:+:)
      (GHC.Generics.M1
         GHC.Generics.C
         ('GHC.Generics.MetaCons
            "Blend" 'GHC.Generics.PrefixI 'GHC.Types.False)
         GHC.Generics.U1)
      (GHC.Generics.M1
         GHC.Generics.C
         ('GHC.Generics.MetaCons
            "Checkerboard" 'GHC.Generics.PrefixI 'GHC.Types.False)
         GHC.Generics.U1)
      x
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (\ @ x ->
                 GHC.Generics.L1
                   @ (GHC.Generics.M1
                        GHC.Generics.C
                        ('GHC.Generics.MetaCons
                           "Blend" 'GHC.Generics.PrefixI 'GHC.Types.False)
                        GHC.Generics.U1)
                   @ (GHC.Generics.M1
                        GHC.Generics.C
                        ('GHC.Generics.MetaCons
                           "Checkerboard" 'GHC.Generics.PrefixI 'GHC.Types.False)
                        GHC.Generics.U1)
                   @ x
                   (GHC.Generics.U1 @ x)
                     `cast`
                   (Sym (GHC.Generics.N:M1[0]
                             <GHC.Generics.C>_P
                             <'GHC.Generics.MetaCons
                                "Blend" 'GHC.Generics.PrefixI 'GHC.Types.False>_P
                             <GHC.Generics.U1>_R) <x>_N)) -}
c5fbe765da8b423e70c9f023f8aede06
  $fGenericTool6 ::
    (GHC.Generics.:+:)
      (GHC.Generics.M1
         GHC.Generics.C
         ('GHC.Generics.MetaCons
            "ZipImage" 'GHC.Generics.PrefixI 'GHC.Types.False)
         GHC.Generics.U1
       GHC.Generics.:+: GHC.Generics.M1
                          GHC.Generics.C
                          ('GHC.Generics.MetaCons
                             "Wipe" 'GHC.Generics.PrefixI 'GHC.Types.False)
                          GHC.Generics.U1)
      (GHC.Generics.M1
         GHC.Generics.C
         ('GHC.Generics.MetaCons
            "Blend" 'GHC.Generics.PrefixI 'GHC.Types.False)
         GHC.Generics.U1
       GHC.Generics.:+: GHC.Generics.M1
                          GHC.Generics.C
                          ('GHC.Generics.MetaCons
                             "Checkerboard" 'GHC.Generics.PrefixI 'GHC.Types.False)
                          GHC.Generics.U1)
      x
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (\ @ x ->
                 GHC.Generics.L1
                   @ (GHC.Generics.M1
                        GHC.Generics.C
                        ('GHC.Generics.MetaCons
                           "ZipImage" 'GHC.Generics.PrefixI 'GHC.Types.False)
                        GHC.Generics.U1
                      GHC.Generics.:+: GHC.Generics.M1
                                         GHC.Generics.C
                                         ('GHC.Generics.MetaCons
                                            "Wipe" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                         GHC.Generics.U1)
                   @ (GHC.Generics.M1
                        GHC.Generics.C
                        ('GHC.Generics.MetaCons
                           "Blend" 'GHC.Generics.PrefixI 'GHC.Types.False)
                        GHC.Generics.U1
                      GHC.Generics.:+: GHC.Generics.M1
                                         GHC.Generics.C
                                         ('GHC.Generics.MetaCons
                                            "Checkerboard" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                         GHC.Generics.U1)
                   @ x
                   (Models.$fGenericTool7 @ x)) -}
d42ea3684e3e24263ce02174ca43303a
  $fGenericTool7 ::
    (GHC.Generics.:+:)
      (GHC.Generics.M1
         GHC.Generics.C
         ('GHC.Generics.MetaCons
            "ZipImage" 'GHC.Generics.PrefixI 'GHC.Types.False)
         GHC.Generics.U1)
      (GHC.Generics.M1
         GHC.Generics.C
         ('GHC.Generics.MetaCons
            "Wipe" 'GHC.Generics.PrefixI 'GHC.Types.False)
         GHC.Generics.U1)
      x
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (\ @ x ->
                 GHC.Generics.R1
                   @ (GHC.Generics.M1
                        GHC.Generics.C
                        ('GHC.Generics.MetaCons
                           "ZipImage" 'GHC.Generics.PrefixI 'GHC.Types.False)
                        GHC.Generics.U1)
                   @ (GHC.Generics.M1
                        GHC.Generics.C
                        ('GHC.Generics.MetaCons
                           "Wipe" 'GHC.Generics.PrefixI 'GHC.Types.False)
                        GHC.Generics.U1)
                   @ x
                   (GHC.Generics.U1 @ x)
                     `cast`
                   (Sym (GHC.Generics.N:M1[0]
                             <GHC.Generics.C>_P
                             <'GHC.Generics.MetaCons
                                "Wipe" 'GHC.Generics.PrefixI 'GHC.Types.False>_P
                             <GHC.Generics.U1>_R) <x>_N)) -}
7dcbe9c6bff148ee171fb625f2aae234
  $fGenericTool8 ::
    (GHC.Generics.:+:)
      (GHC.Generics.M1
         GHC.Generics.C
         ('GHC.Generics.MetaCons
            "ZipImage" 'GHC.Generics.PrefixI 'GHC.Types.False)
         GHC.Generics.U1
       GHC.Generics.:+: GHC.Generics.M1
                          GHC.Generics.C
                          ('GHC.Generics.MetaCons
                             "Wipe" 'GHC.Generics.PrefixI 'GHC.Types.False)
                          GHC.Generics.U1)
      (GHC.Generics.M1
         GHC.Generics.C
         ('GHC.Generics.MetaCons
            "Blend" 'GHC.Generics.PrefixI 'GHC.Types.False)
         GHC.Generics.U1
       GHC.Generics.:+: GHC.Generics.M1
                          GHC.Generics.C
                          ('GHC.Generics.MetaCons
                             "Checkerboard" 'GHC.Generics.PrefixI 'GHC.Types.False)
                          GHC.Generics.U1)
      x
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (\ @ x ->
                 GHC.Generics.L1
                   @ (GHC.Generics.M1
                        GHC.Generics.C
                        ('GHC.Generics.MetaCons
                           "ZipImage" 'GHC.Generics.PrefixI 'GHC.Types.False)
                        GHC.Generics.U1
                      GHC.Generics.:+: GHC.Generics.M1
                                         GHC.Generics.C
                                         ('GHC.Generics.MetaCons
                                            "Wipe" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                         GHC.Generics.U1)
                   @ (GHC.Generics.M1
                        GHC.Generics.C
                        ('GHC.Generics.MetaCons
                           "Blend" 'GHC.Generics.PrefixI 'GHC.Types.False)
                        GHC.Generics.U1
                      GHC.Generics.:+: GHC.Generics.M1
                                         GHC.Generics.C
                                         ('GHC.Generics.MetaCons
                                            "Checkerboard" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                         GHC.Generics.U1)
                   @ x
                   (Models.$fGenericTool9 @ x)) -}
97537ee188eea40362ba391b7d9e1453
  $fGenericTool9 ::
    (GHC.Generics.:+:)
      (GHC.Generics.M1
         GHC.Generics.C
         ('GHC.Generics.MetaCons
            "ZipImage" 'GHC.Generics.PrefixI 'GHC.Types.False)
         GHC.Generics.U1)
      (GHC.Generics.M1
         GHC.Generics.C
         ('GHC.Generics.MetaCons
            "Wipe" 'GHC.Generics.PrefixI 'GHC.Types.False)
         GHC.Generics.U1)
      x
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (\ @ x ->
                 GHC.Generics.L1
                   @ (GHC.Generics.M1
                        GHC.Generics.C
                        ('GHC.Generics.MetaCons
                           "ZipImage" 'GHC.Generics.PrefixI 'GHC.Types.False)
                        GHC.Generics.U1)
                   @ (GHC.Generics.M1
                        GHC.Generics.C
                        ('GHC.Generics.MetaCons
                           "Wipe" 'GHC.Generics.PrefixI 'GHC.Types.False)
                        GHC.Generics.U1)
                   @ x
                   (GHC.Generics.U1 @ x)
                     `cast`
                   (Sym (GHC.Generics.N:M1[0]
                             <GHC.Generics.C>_P
                             <'GHC.Generics.MetaCons
                                "ZipImage" 'GHC.Generics.PrefixI 'GHC.Types.False>_P
                             <GHC.Generics.U1>_R) <x>_N)) -}
3691ed8b5e249ec582535ba8aa70b6ee
  $fGenericTool_$cfrom ::
    Models.Tool -> GHC.Generics.Rep Models.Tool x
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>,
     Unfolding: InlineRule (0, True, True)
                Models.$fGenericTool1
                  `cast`
                (forall (x :: <GHC.Types.*>_N).
                 <Models.Tool>_R
                 ->_R Trans
                          (Sym (GHC.Generics.N:M1[0]
                                    <GHC.Generics.D>_P
                                    <'GHC.Generics.MetaData
                                       "Tool"
                                       "Models"
                                       "picFun-0.1.0.0-JNPOSgLeq7jJoAtQCvQXmk"
                                       'GHC.Types.False>_P
                                    <(GHC.Generics.M1
                                        GHC.Generics.C
                                        ('GHC.Generics.MetaCons
                                           "ZipImage" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                        GHC.Generics.U1
                                      GHC.Generics.:+: GHC.Generics.M1
                                                         GHC.Generics.C
                                                         ('GHC.Generics.MetaCons
                                                            "Wipe"
                                                            'GHC.Generics.PrefixI
                                                            'GHC.Types.False)
                                                         GHC.Generics.U1)
                                     GHC.Generics.:+: (GHC.Generics.M1
                                                         GHC.Generics.C
                                                         ('GHC.Generics.MetaCons
                                                            "Blend"
                                                            'GHC.Generics.PrefixI
                                                            'GHC.Types.False)
                                                         GHC.Generics.U1
                                                       GHC.Generics.:+: GHC.Generics.M1
                                                                          GHC.Generics.C
                                                                          ('GHC.Generics.MetaCons
                                                                             "Checkerboard"
                                                                             'GHC.Generics.PrefixI
                                                                             'GHC.Types.False)
                                                                          GHC.Generics.U1)>_R))
                          (Sub (Sym (Models.Rep_Tool[0]))) <x>_N) -}
3691ed8b5e249ec582535ba8aa70b6ee
  $fReadTool :: GHC.Read.Read Models.Tool
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Models.Tool
                  Models.$fReadTool_$creadsPrec
                  Models.$fReadTool_$creadList
                  Models.$fReadTool_$creadPrec
                  Models.$fReadTool_$creadListPrec -}
3691ed8b5e249ec582535ba8aa70b6ee
  $fReadTool1 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       ([Models.Tool] -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (eta :: Text.ParserCombinators.ReadPrec.Prec)
                   @ b
                   (eta1 :: [Models.Tool] -> Text.ParserCombinators.ReadP.P b) ->
                 GHC.Read.list1
                   @ Models.Tool
                   Models.$fReadTool2
                     `cast`
                   (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                             <Models.Tool>_R))
                   eta
                   @ b
                   eta1) -}
3691ed8b5e249ec582535ba8aa70b6ee
  $fReadTool10 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec Models.Tool)
  {- Strictness: m,
     Unfolding: ((Models.$fFromJSONTool7,
                  Models.$fReadTool11
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0] <Models.Tool>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                 <Models.Tool>_R))))) -}
3691ed8b5e249ec582535ba8aa70b6ee
  $fReadTool11 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (Models.Tool -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ (ds :: Text.ParserCombinators.ReadPrec.Prec)
                   @ b
                   (eta :: Models.Tool -> Text.ParserCombinators.ReadP.P b) ->
                 eta Models.Blend) -}
3691ed8b5e249ec582535ba8aa70b6ee
  $fReadTool12 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec Models.Tool)
  {- Strictness: m,
     Unfolding: ((Models.$fFromJSONTool8,
                  Models.$fReadTool13
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0] <Models.Tool>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                 <Models.Tool>_R))))) -}
3691ed8b5e249ec582535ba8aa70b6ee
  $fReadTool13 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (Models.Tool -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ (ds :: Text.ParserCombinators.ReadPrec.Prec)
                   @ b
                   (eta :: Models.Tool -> Text.ParserCombinators.ReadP.P b) ->
                 eta Models.Wipe) -}
3691ed8b5e249ec582535ba8aa70b6ee
  $fReadTool14 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec Models.Tool)
  {- Strictness: m,
     Unfolding: ((Models.$fFromJSONTool9,
                  Models.$fReadTool15
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0] <Models.Tool>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                 <Models.Tool>_R))))) -}
3691ed8b5e249ec582535ba8aa70b6ee
  $fReadTool15 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (Models.Tool -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ (ds :: Text.ParserCombinators.ReadPrec.Prec)
                   @ b
                   (eta :: Models.Tool -> Text.ParserCombinators.ReadP.P b) ->
                 eta Models.ZipImage) -}
3691ed8b5e249ec582535ba8aa70b6ee
  $fReadTool16 :: Text.ParserCombinators.ReadP.P [Models.Tool]
  {- Unfolding: (GHC.Read.list1
                   @ Models.Tool
                   Models.$fReadTool2
                     `cast`
                   (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                             <Models.Tool>_R))
                   GHC.Read.$fRead()5
                   @ [Models.Tool]
                   (Text.ParserCombinators.ReadP.$fApplicativeP_$cpure
                      @ [Models.Tool])) -}
3691ed8b5e249ec582535ba8aa70b6ee
  $fReadTool2 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> Text.ParserCombinators.ReadP.ReadP Models.Tool
  {- Arity: 1,
     Unfolding: (GHC.Read.parens1
                   @ Models.Tool
                   Models.$fReadTool3
                     `cast`
                   (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                             <Models.Tool>_R))) -}
3691ed8b5e249ec582535ba8aa70b6ee
  $fReadTool3 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> Text.ParserCombinators.ReadP.ReadP Models.Tool
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (1, True, False)
                (\ (eta :: Text.ParserCombinators.ReadPrec.Prec) ->
                 GHC.Read.choose2 @ Models.Tool Models.$fReadTool4 eta) -}
3691ed8b5e249ec582535ba8aa70b6ee
  $fReadTool4 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec Models.Tool)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec Models.Tool)
                   Models.$fReadTool14
                   Models.$fReadTool5) -}
3691ed8b5e249ec582535ba8aa70b6ee
  $fReadTool5 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec Models.Tool)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec Models.Tool)
                   Models.$fReadTool12
                   Models.$fReadTool6) -}
3691ed8b5e249ec582535ba8aa70b6ee
  $fReadTool6 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec Models.Tool)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec Models.Tool)
                   Models.$fReadTool10
                   Models.$fReadTool7) -}
3691ed8b5e249ec582535ba8aa70b6ee
  $fReadTool7 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec Models.Tool)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec Models.Tool)
                   Models.$fReadTool8
                   (GHC.Types.[]
                      @ (GHC.Base.String,
                         Text.ParserCombinators.ReadPrec.ReadPrec Models.Tool))) -}
3691ed8b5e249ec582535ba8aa70b6ee
  $fReadTool8 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec Models.Tool)
  {- Strictness: m,
     Unfolding: ((Models.$fFromJSONTool6,
                  Models.$fReadTool9
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0] <Models.Tool>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                 <Models.Tool>_R))))) -}
3691ed8b5e249ec582535ba8aa70b6ee
  $fReadTool9 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (Models.Tool -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ (ds :: Text.ParserCombinators.ReadPrec.Prec)
                   @ b
                   (eta :: Models.Tool -> Text.ParserCombinators.ReadP.P b) ->
                 eta Models.Checkerboard) -}
3691ed8b5e249ec582535ba8aa70b6ee
  $fReadTool_$creadList ::
    Text.ParserCombinators.ReadP.ReadS [Models.Tool]
  {- Arity: 1,
     Unfolding: (Text.ParserCombinators.ReadP.run
                   @ [Models.Tool]
                   Models.$fReadTool16) -}
3691ed8b5e249ec582535ba8aa70b6ee
  $fReadTool_$creadListPrec ::
    Text.ParserCombinators.ReadPrec.ReadPrec [Models.Tool]
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Models.$fReadTool1
                  `cast`
                (Trans
                     (<Text.ParserCombinators.ReadPrec.Prec>_R
                      ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                    <[Models.Tool]>_R))
                     (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                               <[Models.Tool]>_R))) -}
3691ed8b5e249ec582535ba8aa70b6ee
  $fReadTool_$creadPrec ::
    Text.ParserCombinators.ReadPrec.ReadPrec Models.Tool
  {- Arity: 1,
     Unfolding: InlineRule (0, True, True)
                Models.$fReadTool2
                  `cast`
                (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                          <Models.Tool>_R)) -}
3691ed8b5e249ec582535ba8aa70b6ee
  $fReadTool_$creadsPrec ::
    GHC.Types.Int -> Text.ParserCombinators.ReadP.ReadS Models.Tool
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (1, True, False)
                (\ (eta :: GHC.Types.Int) ->
                 Text.ParserCombinators.ReadP.run
                   @ Models.Tool
                   ((GHC.Read.parens1
                       @ Models.Tool
                       Models.$fReadTool3
                         `cast`
                       (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                 <Models.Tool>_R))
                       eta)
                      `cast`
                    (Text.ParserCombinators.ReadP.N:ReadP[0] <Models.Tool>_R)
                      @ Models.Tool
                      (Text.ParserCombinators.ReadP.$fApplicativeP_$cpure
                         @ Models.Tool))) -}
3691ed8b5e249ec582535ba8aa70b6ee
  $fShowTool :: GHC.Show.Show Models.Tool
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Models.Tool
                  Models.$fShowTool_$cshowsPrec
                  Models.$fShowTool_$cshow
                  Models.$fShowTool_$cshowList -}
3691ed8b5e249ec582535ba8aa70b6ee
  $fShowTool_$cshow :: Models.Tool -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Models.Tool) ->
                 Models.$fShowTool_$cshowsPrec
                   GHC.Show.shows22
                   x
                   (GHC.Types.[] @ GHC.Types.Char)) -}
3691ed8b5e249ec582535ba8aa70b6ee
  $fShowTool_$cshowList :: [Models.Tool] -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (GHC.Show.showList__
                   @ Models.Tool
                   Models.$w$cshowsPrec) -}
3691ed8b5e249ec582535ba8aa70b6ee
  $fShowTool_$cshowsPrec ::
    GHC.Types.Int -> Models.Tool -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <L,A><S,1*U><L,1*U>, Inline: INLINE[0],
     Unfolding: InlineRule (3, True, True)
                (\ (w :: GHC.Types.Int)
                   (w1 :: Models.Tool)
                   (w2 :: GHC.Base.String) ->
                 Models.$w$cshowsPrec w1 w2) -}
3691ed8b5e249ec582535ba8aa70b6ee
  $fToJSONTool :: Data.Aeson.Types.ToJSON.ToJSON Models.Tool
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Models.Tool
                  Models.$fToJSONTool_$ctoJSON
                  Models.$fToJSONTool_$ctoEncoding
                  Models.$fToJSONTool_$ctoJSONList
                  Models.$fToJSONTool_$ctoEncodingList -}
3691ed8b5e249ec582535ba8aa70b6ee
  $fToJSONTool1 ::
    Models.Tool
    -> Data.Tagged.Tagged
         Data.Aeson.Types.Generic.True Data.Aeson.Types.Internal.Value
  {- Arity: 1, Strictness: <L,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Models.Tool) ->
                 Models.$fToJSONTool_g (Models.$fGenericTool1 @ GHC.Prim.Any x)) -}
3665ce269895f84a16c8c38bb17da3fa
  $fToJSONTool10 ::
    Data.Aeson.Types.Internal.Options
    -> Data.Aeson.Types.ToJSON.ToArgs
         Data.Aeson.Types.Internal.Value Data.Aeson.Types.Generic.Zero a1
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Generics.C1
         ('GHC.Generics.MetaCons
            "ZipImage" 'GHC.Generics.PrefixI 'GHC.Types.False)
         GHC.Generics.U1
         a1
    -> [Data.Aeson.Types.Internal.Pair]
  {- Unfolding: (Data.Aeson.Types.ToJSON.$w$ctaggedObjectPairs
                   @ GHC.Generics.U1
                   @ Data.Aeson.Types.Generic.False
                   @ Data.Aeson.Types.Generic.Zero
                   @ ('GHC.Generics.MetaCons
                        "ZipImage" 'GHC.Generics.PrefixI 'GHC.Types.False)
                   (Data.Aeson.Types.ToJSON.$fTaggedObjectPairs'TYPEarityU1False1
                      @ Data.Aeson.Types.Generic.Zero)
                     `cast`
                   (Trans
                        (forall (a :: <*>_N).
                         <Data.Aeson.Types.Internal.Options>_R
                         ->_R <Data.Aeson.Types.ToJSON.ToArgs
                                 Data.Aeson.Types.Internal.Value Data.Aeson.Types.Generic.Zero a>_R
                         ->_R <GHC.Base.String>_R
                         ->_R <GHC.Generics.U1 a>_R
                         ->_R Sym (Data.Tagged.N:Tagged[0]
                                       <*>_N
                                       <Data.Aeson.Types.Generic.False>_P
                                       <[Data.Aeson.Types.Internal.Pair]>_R))
                        (Sym (Data.Aeson.Types.ToJSON.N:TaggedObjectPairs'[0]
                                  <*>_N
                                  <Data.Aeson.Types.Generic.Zero>_N
                                  <GHC.Generics.U1>_N
                                  <Data.Aeson.Types.Generic.False>_N)))
                   Models.$fFromJSONTool_$s$fConstructorMetaMetaCons3) -}
77846abf34d845dafb3a476d0b42dcba
  $fToJSONTool11 ::
    (GHC.Generics.:+:)
      (GHC.Generics.C1
         ('GHC.Generics.MetaCons
            "ZipImage" 'GHC.Generics.PrefixI 'GHC.Types.False)
         GHC.Generics.U1
       GHC.Generics.:+: GHC.Generics.C1
                          ('GHC.Generics.MetaCons
                             "Wipe" 'GHC.Generics.PrefixI 'GHC.Types.False)
                          GHC.Generics.U1)
      (GHC.Generics.C1
         ('GHC.Generics.MetaCons
            "Blend" 'GHC.Generics.PrefixI 'GHC.Types.False)
         GHC.Generics.U1
       GHC.Generics.:+: GHC.Generics.C1
                          ('GHC.Generics.MetaCons
                             "Checkerboard" 'GHC.Generics.PrefixI 'GHC.Types.False)
                          GHC.Generics.U1)
      a1
    -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ @ a1
                   (ds :: (GHC.Generics.:+:)
                            (GHC.Generics.C1
                               ('GHC.Generics.MetaCons
                                  "ZipImage" 'GHC.Generics.PrefixI 'GHC.Types.False)
                               GHC.Generics.U1
                             GHC.Generics.:+: GHC.Generics.C1
                                                ('GHC.Generics.MetaCons
                                                   "Wipe" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                                GHC.Generics.U1)
                            (GHC.Generics.C1
                               ('GHC.Generics.MetaCons
                                  "Blend" 'GHC.Generics.PrefixI 'GHC.Types.False)
                               GHC.Generics.U1
                             GHC.Generics.:+: GHC.Generics.C1
                                                ('GHC.Generics.MetaCons
                                                   "Checkerboard"
                                                   'GHC.Generics.PrefixI
                                                   'GHC.Types.False)
                                                GHC.Generics.U1)
                            a1) ->
                 case ds of wild {
                   GHC.Generics.L1 x
                   -> case x of wild1 {
                        GHC.Generics.L1 x1 -> Models.$fFromJSONTool9
                        GHC.Generics.R1 x1 -> Models.$fFromJSONTool8 }
                   GHC.Generics.R1 x
                   -> case x of wild1 {
                        GHC.Generics.L1 x1 -> Models.$fFromJSONTool7
                        GHC.Generics.R1 x1 -> Models.$fFromJSONTool6 } }) -}
8d3a94d40c681c2c1f829a90daf1ca65
  $fToJSONTool2 ::
    Data.Aeson.Types.Internal.Options
    -> Data.Aeson.Types.ToJSON.ToArgs
         Data.Aeson.Types.Internal.Value Data.Aeson.Types.Generic.Zero a1
    -> (GHC.Generics.:+:)
         (GHC.Generics.C1
            ('GHC.Generics.MetaCons
               "ZipImage" 'GHC.Generics.PrefixI 'GHC.Types.False)
            GHC.Generics.U1
          GHC.Generics.:+: GHC.Generics.C1
                             ('GHC.Generics.MetaCons
                                "Wipe" 'GHC.Generics.PrefixI 'GHC.Types.False)
                             GHC.Generics.U1)
         (GHC.Generics.C1
            ('GHC.Generics.MetaCons
               "Blend" 'GHC.Generics.PrefixI 'GHC.Types.False)
            GHC.Generics.U1
          GHC.Generics.:+: GHC.Generics.C1
                             ('GHC.Generics.MetaCons
                                "Checkerboard" 'GHC.Generics.PrefixI 'GHC.Types.False)
                             GHC.Generics.U1)
         a1
    -> Data.Aeson.Types.Internal.Value
  {- Arity: 3,
     Strictness: <S(LC(S)LLLL),1*U(A,1*C1(U),A,A,A,A)><L,A><S,1*U>m3,
     Inline: INLINE[0],
     Unfolding: InlineRule (3, True, False)
                (\ @ a1
                   (w :: Data.Aeson.Types.Internal.Options)
                   (w1 :: Data.Aeson.Types.ToJSON.ToArgs
                            Data.Aeson.Types.Internal.Value Data.Aeson.Types.Generic.Zero a1)
                   (w2 :: (GHC.Generics.:+:)
                            (GHC.Generics.C1
                               ('GHC.Generics.MetaCons
                                  "ZipImage" 'GHC.Generics.PrefixI 'GHC.Types.False)
                               GHC.Generics.U1
                             GHC.Generics.:+: GHC.Generics.C1
                                                ('GHC.Generics.MetaCons
                                                   "Wipe" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                                GHC.Generics.U1)
                            (GHC.Generics.C1
                               ('GHC.Generics.MetaCons
                                  "Blend" 'GHC.Generics.PrefixI 'GHC.Types.False)
                               GHC.Generics.U1
                             GHC.Generics.:+: GHC.Generics.C1
                                                ('GHC.Generics.MetaCons
                                                   "Checkerboard"
                                                   'GHC.Generics.PrefixI
                                                   'GHC.Types.False)
                                                GHC.Generics.U1)
                            a1) ->
                 case w of ww { Data.Aeson.Types.Internal.Options ww1 ww2 ww3 ww4 ww5 ww6 ->
                 case Models.$w$dUntaggedValueObj @ a1 ww2 w2 of ww7 { Unit# ww8 ->
                 Data.Aeson.Types.Internal.String ww8 } }) -}
1d763b9e58e96a7eddc1ea1649309133
  $fToJSONTool3 ::
    Data.Aeson.Types.Internal.Options
    -> Data.Aeson.Types.ToJSON.ToArgs
         Data.Aeson.Types.Internal.Value Data.Aeson.Types.Generic.Zero a1
    -> (GHC.Generics.:+:)
         (GHC.Generics.C1
            ('GHC.Generics.MetaCons
               "ZipImage" 'GHC.Generics.PrefixI 'GHC.Types.False)
            GHC.Generics.U1
          GHC.Generics.:+: GHC.Generics.C1
                             ('GHC.Generics.MetaCons
                                "Wipe" 'GHC.Generics.PrefixI 'GHC.Types.False)
                             GHC.Generics.U1)
         (GHC.Generics.C1
            ('GHC.Generics.MetaCons
               "Blend" 'GHC.Generics.PrefixI 'GHC.Types.False)
            GHC.Generics.U1
          GHC.Generics.:+: GHC.Generics.C1
                             ('GHC.Generics.MetaCons
                                "Checkerboard" 'GHC.Generics.PrefixI 'GHC.Types.False)
                             GHC.Generics.U1)
         a1
    -> Data.Vector.Vector Data.Aeson.Types.Internal.Value
  {- Arity: 3, Strictness: <L,U(U,U,U,U,U,U)><L,U><S,1*U>,
     Unfolding: (\ @ a1
                   (opts :: Data.Aeson.Types.Internal.Options)
                   (targs :: Data.Aeson.Types.ToJSON.ToArgs
                               Data.Aeson.Types.Internal.Value Data.Aeson.Types.Generic.Zero a1)
                   (ds :: (GHC.Generics.:+:)
                            (GHC.Generics.C1
                               ('GHC.Generics.MetaCons
                                  "ZipImage" 'GHC.Generics.PrefixI 'GHC.Types.False)
                               GHC.Generics.U1
                             GHC.Generics.:+: GHC.Generics.C1
                                                ('GHC.Generics.MetaCons
                                                   "Wipe" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                                GHC.Generics.U1)
                            (GHC.Generics.C1
                               ('GHC.Generics.MetaCons
                                  "Blend" 'GHC.Generics.PrefixI 'GHC.Types.False)
                               GHC.Generics.U1
                             GHC.Generics.:+: GHC.Generics.C1
                                                ('GHC.Generics.MetaCons
                                                   "Checkerboard"
                                                   'GHC.Generics.PrefixI
                                                   'GHC.Types.False)
                                                GHC.Generics.U1)
                            a1) ->
                 case ds of wild {
                   GHC.Generics.L1 x
                   -> case x of wild1 {
                        GHC.Generics.L1 x1
                        -> Data.Aeson.Types.ToJSON.$w$ctwoElemArrayObj
                             @ Data.Aeson.Types.Generic.Zero
                             @ GHC.Generics.U1
                             @ ('GHC.Generics.MetaCons
                                  "ZipImage" 'GHC.Generics.PrefixI 'GHC.Types.False)
                             Models.$fToJSONTool4
                               `cast`
                             (Sym (Data.Aeson.Types.ToJSON.N:ConsToJSON[0]
                                       <Data.Aeson.Types.Generic.Zero>_N <GHC.Generics.U1>_N))
                             Models.$fFromJSONTool_$s$fConstructorMetaMetaCons3
                             @ a1
                             opts
                             targs
                             x1
                        GHC.Generics.R1 x1
                        -> Data.Aeson.Types.ToJSON.$w$ctwoElemArrayObj
                             @ Data.Aeson.Types.Generic.Zero
                             @ GHC.Generics.U1
                             @ ('GHC.Generics.MetaCons
                                  "Wipe" 'GHC.Generics.PrefixI 'GHC.Types.False)
                             Models.$fToJSONTool4
                               `cast`
                             (Sym (Data.Aeson.Types.ToJSON.N:ConsToJSON[0]
                                       <Data.Aeson.Types.Generic.Zero>_N <GHC.Generics.U1>_N))
                             Models.$fFromJSONTool_$s$fConstructorMetaMetaCons2
                             @ a1
                             opts
                             targs
                             x1 }
                   GHC.Generics.R1 x
                   -> case x of wild1 {
                        GHC.Generics.L1 x1
                        -> Data.Aeson.Types.ToJSON.$w$ctwoElemArrayObj
                             @ Data.Aeson.Types.Generic.Zero
                             @ GHC.Generics.U1
                             @ ('GHC.Generics.MetaCons
                                  "Blend" 'GHC.Generics.PrefixI 'GHC.Types.False)
                             Models.$fToJSONTool4
                               `cast`
                             (Sym (Data.Aeson.Types.ToJSON.N:ConsToJSON[0]
                                       <Data.Aeson.Types.Generic.Zero>_N <GHC.Generics.U1>_N))
                             Models.$fFromJSONTool_$s$fConstructorMetaMetaCons1
                             @ a1
                             opts
                             targs
                             x1
                        GHC.Generics.R1 x1
                        -> Data.Aeson.Types.ToJSON.$w$ctwoElemArrayObj
                             @ Data.Aeson.Types.Generic.Zero
                             @ GHC.Generics.U1
                             @ ('GHC.Generics.MetaCons
                                  "Checkerboard" 'GHC.Generics.PrefixI 'GHC.Types.False)
                             Models.$fToJSONTool4
                               `cast`
                             (Sym (Data.Aeson.Types.ToJSON.N:ConsToJSON[0]
                                       <Data.Aeson.Types.Generic.Zero>_N <GHC.Generics.U1>_N))
                             Models.$fFromJSONTool_$s$fConstructorMetaMetaCons
                             @ a1
                             opts
                             targs
                             x1 } }) -}
91b14bdbd1edffa1fd55376e3b233072
  $fToJSONTool4 ::
    Data.Aeson.Types.Internal.Options
    -> Data.Aeson.Types.ToJSON.ToArgs
         Data.Aeson.Types.Internal.Value Data.Aeson.Types.Generic.Zero a
    -> GHC.Generics.U1 a
    -> Data.Aeson.Types.Internal.Value
  {- Arity: 3, Strictness: <L,A><L,A><L,A>,
     Unfolding: InlineRule (3, True, True)
                (\ @ a
                   (opts :: Data.Aeson.Types.Internal.Options)
                   (targs :: Data.Aeson.Types.ToJSON.ToArgs
                               Data.Aeson.Types.Internal.Value Data.Aeson.Types.Generic.Zero a)
                   (eta :: GHC.Generics.U1 a) ->
                 Data.Aeson.Types.Internal.emptyArray) -}
78b5d35d9e0a77187ea6679e5e07ca79
  $fToJSONTool5 ::
    Data.Aeson.Types.Internal.Options
    -> Data.Aeson.Types.ToJSON.ToArgs
         Data.Aeson.Types.Internal.Value Data.Aeson.Types.Generic.Zero a1
    -> (GHC.Generics.:+:)
         (GHC.Generics.C1
            ('GHC.Generics.MetaCons
               "ZipImage" 'GHC.Generics.PrefixI 'GHC.Types.False)
            GHC.Generics.U1
          GHC.Generics.:+: GHC.Generics.C1
                             ('GHC.Generics.MetaCons
                                "Wipe" 'GHC.Generics.PrefixI 'GHC.Types.False)
                             GHC.Generics.U1)
         (GHC.Generics.C1
            ('GHC.Generics.MetaCons
               "Blend" 'GHC.Generics.PrefixI 'GHC.Types.False)
            GHC.Generics.U1
          GHC.Generics.:+: GHC.Generics.C1
                             ('GHC.Generics.MetaCons
                                "Checkerboard" 'GHC.Generics.PrefixI 'GHC.Types.False)
                             GHC.Generics.U1)
         a1
    -> Data.Aeson.Types.Internal.Object
  {- Arity: 3, Strictness: <L,U(U,U,U,U,U,U)><L,U><S,1*U>,
     Unfolding: (\ @ a1
                   (opts :: Data.Aeson.Types.Internal.Options)
                   (targs :: Data.Aeson.Types.ToJSON.ToArgs
                               Data.Aeson.Types.Internal.Value Data.Aeson.Types.Generic.Zero a1)
                   (ds :: (GHC.Generics.:+:)
                            (GHC.Generics.C1
                               ('GHC.Generics.MetaCons
                                  "ZipImage" 'GHC.Generics.PrefixI 'GHC.Types.False)
                               GHC.Generics.U1
                             GHC.Generics.:+: GHC.Generics.C1
                                                ('GHC.Generics.MetaCons
                                                   "Wipe" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                                GHC.Generics.U1)
                            (GHC.Generics.C1
                               ('GHC.Generics.MetaCons
                                  "Blend" 'GHC.Generics.PrefixI 'GHC.Types.False)
                               GHC.Generics.U1
                             GHC.Generics.:+: GHC.Generics.C1
                                                ('GHC.Generics.MetaCons
                                                   "Checkerboard"
                                                   'GHC.Generics.PrefixI
                                                   'GHC.Types.False)
                                                GHC.Generics.U1)
                            a1) ->
                 case ds of wild {
                   GHC.Generics.L1 x
                   -> case x of wild1 {
                        GHC.Generics.L1 x1
                        -> Data.Aeson.Types.ToJSON.$w$cobjectWithSingleFieldObj
                             @ Data.Aeson.Types.Generic.Zero
                             @ GHC.Generics.U1
                             @ ('GHC.Generics.MetaCons
                                  "ZipImage" 'GHC.Generics.PrefixI 'GHC.Types.False)
                             Models.$fToJSONTool4
                               `cast`
                             (Sym (Data.Aeson.Types.ToJSON.N:ConsToJSON[0]
                                       <Data.Aeson.Types.Generic.Zero>_N <GHC.Generics.U1>_N))
                             Models.$fFromJSONTool_$s$fConstructorMetaMetaCons3
                             @ a1
                             opts
                             targs
                             x1
                        GHC.Generics.R1 x1
                        -> Data.Aeson.Types.ToJSON.$w$cobjectWithSingleFieldObj
                             @ Data.Aeson.Types.Generic.Zero
                             @ GHC.Generics.U1
                             @ ('GHC.Generics.MetaCons
                                  "Wipe" 'GHC.Generics.PrefixI 'GHC.Types.False)
                             Models.$fToJSONTool4
                               `cast`
                             (Sym (Data.Aeson.Types.ToJSON.N:ConsToJSON[0]
                                       <Data.Aeson.Types.Generic.Zero>_N <GHC.Generics.U1>_N))
                             Models.$fFromJSONTool_$s$fConstructorMetaMetaCons2
                             @ a1
                             opts
                             targs
                             x1 }
                   GHC.Generics.R1 x
                   -> case x of wild1 {
                        GHC.Generics.L1 x1
                        -> Data.Aeson.Types.ToJSON.$w$cobjectWithSingleFieldObj
                             @ Data.Aeson.Types.Generic.Zero
                             @ GHC.Generics.U1
                             @ ('GHC.Generics.MetaCons
                                  "Blend" 'GHC.Generics.PrefixI 'GHC.Types.False)
                             Models.$fToJSONTool4
                               `cast`
                             (Sym (Data.Aeson.Types.ToJSON.N:ConsToJSON[0]
                                       <Data.Aeson.Types.Generic.Zero>_N <GHC.Generics.U1>_N))
                             Models.$fFromJSONTool_$s$fConstructorMetaMetaCons1
                             @ a1
                             opts
                             targs
                             x1
                        GHC.Generics.R1 x1
                        -> Data.Aeson.Types.ToJSON.$w$cobjectWithSingleFieldObj
                             @ Data.Aeson.Types.Generic.Zero
                             @ GHC.Generics.U1
                             @ ('GHC.Generics.MetaCons
                                  "Checkerboard" 'GHC.Generics.PrefixI 'GHC.Types.False)
                             Models.$fToJSONTool4
                               `cast`
                             (Sym (Data.Aeson.Types.ToJSON.N:ConsToJSON[0]
                                       <Data.Aeson.Types.Generic.Zero>_N <GHC.Generics.U1>_N))
                             Models.$fFromJSONTool_$s$fConstructorMetaMetaCons
                             @ a1
                             opts
                             targs
                             x1 } }) -}
288a279cbef6a87cc6b02ef845437350
  $fToJSONTool6 ::
    Data.Aeson.Types.Internal.Options
    -> Data.Aeson.Types.ToJSON.ToArgs
         Data.Aeson.Types.Internal.Value Data.Aeson.Types.Generic.Zero a1
    -> GHC.Base.String
    -> GHC.Base.String
    -> (GHC.Generics.:+:)
         (GHC.Generics.C1
            ('GHC.Generics.MetaCons
               "ZipImage" 'GHC.Generics.PrefixI 'GHC.Types.False)
            GHC.Generics.U1
          GHC.Generics.:+: GHC.Generics.C1
                             ('GHC.Generics.MetaCons
                                "Wipe" 'GHC.Generics.PrefixI 'GHC.Types.False)
                             GHC.Generics.U1)
         (GHC.Generics.C1
            ('GHC.Generics.MetaCons
               "Blend" 'GHC.Generics.PrefixI 'GHC.Types.False)
            GHC.Generics.U1
          GHC.Generics.:+: GHC.Generics.C1
                             ('GHC.Generics.MetaCons
                                "Checkerboard" 'GHC.Generics.PrefixI 'GHC.Types.False)
                             GHC.Generics.U1)
         a1
    -> [Data.Aeson.Types.Internal.Pair]
  {- Arity: 5, Strictness: <L,U><L,U><L,U><L,U><S,1*U>,
     Unfolding: (\ @ a1
                   (opts :: Data.Aeson.Types.Internal.Options)
                   (targs :: Data.Aeson.Types.ToJSON.ToArgs
                               Data.Aeson.Types.Internal.Value Data.Aeson.Types.Generic.Zero a1)
                   (tagFieldName :: GHC.Base.String)
                   (contentsFieldName :: GHC.Base.String)
                   (ds :: (GHC.Generics.:+:)
                            (GHC.Generics.C1
                               ('GHC.Generics.MetaCons
                                  "ZipImage" 'GHC.Generics.PrefixI 'GHC.Types.False)
                               GHC.Generics.U1
                             GHC.Generics.:+: GHC.Generics.C1
                                                ('GHC.Generics.MetaCons
                                                   "Wipe" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                                GHC.Generics.U1)
                            (GHC.Generics.C1
                               ('GHC.Generics.MetaCons
                                  "Blend" 'GHC.Generics.PrefixI 'GHC.Types.False)
                               GHC.Generics.U1
                             GHC.Generics.:+: GHC.Generics.C1
                                                ('GHC.Generics.MetaCons
                                                   "Checkerboard"
                                                   'GHC.Generics.PrefixI
                                                   'GHC.Types.False)
                                                GHC.Generics.U1)
                            a1) ->
                 case ds of wild {
                   GHC.Generics.L1 x
                   -> Data.Aeson.Types.ToJSON.$fTaggedObjectPairsarity:+:_$ctaggedObjectPairs
                        @ Data.Aeson.Types.Generic.Zero
                        @ (GHC.Generics.M1
                             GHC.Generics.C
                             ('GHC.Generics.MetaCons
                                "ZipImage" 'GHC.Generics.PrefixI 'GHC.Types.False)
                             GHC.Generics.U1)
                        @ (GHC.Generics.M1
                             GHC.Generics.C
                             ('GHC.Generics.MetaCons
                                "Wipe" 'GHC.Generics.PrefixI 'GHC.Types.False)
                             GHC.Generics.U1)
                        Models.$fToJSONTool10
                          `cast`
                        (Sym (Data.Aeson.Types.ToJSON.N:TaggedObjectPairs[0]
                                  <Data.Aeson.Types.Generic.Zero>_N
                                  <GHC.Generics.C1
                                     ('GHC.Generics.MetaCons
                                        "ZipImage" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                     GHC.Generics.U1>_N))
                        Models.$fToJSONTool9
                          `cast`
                        (Sym (Data.Aeson.Types.ToJSON.N:TaggedObjectPairs[0]
                                  <Data.Aeson.Types.Generic.Zero>_N
                                  <GHC.Generics.C1
                                     ('GHC.Generics.MetaCons
                                        "Wipe" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                     GHC.Generics.U1>_N))
                        @ a1
                        opts
                        targs
                        tagFieldName
                        contentsFieldName
                        x
                   GHC.Generics.R1 x
                   -> Data.Aeson.Types.ToJSON.$fTaggedObjectPairsarity:+:_$ctaggedObjectPairs
                        @ Data.Aeson.Types.Generic.Zero
                        @ (GHC.Generics.M1
                             GHC.Generics.C
                             ('GHC.Generics.MetaCons
                                "Blend" 'GHC.Generics.PrefixI 'GHC.Types.False)
                             GHC.Generics.U1)
                        @ (GHC.Generics.M1
                             GHC.Generics.C
                             ('GHC.Generics.MetaCons
                                "Checkerboard" 'GHC.Generics.PrefixI 'GHC.Types.False)
                             GHC.Generics.U1)
                        Models.$fToJSONTool8
                          `cast`
                        (Sym (Data.Aeson.Types.ToJSON.N:TaggedObjectPairs[0]
                                  <Data.Aeson.Types.Generic.Zero>_N
                                  <GHC.Generics.C1
                                     ('GHC.Generics.MetaCons
                                        "Blend" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                     GHC.Generics.U1>_N))
                        Models.$fToJSONTool7
                          `cast`
                        (Sym (Data.Aeson.Types.ToJSON.N:TaggedObjectPairs[0]
                                  <Data.Aeson.Types.Generic.Zero>_N
                                  <GHC.Generics.C1
                                     ('GHC.Generics.MetaCons
                                        "Checkerboard" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                     GHC.Generics.U1>_N))
                        @ a1
                        opts
                        targs
                        tagFieldName
                        contentsFieldName
                        x }) -}
435dbba5357b4f18effc479610cafe20
  $fToJSONTool7 ::
    Data.Aeson.Types.Internal.Options
    -> Data.Aeson.Types.ToJSON.ToArgs
         Data.Aeson.Types.Internal.Value Data.Aeson.Types.Generic.Zero a1
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Generics.C1
         ('GHC.Generics.MetaCons
            "Checkerboard" 'GHC.Generics.PrefixI 'GHC.Types.False)
         GHC.Generics.U1
         a1
    -> [Data.Aeson.Types.Internal.Pair]
  {- Unfolding: (Data.Aeson.Types.ToJSON.$w$ctaggedObjectPairs
                   @ GHC.Generics.U1
                   @ Data.Aeson.Types.Generic.False
                   @ Data.Aeson.Types.Generic.Zero
                   @ ('GHC.Generics.MetaCons
                        "Checkerboard" 'GHC.Generics.PrefixI 'GHC.Types.False)
                   (Data.Aeson.Types.ToJSON.$fTaggedObjectPairs'TYPEarityU1False1
                      @ Data.Aeson.Types.Generic.Zero)
                     `cast`
                   (Trans
                        (forall (a :: <*>_N).
                         <Data.Aeson.Types.Internal.Options>_R
                         ->_R <Data.Aeson.Types.ToJSON.ToArgs
                                 Data.Aeson.Types.Internal.Value Data.Aeson.Types.Generic.Zero a>_R
                         ->_R <GHC.Base.String>_R
                         ->_R <GHC.Generics.U1 a>_R
                         ->_R Sym (Data.Tagged.N:Tagged[0]
                                       <*>_N
                                       <Data.Aeson.Types.Generic.False>_P
                                       <[Data.Aeson.Types.Internal.Pair]>_R))
                        (Sym (Data.Aeson.Types.ToJSON.N:TaggedObjectPairs'[0]
                                  <*>_N
                                  <Data.Aeson.Types.Generic.Zero>_N
                                  <GHC.Generics.U1>_N
                                  <Data.Aeson.Types.Generic.False>_N)))
                   Models.$fFromJSONTool_$s$fConstructorMetaMetaCons) -}
ff158c9e50b5bb9e330860edd00ecea9
  $fToJSONTool8 ::
    Data.Aeson.Types.Internal.Options
    -> Data.Aeson.Types.ToJSON.ToArgs
         Data.Aeson.Types.Internal.Value Data.Aeson.Types.Generic.Zero a1
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Generics.C1
         ('GHC.Generics.MetaCons
            "Blend" 'GHC.Generics.PrefixI 'GHC.Types.False)
         GHC.Generics.U1
         a1
    -> [Data.Aeson.Types.Internal.Pair]
  {- Unfolding: (Data.Aeson.Types.ToJSON.$w$ctaggedObjectPairs
                   @ GHC.Generics.U1
                   @ Data.Aeson.Types.Generic.False
                   @ Data.Aeson.Types.Generic.Zero
                   @ ('GHC.Generics.MetaCons
                        "Blend" 'GHC.Generics.PrefixI 'GHC.Types.False)
                   (Data.Aeson.Types.ToJSON.$fTaggedObjectPairs'TYPEarityU1False1
                      @ Data.Aeson.Types.Generic.Zero)
                     `cast`
                   (Trans
                        (forall (a :: <*>_N).
                         <Data.Aeson.Types.Internal.Options>_R
                         ->_R <Data.Aeson.Types.ToJSON.ToArgs
                                 Data.Aeson.Types.Internal.Value Data.Aeson.Types.Generic.Zero a>_R
                         ->_R <GHC.Base.String>_R
                         ->_R <GHC.Generics.U1 a>_R
                         ->_R Sym (Data.Tagged.N:Tagged[0]
                                       <*>_N
                                       <Data.Aeson.Types.Generic.False>_P
                                       <[Data.Aeson.Types.Internal.Pair]>_R))
                        (Sym (Data.Aeson.Types.ToJSON.N:TaggedObjectPairs'[0]
                                  <*>_N
                                  <Data.Aeson.Types.Generic.Zero>_N
                                  <GHC.Generics.U1>_N
                                  <Data.Aeson.Types.Generic.False>_N)))
                   Models.$fFromJSONTool_$s$fConstructorMetaMetaCons1) -}
86a505d6cb3574e020b4d5b81a2b5f39
  $fToJSONTool9 ::
    Data.Aeson.Types.Internal.Options
    -> Data.Aeson.Types.ToJSON.ToArgs
         Data.Aeson.Types.Internal.Value Data.Aeson.Types.Generic.Zero a1
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Generics.C1
         ('GHC.Generics.MetaCons
            "Wipe" 'GHC.Generics.PrefixI 'GHC.Types.False)
         GHC.Generics.U1
         a1
    -> [Data.Aeson.Types.Internal.Pair]
  {- Unfolding: (Data.Aeson.Types.ToJSON.$w$ctaggedObjectPairs
                   @ GHC.Generics.U1
                   @ Data.Aeson.Types.Generic.False
                   @ Data.Aeson.Types.Generic.Zero
                   @ ('GHC.Generics.MetaCons
                        "Wipe" 'GHC.Generics.PrefixI 'GHC.Types.False)
                   (Data.Aeson.Types.ToJSON.$fTaggedObjectPairs'TYPEarityU1False1
                      @ Data.Aeson.Types.Generic.Zero)
                     `cast`
                   (Trans
                        (forall (a :: <*>_N).
                         <Data.Aeson.Types.Internal.Options>_R
                         ->_R <Data.Aeson.Types.ToJSON.ToArgs
                                 Data.Aeson.Types.Internal.Value Data.Aeson.Types.Generic.Zero a>_R
                         ->_R <GHC.Base.String>_R
                         ->_R <GHC.Generics.U1 a>_R
                         ->_R Sym (Data.Tagged.N:Tagged[0]
                                       <*>_N
                                       <Data.Aeson.Types.Generic.False>_P
                                       <[Data.Aeson.Types.Internal.Pair]>_R))
                        (Sym (Data.Aeson.Types.ToJSON.N:TaggedObjectPairs'[0]
                                  <*>_N
                                  <Data.Aeson.Types.Generic.Zero>_N
                                  <GHC.Generics.U1>_N
                                  <Data.Aeson.Types.Generic.False>_N)))
                   Models.$fFromJSONTool_$s$fConstructorMetaMetaCons2) -}
3691ed8b5e249ec582535ba8aa70b6ee
  $fToJSONTool_$ctoEncoding ::
    Models.Tool -> Data.Aeson.Encoding.Internal.Encoding
  {- Arity: 1, Strictness: <L,1*U>, Inline: INLINE (sat-args=0),
     Unfolding: InlineRule (0, False, False)
                (\ (eta :: Models.Tool) ->
                 Data.Aeson.Encoding.Internal.value
                   (Models.$fToJSONTool_$ctoJSON eta)) -}
3691ed8b5e249ec582535ba8aa70b6ee
  $fToJSONTool_$ctoEncodingList ::
    [Models.Tool] -> Data.Aeson.Encoding.Internal.Encoding
  {- Arity: 1, Strictness: <S,1*U>, Inline: INLINE (sat-args=0),
     Unfolding: InlineRule (0, False, False)
                (\ (eta :: [Models.Tool]) ->
                 case eta of wild {
                   [] -> Data.Aeson.Encoding.Internal.emptyArray_
                   : x xs
                   -> (Data.ByteString.Builder.Internal.append
                         (Data.Aeson.Encoding.Internal.openBracket
                            @ Data.Aeson.Types.Internal.Value)
                           `cast`
                         (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                              <Data.Aeson.Types.Internal.Value>_P)
                         (Data.ByteString.Builder.Internal.append
                            (Data.Aeson.Encoding.Internal.value
                               (Models.$fToJSONTool_$ctoJSON x))
                              `cast`
                            (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                 <Data.Aeson.Types.Internal.Value>_P)
                            (Data.ByteString.Builder.Internal.append
                               (GHC.Base.foldr
                                  @ Models.Tool
                                  @ (Data.Aeson.Encoding.Internal.Encoding'
                                       Data.Aeson.Types.Internal.Value)
                                  (\ (v :: Models.Tool)
                                     (vs :: Data.Aeson.Encoding.Internal.Encoding'
                                              Data.Aeson.Types.Internal.Value)[OneShot] ->
                                   Data.ByteString.Builder.Internal.append
                                     (Data.Aeson.Encoding.Internal.comma
                                        @ Data.Aeson.Types.Internal.Value)
                                       `cast`
                                     (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                          <Data.Aeson.Types.Internal.Value>_P)
                                     (Data.ByteString.Builder.Internal.append
                                        (Data.Aeson.Encoding.Internal.value
                                           (Models.$fToJSONTool_$ctoJSON v))
                                          `cast`
                                        (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                             <Data.Aeson.Types.Internal.Value>_P)
                                        vs
                                          `cast`
                                        (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                             <Data.Aeson.Types.Internal.Value>_P)))
                                    `cast`
                                  (<Models.Tool>_R
                                   ->_R <Data.Aeson.Encoding.Internal.Encoding'
                                           Data.Aeson.Types.Internal.Value>_R
                                   ->_R Sym (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                                 <Data.Aeson.Types.Internal.Value>_P))
                                  (Data.Aeson.Encoding.Internal.empty
                                     @ Data.Aeson.Types.Internal.Value)
                                  xs)
                                 `cast`
                               (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                    <Data.Aeson.Types.Internal.Value>_P)
                               (Data.Aeson.Encoding.Internal.closeBracket
                                  @ Data.Aeson.Types.Internal.Value)
                                 `cast`
                               (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                    <Data.Aeson.Types.Internal.Value>_P))))
                        `cast`
                      (Sym (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                <Data.Aeson.Types.Internal.Value>_P)) }) -}
3691ed8b5e249ec582535ba8aa70b6ee
  $fToJSONTool_$ctoJSON ::
    Models.Tool -> Data.Aeson.Types.Internal.Value
  {- Arity: 1, Strictness: <L,1*U>,
     Unfolding: InlineRule (0, True, True)
                Models.$fToJSONTool1
                  `cast`
                (<Models.Tool>_R
                 ->_R Data.Tagged.N:Tagged[0]
                          <*>_N
                          <Data.Aeson.Types.Generic.True>_P
                          <Data.Aeson.Types.Internal.Value>_R) -}
3691ed8b5e249ec582535ba8aa70b6ee
  $fToJSONTool_$ctoJSONList ::
    [Models.Tool] -> Data.Aeson.Types.Internal.Value
  {- Arity: 1, Strictness: <S,1*U>m2, Inline: INLINE (sat-args=0),
     Unfolding: InlineRule (0, False, False)
                (\ (eta :: [Models.Tool]) ->
                 case Data.Vector.Generic.new
                        @ Data.Vector.Vector
                        @ Data.Aeson.Types.Internal.Value
                        (Data.Vector.$fVectorVectora @ Data.Aeson.Types.Internal.Value)
                        (Data.Vector.Generic.New.unstream
                           @ Data.Vector.Vector
                           @ Data.Aeson.Types.Internal.Value
                           (Data.Vector.$fVectorVectora @ Data.Aeson.Types.Internal.Value)
                           (Data.Vector.Fusion.Bundle.Monadic.unsafeFromList
                              @ Data.Vector.Fusion.Util.Id
                              @ Data.Aeson.Types.Internal.Value
                              @ Data.Vector.Vector
                              Data.Vector.Fusion.Util.$fMonadId
                              Data.Vector.Fusion.Bundle.Size.Unknown
                              (GHC.Base.build
                                 @ Data.Aeson.Types.Internal.Value
                                 (\ @ b1
                                    (c :: Data.Aeson.Types.Internal.Value -> b1 -> b1)[OneShot]
                                    (n :: b1)[OneShot] ->
                                  GHC.Base.foldr
                                    @ Models.Tool
                                    @ b1
                                    (GHC.Base.mapFB
                                       @ Data.Aeson.Types.Internal.Value
                                       @ b1
                                       @ Models.Tool
                                       c
                                       Models.$fToJSONTool_$ctoJSON)
                                    n
                                    eta)))) of dt1 { Data.Vector.Vector ipv ipv1 ipv2 ->
                 Data.Aeson.Types.Internal.Array dt1 }) -}
7f8464aa9f8621d224ad0ebbb53a46b4
  $fToJSONTool_g ::
    (GHC.Generics.:+:)
      (GHC.Generics.C1
         ('GHC.Generics.MetaCons
            "ZipImage" 'GHC.Generics.PrefixI 'GHC.Types.False)
         GHC.Generics.U1
       GHC.Generics.:+: GHC.Generics.C1
                          ('GHC.Generics.MetaCons
                             "Wipe" 'GHC.Generics.PrefixI 'GHC.Types.False)
                          GHC.Generics.U1)
      (GHC.Generics.C1
         ('GHC.Generics.MetaCons
            "Blend" 'GHC.Generics.PrefixI 'GHC.Types.False)
         GHC.Generics.U1
       GHC.Generics.:+: GHC.Generics.C1
                          ('GHC.Generics.MetaCons
                             "Checkerboard" 'GHC.Generics.PrefixI 'GHC.Types.False)
                          GHC.Generics.U1)
      GHC.Prim.Any
    -> Data.Tagged.Tagged
         Data.Aeson.Types.Generic.True Data.Aeson.Types.Internal.Value
  {- Unfolding: (Data.Aeson.Types.ToJSON.$w$csumToJSON
                   @ ((GHC.Generics.C1
                         ('GHC.Generics.MetaCons
                            "ZipImage" 'GHC.Generics.PrefixI 'GHC.Types.False)
                         GHC.Generics.U1
                       GHC.Generics.:+: GHC.Generics.C1
                                          ('GHC.Generics.MetaCons
                                             "Wipe" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                          GHC.Generics.U1)
                      GHC.Generics.:+: (GHC.Generics.C1
                                          ('GHC.Generics.MetaCons
                                             "Blend" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                          GHC.Generics.U1
                                        GHC.Generics.:+: GHC.Generics.C1
                                                           ('GHC.Generics.MetaCons
                                                              "Checkerboard"
                                                              'GHC.Generics.PrefixI
                                                              'GHC.Types.False)
                                                           GHC.Generics.U1))
                   @ Data.Aeson.Types.Generic.Zero
                   Models.$fToJSONTool11
                     `cast`
                   (Sym (Data.Aeson.Types.ToJSON.N:GetConName[0]
                             <GHC.Types.*>_N
                             <(GHC.Generics.C1
                                 ('GHC.Generics.MetaCons
                                    "ZipImage" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                 GHC.Generics.U1
                               GHC.Generics.:+: GHC.Generics.C1
                                                  ('GHC.Generics.MetaCons
                                                     "Wipe" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                                  GHC.Generics.U1)
                              GHC.Generics.:+: (GHC.Generics.C1
                                                  ('GHC.Generics.MetaCons
                                                     "Blend" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                                  GHC.Generics.U1
                                                GHC.Generics.:+: GHC.Generics.C1
                                                                   ('GHC.Generics.MetaCons
                                                                      "Checkerboard"
                                                                      'GHC.Generics.PrefixI
                                                                      'GHC.Types.False)
                                                                   GHC.Generics.U1)>_N))
                   Models.$fToJSONTool6
                     `cast`
                   (Sym (Data.Aeson.Types.ToJSON.N:TaggedObjectPairs[0]
                             <Data.Aeson.Types.Generic.Zero>_N
                             <(GHC.Generics.C1
                                 ('GHC.Generics.MetaCons
                                    "ZipImage" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                 GHC.Generics.U1
                               GHC.Generics.:+: GHC.Generics.C1
                                                  ('GHC.Generics.MetaCons
                                                     "Wipe" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                                  GHC.Generics.U1)
                              GHC.Generics.:+: (GHC.Generics.C1
                                                  ('GHC.Generics.MetaCons
                                                     "Blend" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                                  GHC.Generics.U1
                                                GHC.Generics.:+: GHC.Generics.C1
                                                                   ('GHC.Generics.MetaCons
                                                                      "Checkerboard"
                                                                      'GHC.Generics.PrefixI
                                                                      'GHC.Types.False)
                                                                   GHC.Generics.U1)>_N))
                   Models.$fToJSONTool5
                     `cast`
                   (Sym (Data.Aeson.Types.ToJSON.N:ObjectWithSingleFieldObj[0]
                             <Data.Aeson.Types.Generic.Zero>_N
                             <(GHC.Generics.C1
                                 ('GHC.Generics.MetaCons
                                    "ZipImage" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                 GHC.Generics.U1
                               GHC.Generics.:+: GHC.Generics.C1
                                                  ('GHC.Generics.MetaCons
                                                     "Wipe" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                                  GHC.Generics.U1)
                              GHC.Generics.:+: (GHC.Generics.C1
                                                  ('GHC.Generics.MetaCons
                                                     "Blend" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                                  GHC.Generics.U1
                                                GHC.Generics.:+: GHC.Generics.C1
                                                                   ('GHC.Generics.MetaCons
                                                                      "Checkerboard"
                                                                      'GHC.Generics.PrefixI
                                                                      'GHC.Types.False)
                                                                   GHC.Generics.U1)>_N))
                   Models.$fToJSONTool3
                     `cast`
                   (Sym (Data.Aeson.Types.ToJSON.N:TwoElemArrayObj[0]
                             <Data.Aeson.Types.Generic.Zero>_N
                             <(GHC.Generics.C1
                                 ('GHC.Generics.MetaCons
                                    "ZipImage" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                 GHC.Generics.U1
                               GHC.Generics.:+: GHC.Generics.C1
                                                  ('GHC.Generics.MetaCons
                                                     "Wipe" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                                  GHC.Generics.U1)
                              GHC.Generics.:+: (GHC.Generics.C1
                                                  ('GHC.Generics.MetaCons
                                                     "Blend" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                                  GHC.Generics.U1
                                                GHC.Generics.:+: GHC.Generics.C1
                                                                   ('GHC.Generics.MetaCons
                                                                      "Checkerboard"
                                                                      'GHC.Generics.PrefixI
                                                                      'GHC.Types.False)
                                                                   GHC.Generics.U1)>_N))
                   Models.$fToJSONTool2
                     `cast`
                   (Sym (Data.Aeson.Types.ToJSON.N:UntaggedValueObj[0]
                             <Data.Aeson.Types.Generic.Zero>_N
                             <(GHC.Generics.C1
                                 ('GHC.Generics.MetaCons
                                    "ZipImage" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                 GHC.Generics.U1
                               GHC.Generics.:+: GHC.Generics.C1
                                                  ('GHC.Generics.MetaCons
                                                     "Wipe" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                                  GHC.Generics.U1)
                              GHC.Generics.:+: (GHC.Generics.C1
                                                  ('GHC.Generics.MetaCons
                                                     "Blend" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                                  GHC.Generics.U1
                                                GHC.Generics.:+: GHC.Generics.C1
                                                                   ('GHC.Generics.MetaCons
                                                                      "Checkerboard"
                                                                      'GHC.Generics.PrefixI
                                                                      'GHC.Types.False)
                                                                   GHC.Generics.U1)>_N))
                   @ GHC.Prim.Any
                   (GHC.Base.id @ GHC.Base.String)
                   (GHC.Base.id @ GHC.Base.String)
                   GHC.Types.True
                   GHC.Types.False
                   Data.Aeson.Types.Internal.defaultTaggedObject
                   GHC.Types.False
                   (Data.Aeson.Types.ToJSON.$WNoToArgs
                      @ Data.Aeson.Types.Internal.Value
                      @ GHC.Prim.Any)) -}
4e8fce6b4de6a6ca607aacabe8f87bed
  $tc'Blend :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   1448303529500719907##
                   12960515589121567459##
                   Models.$trModule
                   Models.$tc'Blend1) -}
2c0c84aa75e68f0d20daac9f5616b1cc
  $tc'Blend1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'Blend"#) -}
70b1eca62bfcc3cee2ec9144a31ed362
  $tc'Checkerboard :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   17506431853983145827##
                   17842556459967426044##
                   Models.$trModule
                   Models.$tc'Checkerboard1) -}
26bf2e53247aebd75da25ee30170a3e6
  $tc'Checkerboard1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'Checkerboard"#) -}
fcc87ee52f08b7bbbb31a4adcb536ca8
  $tc'Wipe :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   9937227686273356984##
                   8232716072994685295##
                   Models.$trModule
                   Models.$tc'Wipe1) -}
6966fcb6de5499838f49cf6f4376b1bd
  $tc'Wipe1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'Wipe"#) -}
806a75b44bf66b7196d44267c2d72795
  $tc'ZipImage :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   6793212343366950206##
                   11519831188404620641##
                   Models.$trModule
                   Models.$tc'ZipImage1) -}
c4db5f5edfe212407556caa70d0a3c36
  $tc'ZipImage1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'ZipImage"#) -}
f7f01b8e04a8c60f10fc868d1aef328c
  $tcTool :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   8830490386561735255##
                   11910516107535193275##
                   Models.$trModule
                   Models.$tcTool1) -}
a1fe59c123dde8cd164c52286b586ce7
  $tcTool1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "Tool"#) -}
ae54f9e6a798b55fc43751b4a5666089
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module
                   Models.$trModule2
                   Models.$trModule1) -}
68faff50bf3671dcacc8f27cdbef19a3
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "Models"#) -}
b060f163272cd7f5b1248354c957d30a
  $trModule2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   "picFun-0.1.0.0-JNPOSgLeq7jJoAtQCvQXmk"#) -}
3691ed8b5e249ec582535ba8aa70b6ee
  $w$cshowsPrec :: Models.Tool -> GHC.Base.String -> GHC.Base.String
  {- Arity: 2, Strictness: <S,1*U><L,1*U>, Inline: [0],
     Unfolding: (\ (w :: Models.Tool) (w1 :: GHC.Base.String) ->
                 case w of wild {
                   Models.ZipImage
                   -> GHC.Base.++ @ GHC.Types.Char Models.$fFromJSONTool9 w1
                   Models.Wipe
                   -> GHC.Base.++ @ GHC.Types.Char Models.$fFromJSONTool8 w1
                   Models.Blend
                   -> GHC.Base.++ @ GHC.Types.Char Models.$fFromJSONTool7 w1
                   Models.Checkerboard
                   -> GHC.Base.++ @ GHC.Types.Char Models.$fFromJSONTool6 w1 }) -}
085f16068d1e555ec31085e5094e84cf
  $w$dFromPair ::
    (GHC.Base.String -> GHC.Base.String)
    -> (GHC.Base.String -> GHC.Base.String)
    -> GHC.Types.Bool
    -> GHC.Types.Bool
    -> Data.Aeson.Types.Internal.SumEncoding
    -> GHC.Types.Bool
    -> Data.Aeson.Types.FromJSON.FromArgs
         Data.Aeson.Types.Generic.Zero a1
    -> GHC.Prim.ByteArray#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Aeson.Types.Internal.Value
    -> GHC.Base.Maybe
         (Data.Aeson.Types.Internal.Parser
            (GHC.Generics.C1
               ('GHC.Generics.MetaCons
                  "Checkerboard" 'GHC.Generics.PrefixI 'GHC.Types.False)
               GHC.Generics.U1
               a1))
  {- Arity: 11,
     Strictness: <L,U><C(S),U><L,U><L,U><L,U><L,U><L,U><S,U><S,U><S,U><L,U>,
     Inline: [0],
     Unfolding: (\ @ a1
                   (ww :: GHC.Base.String -> GHC.Base.String)
                   (ww1 :: GHC.Base.String -> GHC.Base.String)
                   (ww2 :: GHC.Types.Bool)
                   (ww3 :: GHC.Types.Bool)
                   (ww4 :: Data.Aeson.Types.Internal.SumEncoding)
                   (ww5 :: GHC.Types.Bool)
                   (w :: Data.Aeson.Types.FromJSON.FromArgs
                           Data.Aeson.Types.Generic.Zero a1)
                   (ww6 :: GHC.Prim.ByteArray#)
                   (ww7 :: GHC.Prim.Int#)
                   (ww8 :: GHC.Prim.Int#)
                   (ww9 :: Data.Aeson.Types.Internal.Value) ->
                 Data.Aeson.Types.FromJSON.$w$cparsePair
                   @ ('GHC.Generics.MetaCons
                        "Checkerboard" 'GHC.Generics.PrefixI 'GHC.Types.False)
                   @ Data.Aeson.Types.Generic.Zero
                   @ GHC.Generics.U1
                   Models.$fFromJSONTool_$s$fConstructorMetaMetaCons
                   Models.$fFromJSONTool21
                     `cast`
                   (Sym (Data.Aeson.Types.FromJSON.N:ConsFromJSON[0]
                             <Data.Aeson.Types.Generic.Zero>_N <GHC.Generics.U1>_N))
                   @ a1
                   ww
                   ww1
                   ww2
                   ww3
                   ww4
                   ww5
                   w
                   ww6
                   ww7
                   ww8
                   ww9) -}
dd5a1380a61a2aa7241bc07252cd1ed2
  $w$dFromPair1 ::
    (GHC.Base.String -> GHC.Base.String)
    -> (GHC.Base.String -> GHC.Base.String)
    -> GHC.Types.Bool
    -> GHC.Types.Bool
    -> Data.Aeson.Types.Internal.SumEncoding
    -> GHC.Types.Bool
    -> Data.Aeson.Types.FromJSON.FromArgs
         Data.Aeson.Types.Generic.Zero a1
    -> GHC.Prim.ByteArray#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Aeson.Types.Internal.Value
    -> GHC.Base.Maybe
         (Data.Aeson.Types.Internal.Parser
            (GHC.Generics.C1
               ('GHC.Generics.MetaCons
                  "Blend" 'GHC.Generics.PrefixI 'GHC.Types.False)
               GHC.Generics.U1
               a1))
  {- Arity: 11,
     Strictness: <L,U><C(S),U><L,U><L,U><L,U><L,U><L,U><S,U><S,U><S,U><L,U>,
     Inline: [0],
     Unfolding: (\ @ a1
                   (ww :: GHC.Base.String -> GHC.Base.String)
                   (ww1 :: GHC.Base.String -> GHC.Base.String)
                   (ww2 :: GHC.Types.Bool)
                   (ww3 :: GHC.Types.Bool)
                   (ww4 :: Data.Aeson.Types.Internal.SumEncoding)
                   (ww5 :: GHC.Types.Bool)
                   (w :: Data.Aeson.Types.FromJSON.FromArgs
                           Data.Aeson.Types.Generic.Zero a1)
                   (ww6 :: GHC.Prim.ByteArray#)
                   (ww7 :: GHC.Prim.Int#)
                   (ww8 :: GHC.Prim.Int#)
                   (ww9 :: Data.Aeson.Types.Internal.Value) ->
                 Data.Aeson.Types.FromJSON.$w$cparsePair
                   @ ('GHC.Generics.MetaCons
                        "Blend" 'GHC.Generics.PrefixI 'GHC.Types.False)
                   @ Data.Aeson.Types.Generic.Zero
                   @ GHC.Generics.U1
                   Models.$fFromJSONTool_$s$fConstructorMetaMetaCons1
                   Models.$fFromJSONTool21
                     `cast`
                   (Sym (Data.Aeson.Types.FromJSON.N:ConsFromJSON[0]
                             <Data.Aeson.Types.Generic.Zero>_N <GHC.Generics.U1>_N))
                   @ a1
                   ww
                   ww1
                   ww2
                   ww3
                   ww4
                   ww5
                   w
                   ww6
                   ww7
                   ww8
                   ww9) -}
24832d6c7f42616e793781ef38ef1204
  $w$dFromPair2 ::
    (GHC.Base.String -> GHC.Base.String)
    -> (GHC.Base.String -> GHC.Base.String)
    -> GHC.Types.Bool
    -> GHC.Types.Bool
    -> Data.Aeson.Types.Internal.SumEncoding
    -> GHC.Types.Bool
    -> Data.Aeson.Types.FromJSON.FromArgs
         Data.Aeson.Types.Generic.Zero a1
    -> GHC.Prim.ByteArray#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Aeson.Types.Internal.Value
    -> GHC.Base.Maybe
         (Data.Aeson.Types.Internal.Parser
            (GHC.Generics.C1
               ('GHC.Generics.MetaCons
                  "Wipe" 'GHC.Generics.PrefixI 'GHC.Types.False)
               GHC.Generics.U1
               a1))
  {- Arity: 11,
     Strictness: <L,U><C(S),U><L,U><L,U><L,U><L,U><L,U><S,U><S,U><S,U><L,U>,
     Inline: [0],
     Unfolding: (\ @ a1
                   (ww :: GHC.Base.String -> GHC.Base.String)
                   (ww1 :: GHC.Base.String -> GHC.Base.String)
                   (ww2 :: GHC.Types.Bool)
                   (ww3 :: GHC.Types.Bool)
                   (ww4 :: Data.Aeson.Types.Internal.SumEncoding)
                   (ww5 :: GHC.Types.Bool)
                   (w :: Data.Aeson.Types.FromJSON.FromArgs
                           Data.Aeson.Types.Generic.Zero a1)
                   (ww6 :: GHC.Prim.ByteArray#)
                   (ww7 :: GHC.Prim.Int#)
                   (ww8 :: GHC.Prim.Int#)
                   (ww9 :: Data.Aeson.Types.Internal.Value) ->
                 Data.Aeson.Types.FromJSON.$w$cparsePair
                   @ ('GHC.Generics.MetaCons
                        "Wipe" 'GHC.Generics.PrefixI 'GHC.Types.False)
                   @ Data.Aeson.Types.Generic.Zero
                   @ GHC.Generics.U1
                   Models.$fFromJSONTool_$s$fConstructorMetaMetaCons2
                   Models.$fFromJSONTool21
                     `cast`
                   (Sym (Data.Aeson.Types.FromJSON.N:ConsFromJSON[0]
                             <Data.Aeson.Types.Generic.Zero>_N <GHC.Generics.U1>_N))
                   @ a1
                   ww
                   ww1
                   ww2
                   ww3
                   ww4
                   ww5
                   w
                   ww6
                   ww7
                   ww8
                   ww9) -}
ac047c81ba5161bfa277428614c15047
  $w$dFromPair3 ::
    (GHC.Base.String -> GHC.Base.String)
    -> (GHC.Base.String -> GHC.Base.String)
    -> GHC.Types.Bool
    -> GHC.Types.Bool
    -> Data.Aeson.Types.Internal.SumEncoding
    -> GHC.Types.Bool
    -> Data.Aeson.Types.FromJSON.FromArgs
         Data.Aeson.Types.Generic.Zero a1
    -> GHC.Prim.ByteArray#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Aeson.Types.Internal.Value
    -> GHC.Base.Maybe
         (Data.Aeson.Types.Internal.Parser
            (GHC.Generics.C1
               ('GHC.Generics.MetaCons
                  "ZipImage" 'GHC.Generics.PrefixI 'GHC.Types.False)
               GHC.Generics.U1
               a1))
  {- Arity: 11,
     Strictness: <L,U><C(S),U><L,U><L,U><L,U><L,U><L,U><S,U><S,U><S,U><L,U>,
     Inline: [0],
     Unfolding: (\ @ a1
                   (ww :: GHC.Base.String -> GHC.Base.String)
                   (ww1 :: GHC.Base.String -> GHC.Base.String)
                   (ww2 :: GHC.Types.Bool)
                   (ww3 :: GHC.Types.Bool)
                   (ww4 :: Data.Aeson.Types.Internal.SumEncoding)
                   (ww5 :: GHC.Types.Bool)
                   (w :: Data.Aeson.Types.FromJSON.FromArgs
                           Data.Aeson.Types.Generic.Zero a1)
                   (ww6 :: GHC.Prim.ByteArray#)
                   (ww7 :: GHC.Prim.Int#)
                   (ww8 :: GHC.Prim.Int#)
                   (ww9 :: Data.Aeson.Types.Internal.Value) ->
                 Data.Aeson.Types.FromJSON.$w$cparsePair
                   @ ('GHC.Generics.MetaCons
                        "ZipImage" 'GHC.Generics.PrefixI 'GHC.Types.False)
                   @ Data.Aeson.Types.Generic.Zero
                   @ GHC.Generics.U1
                   Models.$fFromJSONTool_$s$fConstructorMetaMetaCons3
                   Models.$fFromJSONTool21
                     `cast`
                   (Sym (Data.Aeson.Types.FromJSON.N:ConsFromJSON[0]
                             <Data.Aeson.Types.Generic.Zero>_N <GHC.Generics.U1>_N))
                   @ a1
                   ww
                   ww1
                   ww2
                   ww3
                   ww4
                   ww5
                   w
                   ww6
                   ww7
                   ww8
                   ww9) -}
dde1fe220f4833067e38e6de94af96d9
  $w$dFromTaggedObject ::
    (GHC.Base.String -> GHC.Base.String)
    -> (GHC.Base.String -> GHC.Base.String)
    -> GHC.Types.Bool
    -> GHC.Types.Bool
    -> Data.Aeson.Types.Internal.SumEncoding
    -> GHC.Types.Bool
    -> Data.Aeson.Types.FromJSON.FromArgs
         Data.Aeson.Types.Generic.Zero a
    -> GHC.Base.String
    -> Data.Aeson.Types.Internal.Object
    -> GHC.Prim.ByteArray#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Base.Maybe
         (Data.Aeson.Types.Internal.Parser
            (GHC.Generics.C1
               ('GHC.Generics.MetaCons
                  "Checkerboard" 'GHC.Generics.PrefixI 'GHC.Types.False)
               GHC.Generics.U1
               a))
  {- Arity: 12,
     Strictness: <L,U><C(S),U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><S,U><S,U><S,U>,
     Inline: [0],
     Unfolding: (\ @ a
                   (ww :: GHC.Base.String -> GHC.Base.String)
                   (ww1 :: GHC.Base.String -> GHC.Base.String)
                   (ww2 :: GHC.Types.Bool)
                   (ww3 :: GHC.Types.Bool)
                   (ww4 :: Data.Aeson.Types.Internal.SumEncoding)
                   (ww5 :: GHC.Types.Bool)
                   (w :: Data.Aeson.Types.FromJSON.FromArgs
                           Data.Aeson.Types.Generic.Zero a)
                   (w1 :: GHC.Base.String)
                   (w2 :: Data.Aeson.Types.Internal.Object)
                   (ww6 :: GHC.Prim.ByteArray#)
                   (ww7 :: GHC.Prim.Int#)
                   (ww8 :: GHC.Prim.Int#) ->
                 Data.Aeson.Types.FromJSON.$w$cparseFromTaggedObject
                   @ Data.Aeson.Types.Generic.Zero
                   @ GHC.Generics.U1
                   @ ('GHC.Generics.MetaCons
                        "Checkerboard" 'GHC.Generics.PrefixI 'GHC.Types.False)
                   Models.$fFromJSONTool13
                     `cast`
                   (Trans
                        (forall (a1 :: <*>_N).
                         <Data.Aeson.Types.Internal.Options>_R
                         ->_R <Data.Aeson.Types.FromJSON.FromArgs
                                 Data.Aeson.Types.Generic.Zero a1>_R
                         ->_R <GHC.Base.String>_R
                         ->_R <Data.Aeson.Types.Internal.Object>_R
                         ->_R Sym (Data.Aeson.Types.Internal.N:Parser[0]
                                       <GHC.Generics.U1 a1>_R))
                        (Sym (Data.Aeson.Types.FromJSON.N:FromTaggedObject'[0]
                                  <Data.Aeson.Types.Generic.Zero>_N <GHC.Generics.U1>_N)))
                   Models.$fFromJSONTool_$s$fConstructorMetaMetaCons
                   @ a
                   ww
                   ww1
                   ww2
                   ww3
                   ww4
                   ww5
                   w
                   w1
                   w2
                   ww6
                   ww7
                   ww8) -}
71556548ad36f15e4ca9a3553320b7dc
  $w$dFromTaggedObject1 ::
    (GHC.Base.String -> GHC.Base.String)
    -> (GHC.Base.String -> GHC.Base.String)
    -> GHC.Types.Bool
    -> GHC.Types.Bool
    -> Data.Aeson.Types.Internal.SumEncoding
    -> GHC.Types.Bool
    -> Data.Aeson.Types.FromJSON.FromArgs
         Data.Aeson.Types.Generic.Zero a
    -> GHC.Base.String
    -> Data.Aeson.Types.Internal.Object
    -> GHC.Prim.ByteArray#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Base.Maybe
         (Data.Aeson.Types.Internal.Parser
            (GHC.Generics.C1
               ('GHC.Generics.MetaCons
                  "Blend" 'GHC.Generics.PrefixI 'GHC.Types.False)
               GHC.Generics.U1
               a))
  {- Arity: 12,
     Strictness: <L,U><C(S),U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><S,U><S,U><S,U>,
     Inline: [0],
     Unfolding: (\ @ a
                   (ww :: GHC.Base.String -> GHC.Base.String)
                   (ww1 :: GHC.Base.String -> GHC.Base.String)
                   (ww2 :: GHC.Types.Bool)
                   (ww3 :: GHC.Types.Bool)
                   (ww4 :: Data.Aeson.Types.Internal.SumEncoding)
                   (ww5 :: GHC.Types.Bool)
                   (w :: Data.Aeson.Types.FromJSON.FromArgs
                           Data.Aeson.Types.Generic.Zero a)
                   (w1 :: GHC.Base.String)
                   (w2 :: Data.Aeson.Types.Internal.Object)
                   (ww6 :: GHC.Prim.ByteArray#)
                   (ww7 :: GHC.Prim.Int#)
                   (ww8 :: GHC.Prim.Int#) ->
                 Data.Aeson.Types.FromJSON.$w$cparseFromTaggedObject
                   @ Data.Aeson.Types.Generic.Zero
                   @ GHC.Generics.U1
                   @ ('GHC.Generics.MetaCons
                        "Blend" 'GHC.Generics.PrefixI 'GHC.Types.False)
                   Models.$fFromJSONTool13
                     `cast`
                   (Trans
                        (forall (a1 :: <*>_N).
                         <Data.Aeson.Types.Internal.Options>_R
                         ->_R <Data.Aeson.Types.FromJSON.FromArgs
                                 Data.Aeson.Types.Generic.Zero a1>_R
                         ->_R <GHC.Base.String>_R
                         ->_R <Data.Aeson.Types.Internal.Object>_R
                         ->_R Sym (Data.Aeson.Types.Internal.N:Parser[0]
                                       <GHC.Generics.U1 a1>_R))
                        (Sym (Data.Aeson.Types.FromJSON.N:FromTaggedObject'[0]
                                  <Data.Aeson.Types.Generic.Zero>_N <GHC.Generics.U1>_N)))
                   Models.$fFromJSONTool_$s$fConstructorMetaMetaCons1
                   @ a
                   ww
                   ww1
                   ww2
                   ww3
                   ww4
                   ww5
                   w
                   w1
                   w2
                   ww6
                   ww7
                   ww8) -}
acec2116d1be02d1348c9f53253e5976
  $w$dFromTaggedObject2 ::
    (GHC.Base.String -> GHC.Base.String)
    -> (GHC.Base.String -> GHC.Base.String)
    -> GHC.Types.Bool
    -> GHC.Types.Bool
    -> Data.Aeson.Types.Internal.SumEncoding
    -> GHC.Types.Bool
    -> Data.Aeson.Types.FromJSON.FromArgs
         Data.Aeson.Types.Generic.Zero a
    -> GHC.Base.String
    -> Data.Aeson.Types.Internal.Object
    -> GHC.Prim.ByteArray#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Base.Maybe
         (Data.Aeson.Types.Internal.Parser
            (GHC.Generics.C1
               ('GHC.Generics.MetaCons
                  "Wipe" 'GHC.Generics.PrefixI 'GHC.Types.False)
               GHC.Generics.U1
               a))
  {- Arity: 12,
     Strictness: <L,U><C(S),U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><S,U><S,U><S,U>,
     Inline: [0],
     Unfolding: (\ @ a
                   (ww :: GHC.Base.String -> GHC.Base.String)
                   (ww1 :: GHC.Base.String -> GHC.Base.String)
                   (ww2 :: GHC.Types.Bool)
                   (ww3 :: GHC.Types.Bool)
                   (ww4 :: Data.Aeson.Types.Internal.SumEncoding)
                   (ww5 :: GHC.Types.Bool)
                   (w :: Data.Aeson.Types.FromJSON.FromArgs
                           Data.Aeson.Types.Generic.Zero a)
                   (w1 :: GHC.Base.String)
                   (w2 :: Data.Aeson.Types.Internal.Object)
                   (ww6 :: GHC.Prim.ByteArray#)
                   (ww7 :: GHC.Prim.Int#)
                   (ww8 :: GHC.Prim.Int#) ->
                 Data.Aeson.Types.FromJSON.$w$cparseFromTaggedObject
                   @ Data.Aeson.Types.Generic.Zero
                   @ GHC.Generics.U1
                   @ ('GHC.Generics.MetaCons
                        "Wipe" 'GHC.Generics.PrefixI 'GHC.Types.False)
                   Models.$fFromJSONTool13
                     `cast`
                   (Trans
                        (forall (a1 :: <*>_N).
                         <Data.Aeson.Types.Internal.Options>_R
                         ->_R <Data.Aeson.Types.FromJSON.FromArgs
                                 Data.Aeson.Types.Generic.Zero a1>_R
                         ->_R <GHC.Base.String>_R
                         ->_R <Data.Aeson.Types.Internal.Object>_R
                         ->_R Sym (Data.Aeson.Types.Internal.N:Parser[0]
                                       <GHC.Generics.U1 a1>_R))
                        (Sym (Data.Aeson.Types.FromJSON.N:FromTaggedObject'[0]
                                  <Data.Aeson.Types.Generic.Zero>_N <GHC.Generics.U1>_N)))
                   Models.$fFromJSONTool_$s$fConstructorMetaMetaCons2
                   @ a
                   ww
                   ww1
                   ww2
                   ww3
                   ww4
                   ww5
                   w
                   w1
                   w2
                   ww6
                   ww7
                   ww8) -}
1dbfbe5290b1258dd080226f2830a329
  $w$dFromTaggedObject3 ::
    (GHC.Base.String -> GHC.Base.String)
    -> (GHC.Base.String -> GHC.Base.String)
    -> GHC.Types.Bool
    -> GHC.Types.Bool
    -> Data.Aeson.Types.Internal.SumEncoding
    -> GHC.Types.Bool
    -> Data.Aeson.Types.FromJSON.FromArgs
         Data.Aeson.Types.Generic.Zero a
    -> GHC.Base.String
    -> Data.Aeson.Types.Internal.Object
    -> GHC.Prim.ByteArray#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Base.Maybe
         (Data.Aeson.Types.Internal.Parser
            (GHC.Generics.C1
               ('GHC.Generics.MetaCons
                  "ZipImage" 'GHC.Generics.PrefixI 'GHC.Types.False)
               GHC.Generics.U1
               a))
  {- Arity: 12,
     Strictness: <L,U><C(S),U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><S,U><S,U><S,U>,
     Inline: [0],
     Unfolding: (\ @ a
                   (ww :: GHC.Base.String -> GHC.Base.String)
                   (ww1 :: GHC.Base.String -> GHC.Base.String)
                   (ww2 :: GHC.Types.Bool)
                   (ww3 :: GHC.Types.Bool)
                   (ww4 :: Data.Aeson.Types.Internal.SumEncoding)
                   (ww5 :: GHC.Types.Bool)
                   (w :: Data.Aeson.Types.FromJSON.FromArgs
                           Data.Aeson.Types.Generic.Zero a)
                   (w1 :: GHC.Base.String)
                   (w2 :: Data.Aeson.Types.Internal.Object)
                   (ww6 :: GHC.Prim.ByteArray#)
                   (ww7 :: GHC.Prim.Int#)
                   (ww8 :: GHC.Prim.Int#) ->
                 Data.Aeson.Types.FromJSON.$w$cparseFromTaggedObject
                   @ Data.Aeson.Types.Generic.Zero
                   @ GHC.Generics.U1
                   @ ('GHC.Generics.MetaCons
                        "ZipImage" 'GHC.Generics.PrefixI 'GHC.Types.False)
                   Models.$fFromJSONTool13
                     `cast`
                   (Trans
                        (forall (a1 :: <*>_N).
                         <Data.Aeson.Types.Internal.Options>_R
                         ->_R <Data.Aeson.Types.FromJSON.FromArgs
                                 Data.Aeson.Types.Generic.Zero a1>_R
                         ->_R <GHC.Base.String>_R
                         ->_R <Data.Aeson.Types.Internal.Object>_R
                         ->_R Sym (Data.Aeson.Types.Internal.N:Parser[0]
                                       <GHC.Generics.U1 a1>_R))
                        (Sym (Data.Aeson.Types.FromJSON.N:FromTaggedObject'[0]
                                  <Data.Aeson.Types.Generic.Zero>_N <GHC.Generics.U1>_N)))
                   Models.$fFromJSONTool_$s$fConstructorMetaMetaCons3
                   @ a
                   ww
                   ww1
                   ww2
                   ww3
                   ww4
                   ww5
                   w
                   w1
                   w2
                   ww6
                   ww7
                   ww8) -}
8fcc9fc6c4725c5641460c9d3e72f9b3
  $w$dFromUntaggedValue ::
    Data.Aeson.Types.Internal.Options
    -> Data.Aeson.Types.Internal.Value
    -> Data.Aeson.Types.Internal.Parser
         ((GHC.Generics.:+:)
            (GHC.Generics.C1
               ('GHC.Generics.MetaCons
                  "ZipImage" 'GHC.Generics.PrefixI 'GHC.Types.False)
               GHC.Generics.U1
             GHC.Generics.:+: GHC.Generics.C1
                                ('GHC.Generics.MetaCons
                                   "Wipe" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                GHC.Generics.U1)
            (GHC.Generics.C1
               ('GHC.Generics.MetaCons
                  "Blend" 'GHC.Generics.PrefixI 'GHC.Types.False)
               GHC.Generics.U1
             GHC.Generics.:+: GHC.Generics.C1
                                ('GHC.Generics.MetaCons
                                   "Checkerboard" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                GHC.Generics.U1)
            a1)
  {- Arity: 2, Strictness: <L,U(A,C(U),A,A,A,A)><L,U>, Inline: [0],
     Unfolding: (\ @ a1
                   (w :: Data.Aeson.Types.Internal.Options)
                   (w1 :: Data.Aeson.Types.Internal.Value) ->
                 let {
                   m :: Data.Aeson.Types.Internal.Parser
                          (GHC.Generics.M1
                             GHC.Generics.C
                             ('GHC.Generics.MetaCons
                                "ZipImage" 'GHC.Generics.PrefixI 'GHC.Types.False)
                             GHC.Generics.U1
                             a1)
                   = Data.Aeson.Types.FromJSON.$w$cparseUntaggedValue
                       @ ('GHC.Generics.MetaCons
                            "ZipImage" 'GHC.Generics.PrefixI 'GHC.Types.False)
                       @ Data.Aeson.Types.Generic.Zero
                       Models.$fFromJSONTool_$s$fConstructorMetaMetaCons3
                       @ a1
                       w
                       w1
                 } in
                 let {
                   m1 :: Data.Aeson.Types.Internal.Parser
                           (GHC.Generics.M1
                              GHC.Generics.C
                              ('GHC.Generics.MetaCons
                                 "Wipe" 'GHC.Generics.PrefixI 'GHC.Types.False)
                              GHC.Generics.U1
                              a1)
                   = Data.Aeson.Types.FromJSON.$w$cparseUntaggedValue
                       @ ('GHC.Generics.MetaCons
                            "Wipe" 'GHC.Generics.PrefixI 'GHC.Types.False)
                       @ Data.Aeson.Types.Generic.Zero
                       Models.$fFromJSONTool_$s$fConstructorMetaMetaCons2
                       @ a1
                       w
                       w1
                 } in
                 let {
                   m2 :: Data.Aeson.Types.Internal.Parser
                           (GHC.Generics.M1
                              GHC.Generics.C
                              ('GHC.Generics.MetaCons
                                 "Blend" 'GHC.Generics.PrefixI 'GHC.Types.False)
                              GHC.Generics.U1
                              a1)
                   = Data.Aeson.Types.FromJSON.$w$cparseUntaggedValue
                       @ ('GHC.Generics.MetaCons
                            "Blend" 'GHC.Generics.PrefixI 'GHC.Types.False)
                       @ Data.Aeson.Types.Generic.Zero
                       Models.$fFromJSONTool_$s$fConstructorMetaMetaCons1
                       @ a1
                       w
                       w1
                 } in
                 let {
                   m3 :: Data.Aeson.Types.Internal.Parser
                           (GHC.Generics.M1
                              GHC.Generics.C
                              ('GHC.Generics.MetaCons
                                 "Checkerboard" 'GHC.Generics.PrefixI 'GHC.Types.False)
                              GHC.Generics.U1
                              a1)
                   = Data.Aeson.Types.FromJSON.$w$cparseUntaggedValue
                       @ ('GHC.Generics.MetaCons
                            "Checkerboard" 'GHC.Generics.PrefixI 'GHC.Types.False)
                       @ Data.Aeson.Types.Generic.Zero
                       Models.$fFromJSONTool_$s$fConstructorMetaMetaCons
                       @ a1
                       w
                       w1
                 } in
                 (\ @ (f :: * -> *)
                    @ r
                    (path :: Data.Aeson.Types.Internal.JSONPath)
                    (kf :: Data.Aeson.Types.Internal.Failure f r)
                    (ks :: Data.Aeson.Types.Internal.Success
                             ((GHC.Generics.:+:)
                                (GHC.Generics.C1
                                   ('GHC.Generics.MetaCons
                                      "ZipImage" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                   GHC.Generics.U1
                                 GHC.Generics.:+: GHC.Generics.C1
                                                    ('GHC.Generics.MetaCons
                                                       "Wipe"
                                                       'GHC.Generics.PrefixI
                                                       'GHC.Types.False)
                                                    GHC.Generics.U1)
                                (GHC.Generics.C1
                                   ('GHC.Generics.MetaCons
                                      "Blend" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                   GHC.Generics.U1
                                 GHC.Generics.:+: GHC.Generics.C1
                                                    ('GHC.Generics.MetaCons
                                                       "Checkerboard"
                                                       'GHC.Generics.PrefixI
                                                       'GHC.Types.False)
                                                    GHC.Generics.U1)
                                a1)
                             f
                             r) ->
                  let {
                    lvl212 :: f r
                    = let {
                        lvl13 :: f r
                        = let {
                            lvl14 :: f r
                            = m3
                                `cast`
                              (Data.Aeson.Types.Internal.N:Parser[0]
                                   <GHC.Generics.M1
                                      GHC.Generics.C
                                      ('GHC.Generics.MetaCons
                                         "Checkerboard" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                      GHC.Generics.U1
                                      a1>_R)
                                @ f
                                @ r
                                path
                                kf
                                (\ (a2 :: GHC.Generics.M1
                                            GHC.Generics.C
                                            ('GHC.Generics.MetaCons
                                               "Checkerboard"
                                               'GHC.Generics.PrefixI
                                               'GHC.Types.False)
                                            GHC.Generics.U1
                                            a1) ->
                                 ks
                                   (GHC.Generics.R1
                                      @ (GHC.Generics.C1
                                           ('GHC.Generics.MetaCons
                                              "ZipImage" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                           GHC.Generics.U1
                                         GHC.Generics.:+: GHC.Generics.C1
                                                            ('GHC.Generics.MetaCons
                                                               "Wipe"
                                                               'GHC.Generics.PrefixI
                                                               'GHC.Types.False)
                                                            GHC.Generics.U1)
                                      @ (GHC.Generics.C1
                                           ('GHC.Generics.MetaCons
                                              "Blend" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                           GHC.Generics.U1
                                         GHC.Generics.:+: GHC.Generics.C1
                                                            ('GHC.Generics.MetaCons
                                                               "Checkerboard"
                                                               'GHC.Generics.PrefixI
                                                               'GHC.Types.False)
                                                            GHC.Generics.U1)
                                      @ a1
                                      (GHC.Generics.R1
                                         @ (GHC.Generics.M1
                                              GHC.Generics.C
                                              ('GHC.Generics.MetaCons
                                                 "Blend" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                              GHC.Generics.U1)
                                         @ (GHC.Generics.M1
                                              GHC.Generics.C
                                              ('GHC.Generics.MetaCons
                                                 "Checkerboard"
                                                 'GHC.Generics.PrefixI
                                                 'GHC.Types.False)
                                              GHC.Generics.U1)
                                         @ a1
                                         a2)))
                          } in
                          m2
                            `cast`
                          (Data.Aeson.Types.Internal.N:Parser[0]
                               <GHC.Generics.M1
                                  GHC.Generics.C
                                  ('GHC.Generics.MetaCons
                                     "Blend" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                  GHC.Generics.U1
                                  a1>_R)
                            @ f
                            @ r
                            path
                            (\ (ds :: Data.Aeson.Types.Internal.JSONPath)
                               (ds1 :: GHC.Base.String) ->
                             lvl14)
                            (\ (a2 :: GHC.Generics.M1
                                        GHC.Generics.C
                                        ('GHC.Generics.MetaCons
                                           "Blend" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                        GHC.Generics.U1
                                        a1) ->
                             ks
                               (GHC.Generics.R1
                                  @ (GHC.Generics.C1
                                       ('GHC.Generics.MetaCons
                                          "ZipImage" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                       GHC.Generics.U1
                                     GHC.Generics.:+: GHC.Generics.C1
                                                        ('GHC.Generics.MetaCons
                                                           "Wipe"
                                                           'GHC.Generics.PrefixI
                                                           'GHC.Types.False)
                                                        GHC.Generics.U1)
                                  @ (GHC.Generics.C1
                                       ('GHC.Generics.MetaCons
                                          "Blend" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                       GHC.Generics.U1
                                     GHC.Generics.:+: GHC.Generics.C1
                                                        ('GHC.Generics.MetaCons
                                                           "Checkerboard"
                                                           'GHC.Generics.PrefixI
                                                           'GHC.Types.False)
                                                        GHC.Generics.U1)
                                  @ a1
                                  (GHC.Generics.L1
                                     @ (GHC.Generics.M1
                                          GHC.Generics.C
                                          ('GHC.Generics.MetaCons
                                             "Blend" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                          GHC.Generics.U1)
                                     @ (GHC.Generics.M1
                                          GHC.Generics.C
                                          ('GHC.Generics.MetaCons
                                             "Checkerboard" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                          GHC.Generics.U1)
                                     @ a1
                                     a2)))
                      } in
                      m1
                        `cast`
                      (Data.Aeson.Types.Internal.N:Parser[0]
                           <GHC.Generics.M1
                              GHC.Generics.C
                              ('GHC.Generics.MetaCons
                                 "Wipe" 'GHC.Generics.PrefixI 'GHC.Types.False)
                              GHC.Generics.U1
                              a1>_R)
                        @ f
                        @ r
                        path
                        (\ (ds :: Data.Aeson.Types.Internal.JSONPath)
                           (ds1 :: GHC.Base.String) ->
                         lvl13)
                        (\ (a2 :: GHC.Generics.M1
                                    GHC.Generics.C
                                    ('GHC.Generics.MetaCons
                                       "Wipe" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                    GHC.Generics.U1
                                    a1) ->
                         ks
                           (GHC.Generics.L1
                              @ (GHC.Generics.C1
                                   ('GHC.Generics.MetaCons
                                      "ZipImage" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                   GHC.Generics.U1
                                 GHC.Generics.:+: GHC.Generics.C1
                                                    ('GHC.Generics.MetaCons
                                                       "Wipe"
                                                       'GHC.Generics.PrefixI
                                                       'GHC.Types.False)
                                                    GHC.Generics.U1)
                              @ (GHC.Generics.C1
                                   ('GHC.Generics.MetaCons
                                      "Blend" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                   GHC.Generics.U1
                                 GHC.Generics.:+: GHC.Generics.C1
                                                    ('GHC.Generics.MetaCons
                                                       "Checkerboard"
                                                       'GHC.Generics.PrefixI
                                                       'GHC.Types.False)
                                                    GHC.Generics.U1)
                              @ a1
                              (GHC.Generics.R1
                                 @ (GHC.Generics.M1
                                      GHC.Generics.C
                                      ('GHC.Generics.MetaCons
                                         "ZipImage" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                      GHC.Generics.U1)
                                 @ (GHC.Generics.M1
                                      GHC.Generics.C
                                      ('GHC.Generics.MetaCons
                                         "Wipe" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                      GHC.Generics.U1)
                                 @ a1
                                 a2)))
                  } in
                  m `cast`
                  (Data.Aeson.Types.Internal.N:Parser[0]
                       <GHC.Generics.M1
                          GHC.Generics.C
                          ('GHC.Generics.MetaCons
                             "ZipImage" 'GHC.Generics.PrefixI 'GHC.Types.False)
                          GHC.Generics.U1
                          a1>_R)
                    @ f
                    @ r
                    path
                    (\ (ds :: Data.Aeson.Types.Internal.JSONPath)
                       (ds1 :: GHC.Base.String) ->
                     lvl212)
                    (\ (a2 :: GHC.Generics.M1
                                GHC.Generics.C
                                ('GHC.Generics.MetaCons
                                   "ZipImage" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                GHC.Generics.U1
                                a1) ->
                     ks
                       (GHC.Generics.L1
                          @ (GHC.Generics.C1
                               ('GHC.Generics.MetaCons
                                  "ZipImage" 'GHC.Generics.PrefixI 'GHC.Types.False)
                               GHC.Generics.U1
                             GHC.Generics.:+: GHC.Generics.C1
                                                ('GHC.Generics.MetaCons
                                                   "Wipe" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                                GHC.Generics.U1)
                          @ (GHC.Generics.C1
                               ('GHC.Generics.MetaCons
                                  "Blend" 'GHC.Generics.PrefixI 'GHC.Types.False)
                               GHC.Generics.U1
                             GHC.Generics.:+: GHC.Generics.C1
                                                ('GHC.Generics.MetaCons
                                                   "Checkerboard"
                                                   'GHC.Generics.PrefixI
                                                   'GHC.Types.False)
                                                GHC.Generics.U1)
                          @ a1
                          (GHC.Generics.L1
                             @ (GHC.Generics.M1
                                  GHC.Generics.C
                                  ('GHC.Generics.MetaCons
                                     "ZipImage" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                  GHC.Generics.U1)
                             @ (GHC.Generics.M1
                                  GHC.Generics.C
                                  ('GHC.Generics.MetaCons
                                     "Wipe" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                  GHC.Generics.U1)
                             @ a1
                             a2))))
                   `cast`
                 (Sym (Data.Aeson.Types.Internal.N:Parser[0]
                           <(GHC.Generics.:+:)
                              (GHC.Generics.C1
                                 ('GHC.Generics.MetaCons
                                    "ZipImage" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                 GHC.Generics.U1
                               GHC.Generics.:+: GHC.Generics.C1
                                                  ('GHC.Generics.MetaCons
                                                     "Wipe" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                                  GHC.Generics.U1)
                              (GHC.Generics.C1
                                 ('GHC.Generics.MetaCons
                                    "Blend" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                 GHC.Generics.U1
                               GHC.Generics.:+: GHC.Generics.C1
                                                  ('GHC.Generics.MetaCons
                                                     "Checkerboard"
                                                     'GHC.Generics.PrefixI
                                                     'GHC.Types.False)
                                                  GHC.Generics.U1)
                              a1>_R))) -}
40ade589f99bc2e2d4bf547aa54fc8a6
  $w$dSumFromString ::
    (GHC.Base.String -> GHC.Base.String)
    -> GHC.Prim.ByteArray#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Base.Maybe
         ((GHC.Generics.:+:)
            (GHC.Generics.C1
               ('GHC.Generics.MetaCons
                  "ZipImage" 'GHC.Generics.PrefixI 'GHC.Types.False)
               GHC.Generics.U1
             GHC.Generics.:+: GHC.Generics.C1
                                ('GHC.Generics.MetaCons
                                   "Wipe" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                GHC.Generics.U1)
            (GHC.Generics.C1
               ('GHC.Generics.MetaCons
                  "Blend" 'GHC.Generics.PrefixI 'GHC.Types.False)
               GHC.Generics.U1
             GHC.Generics.:+: GHC.Generics.C1
                                ('GHC.Generics.MetaCons
                                   "Checkerboard" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                GHC.Generics.U1)
            a1)
  {- Arity: 4, Strictness: <C(S),C(U)><S,U><S,U><S,U>, Inline: [0],
     Unfolding: (\ @ a1
                   (ww :: GHC.Base.String -> GHC.Base.String)
                   (ww1 :: GHC.Prim.ByteArray#)
                   (ww2 :: GHC.Prim.Int#)
                   (ww3 :: GHC.Prim.Int#) ->
                 case Data.Aeson.Types.FromJSON.$w$cparseSumFromString
                        @ ('GHC.Generics.MetaCons
                             "ZipImage" 'GHC.Generics.PrefixI 'GHC.Types.False)
                        Models.$fFromJSONTool_$s$fConstructorMetaMetaCons3
                        @ a1
                        ww
                        ww1
                        ww2
                        ww3 of wild {
                   GHC.Base.Nothing
                   -> case Data.Aeson.Types.FromJSON.$w$cparseSumFromString
                             @ ('GHC.Generics.MetaCons
                                  "Wipe" 'GHC.Generics.PrefixI 'GHC.Types.False)
                             Models.$fFromJSONTool_$s$fConstructorMetaMetaCons2
                             @ a1
                             ww
                             ww1
                             ww2
                             ww3 of wild1 {
                        GHC.Base.Nothing
                        -> case Data.Aeson.Types.FromJSON.$w$cparseSumFromString
                                  @ ('GHC.Generics.MetaCons
                                       "Blend" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                  Models.$fFromJSONTool_$s$fConstructorMetaMetaCons1
                                  @ a1
                                  ww
                                  ww1
                                  ww2
                                  ww3 of wild2 {
                             GHC.Base.Nothing
                             -> case Data.Aeson.Types.FromJSON.$w$cparseSumFromString
                                       @ ('GHC.Generics.MetaCons
                                            "Checkerboard" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                       Models.$fFromJSONTool_$s$fConstructorMetaMetaCons
                                       @ a1
                                       ww
                                       ww1
                                       ww2
                                       ww3 of wild3 {
                                  GHC.Base.Nothing
                                  -> GHC.Base.Nothing
                                       @ ((GHC.Generics.:+:)
                                            (GHC.Generics.C1
                                               ('GHC.Generics.MetaCons
                                                  "ZipImage" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                               GHC.Generics.U1
                                             GHC.Generics.:+: GHC.Generics.C1
                                                                ('GHC.Generics.MetaCons
                                                                   "Wipe"
                                                                   'GHC.Generics.PrefixI
                                                                   'GHC.Types.False)
                                                                GHC.Generics.U1)
                                            (GHC.Generics.C1
                                               ('GHC.Generics.MetaCons
                                                  "Blend" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                               GHC.Generics.U1
                                             GHC.Generics.:+: GHC.Generics.C1
                                                                ('GHC.Generics.MetaCons
                                                                   "Checkerboard"
                                                                   'GHC.Generics.PrefixI
                                                                   'GHC.Types.False)
                                                                GHC.Generics.U1)
                                            a1)
                                  GHC.Base.Just x
                                  -> GHC.Base.Just
                                       @ ((GHC.Generics.:+:)
                                            (GHC.Generics.C1
                                               ('GHC.Generics.MetaCons
                                                  "ZipImage" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                               GHC.Generics.U1
                                             GHC.Generics.:+: GHC.Generics.C1
                                                                ('GHC.Generics.MetaCons
                                                                   "Wipe"
                                                                   'GHC.Generics.PrefixI
                                                                   'GHC.Types.False)
                                                                GHC.Generics.U1)
                                            (GHC.Generics.C1
                                               ('GHC.Generics.MetaCons
                                                  "Blend" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                               GHC.Generics.U1
                                             GHC.Generics.:+: GHC.Generics.C1
                                                                ('GHC.Generics.MetaCons
                                                                   "Checkerboard"
                                                                   'GHC.Generics.PrefixI
                                                                   'GHC.Types.False)
                                                                GHC.Generics.U1)
                                            a1)
                                       (GHC.Generics.R1
                                          @ (GHC.Generics.C1
                                               ('GHC.Generics.MetaCons
                                                  "ZipImage" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                               GHC.Generics.U1
                                             GHC.Generics.:+: GHC.Generics.C1
                                                                ('GHC.Generics.MetaCons
                                                                   "Wipe"
                                                                   'GHC.Generics.PrefixI
                                                                   'GHC.Types.False)
                                                                GHC.Generics.U1)
                                          @ (GHC.Generics.C1
                                               ('GHC.Generics.MetaCons
                                                  "Blend" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                               GHC.Generics.U1
                                             GHC.Generics.:+: GHC.Generics.C1
                                                                ('GHC.Generics.MetaCons
                                                                   "Checkerboard"
                                                                   'GHC.Generics.PrefixI
                                                                   'GHC.Types.False)
                                                                GHC.Generics.U1)
                                          @ a1
                                          (GHC.Generics.R1
                                             @ (GHC.Generics.M1
                                                  GHC.Generics.C
                                                  ('GHC.Generics.MetaCons
                                                     "Blend" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                                  GHC.Generics.U1)
                                             @ (GHC.Generics.M1
                                                  GHC.Generics.C
                                                  ('GHC.Generics.MetaCons
                                                     "Checkerboard"
                                                     'GHC.Generics.PrefixI
                                                     'GHC.Types.False)
                                                  GHC.Generics.U1)
                                             @ a1
                                             x)) }
                             GHC.Base.Just x
                             -> GHC.Base.Just
                                  @ ((GHC.Generics.:+:)
                                       (GHC.Generics.C1
                                          ('GHC.Generics.MetaCons
                                             "ZipImage" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                          GHC.Generics.U1
                                        GHC.Generics.:+: GHC.Generics.C1
                                                           ('GHC.Generics.MetaCons
                                                              "Wipe"
                                                              'GHC.Generics.PrefixI
                                                              'GHC.Types.False)
                                                           GHC.Generics.U1)
                                       (GHC.Generics.C1
                                          ('GHC.Generics.MetaCons
                                             "Blend" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                          GHC.Generics.U1
                                        GHC.Generics.:+: GHC.Generics.C1
                                                           ('GHC.Generics.MetaCons
                                                              "Checkerboard"
                                                              'GHC.Generics.PrefixI
                                                              'GHC.Types.False)
                                                           GHC.Generics.U1)
                                       a1)
                                  (GHC.Generics.R1
                                     @ (GHC.Generics.C1
                                          ('GHC.Generics.MetaCons
                                             "ZipImage" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                          GHC.Generics.U1
                                        GHC.Generics.:+: GHC.Generics.C1
                                                           ('GHC.Generics.MetaCons
                                                              "Wipe"
                                                              'GHC.Generics.PrefixI
                                                              'GHC.Types.False)
                                                           GHC.Generics.U1)
                                     @ (GHC.Generics.C1
                                          ('GHC.Generics.MetaCons
                                             "Blend" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                          GHC.Generics.U1
                                        GHC.Generics.:+: GHC.Generics.C1
                                                           ('GHC.Generics.MetaCons
                                                              "Checkerboard"
                                                              'GHC.Generics.PrefixI
                                                              'GHC.Types.False)
                                                           GHC.Generics.U1)
                                     @ a1
                                     (GHC.Generics.L1
                                        @ (GHC.Generics.M1
                                             GHC.Generics.C
                                             ('GHC.Generics.MetaCons
                                                "Blend" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                             GHC.Generics.U1)
                                        @ (GHC.Generics.M1
                                             GHC.Generics.C
                                             ('GHC.Generics.MetaCons
                                                "Checkerboard"
                                                'GHC.Generics.PrefixI
                                                'GHC.Types.False)
                                             GHC.Generics.U1)
                                        @ a1
                                        x)) }
                        GHC.Base.Just x
                        -> GHC.Base.Just
                             @ ((GHC.Generics.:+:)
                                  (GHC.Generics.C1
                                     ('GHC.Generics.MetaCons
                                        "ZipImage" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                     GHC.Generics.U1
                                   GHC.Generics.:+: GHC.Generics.C1
                                                      ('GHC.Generics.MetaCons
                                                         "Wipe"
                                                         'GHC.Generics.PrefixI
                                                         'GHC.Types.False)
                                                      GHC.Generics.U1)
                                  (GHC.Generics.C1
                                     ('GHC.Generics.MetaCons
                                        "Blend" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                     GHC.Generics.U1
                                   GHC.Generics.:+: GHC.Generics.C1
                                                      ('GHC.Generics.MetaCons
                                                         "Checkerboard"
                                                         'GHC.Generics.PrefixI
                                                         'GHC.Types.False)
                                                      GHC.Generics.U1)
                                  a1)
                             (GHC.Generics.L1
                                @ (GHC.Generics.C1
                                     ('GHC.Generics.MetaCons
                                        "ZipImage" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                     GHC.Generics.U1
                                   GHC.Generics.:+: GHC.Generics.C1
                                                      ('GHC.Generics.MetaCons
                                                         "Wipe"
                                                         'GHC.Generics.PrefixI
                                                         'GHC.Types.False)
                                                      GHC.Generics.U1)
                                @ (GHC.Generics.C1
                                     ('GHC.Generics.MetaCons
                                        "Blend" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                     GHC.Generics.U1
                                   GHC.Generics.:+: GHC.Generics.C1
                                                      ('GHC.Generics.MetaCons
                                                         "Checkerboard"
                                                         'GHC.Generics.PrefixI
                                                         'GHC.Types.False)
                                                      GHC.Generics.U1)
                                @ a1
                                (GHC.Generics.R1
                                   @ (GHC.Generics.M1
                                        GHC.Generics.C
                                        ('GHC.Generics.MetaCons
                                           "ZipImage" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                        GHC.Generics.U1)
                                   @ (GHC.Generics.M1
                                        GHC.Generics.C
                                        ('GHC.Generics.MetaCons
                                           "Wipe" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                        GHC.Generics.U1)
                                   @ a1
                                   x)) }
                   GHC.Base.Just x
                   -> GHC.Base.Just
                        @ ((GHC.Generics.:+:)
                             (GHC.Generics.C1
                                ('GHC.Generics.MetaCons
                                   "ZipImage" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                GHC.Generics.U1
                              GHC.Generics.:+: GHC.Generics.C1
                                                 ('GHC.Generics.MetaCons
                                                    "Wipe" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                                 GHC.Generics.U1)
                             (GHC.Generics.C1
                                ('GHC.Generics.MetaCons
                                   "Blend" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                GHC.Generics.U1
                              GHC.Generics.:+: GHC.Generics.C1
                                                 ('GHC.Generics.MetaCons
                                                    "Checkerboard"
                                                    'GHC.Generics.PrefixI
                                                    'GHC.Types.False)
                                                 GHC.Generics.U1)
                             a1)
                        (GHC.Generics.L1
                           @ (GHC.Generics.C1
                                ('GHC.Generics.MetaCons
                                   "ZipImage" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                GHC.Generics.U1
                              GHC.Generics.:+: GHC.Generics.C1
                                                 ('GHC.Generics.MetaCons
                                                    "Wipe" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                                 GHC.Generics.U1)
                           @ (GHC.Generics.C1
                                ('GHC.Generics.MetaCons
                                   "Blend" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                GHC.Generics.U1
                              GHC.Generics.:+: GHC.Generics.C1
                                                 ('GHC.Generics.MetaCons
                                                    "Checkerboard"
                                                    'GHC.Generics.PrefixI
                                                    'GHC.Types.False)
                                                 GHC.Generics.U1)
                           @ a1
                           (GHC.Generics.L1
                              @ (GHC.Generics.M1
                                   GHC.Generics.C
                                   ('GHC.Generics.MetaCons
                                      "ZipImage" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                   GHC.Generics.U1)
                              @ (GHC.Generics.M1
                                   GHC.Generics.C
                                   ('GHC.Generics.MetaCons
                                      "Wipe" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                   GHC.Generics.U1)
                              @ a1
                              x)) }) -}
d83997f78b7066577450c746e42796b9
  $w$dUntaggedValueObj ::
    (GHC.Base.String -> GHC.Base.String)
    -> (GHC.Generics.:+:)
         (GHC.Generics.C1
            ('GHC.Generics.MetaCons
               "ZipImage" 'GHC.Generics.PrefixI 'GHC.Types.False)
            GHC.Generics.U1
          GHC.Generics.:+: GHC.Generics.C1
                             ('GHC.Generics.MetaCons
                                "Wipe" 'GHC.Generics.PrefixI 'GHC.Types.False)
                             GHC.Generics.U1)
         (GHC.Generics.C1
            ('GHC.Generics.MetaCons
               "Blend" 'GHC.Generics.PrefixI 'GHC.Types.False)
            GHC.Generics.U1
          GHC.Generics.:+: GHC.Generics.C1
                             ('GHC.Generics.MetaCons
                                "Checkerboard" 'GHC.Generics.PrefixI 'GHC.Types.False)
                             GHC.Generics.U1)
         a1
    -> (# Data.Text.Internal.Text #)
  {- Arity: 2, Strictness: <C(S),1*C1(U)><S,1*U>, Inline: [0],
     Unfolding: (\ @ a1
                   (ww :: GHC.Base.String -> GHC.Base.String)
                   (w :: (GHC.Generics.:+:)
                           (GHC.Generics.C1
                              ('GHC.Generics.MetaCons
                                 "ZipImage" 'GHC.Generics.PrefixI 'GHC.Types.False)
                              GHC.Generics.U1
                            GHC.Generics.:+: GHC.Generics.C1
                                               ('GHC.Generics.MetaCons
                                                  "Wipe" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                               GHC.Generics.U1)
                           (GHC.Generics.C1
                              ('GHC.Generics.MetaCons
                                 "Blend" 'GHC.Generics.PrefixI 'GHC.Types.False)
                              GHC.Generics.U1
                            GHC.Generics.:+: GHC.Generics.C1
                                               ('GHC.Generics.MetaCons
                                                  "Checkerboard"
                                                  'GHC.Generics.PrefixI
                                                  'GHC.Types.False)
                                               GHC.Generics.U1)
                           a1) ->
                 case w of wild {
                   GHC.Generics.L1 x
                   -> case x of wild1 {
                        GHC.Generics.L1 x1
                        -> Data.Aeson.Types.ToJSON.$w$cuntaggedValueObj
                             @ ('GHC.Generics.MetaCons
                                  "ZipImage" 'GHC.Generics.PrefixI 'GHC.Types.False)
                             @ Data.Aeson.Types.Generic.Zero
                             Models.$fFromJSONTool_$s$fConstructorMetaMetaCons3
                             @ a1
                             ww
                        GHC.Generics.R1 x1
                        -> Data.Aeson.Types.ToJSON.$w$cuntaggedValueObj
                             @ ('GHC.Generics.MetaCons
                                  "Wipe" 'GHC.Generics.PrefixI 'GHC.Types.False)
                             @ Data.Aeson.Types.Generic.Zero
                             Models.$fFromJSONTool_$s$fConstructorMetaMetaCons2
                             @ a1
                             ww }
                   GHC.Generics.R1 x
                   -> case x of wild1 {
                        GHC.Generics.L1 x1
                        -> Data.Aeson.Types.ToJSON.$w$cuntaggedValueObj
                             @ ('GHC.Generics.MetaCons
                                  "Blend" 'GHC.Generics.PrefixI 'GHC.Types.False)
                             @ Data.Aeson.Types.Generic.Zero
                             Models.$fFromJSONTool_$s$fConstructorMetaMetaCons1
                             @ a1
                             ww
                        GHC.Generics.R1 x1
                        -> Data.Aeson.Types.ToJSON.$w$cuntaggedValueObj
                             @ ('GHC.Generics.MetaCons
                                  "Checkerboard" 'GHC.Generics.PrefixI 'GHC.Types.False)
                             @ Data.Aeson.Types.Generic.Zero
                             Models.$fFromJSONTool_$s$fConstructorMetaMetaCons
                             @ a1
                             ww } }) -}
3691ed8b5e249ec582535ba8aa70b6ee
  axiom Rep_Tool::
      GHC.Generics.Rep Models.Tool
        = GHC.Generics.D1
            ('GHC.Generics.MetaData
               "Tool"
               "Models"
               "picFun-0.1.0.0-JNPOSgLeq7jJoAtQCvQXmk"
               'GHC.Types.False)
            ((GHC.Generics.C1
                ('GHC.Generics.MetaCons
                   "ZipImage" 'GHC.Generics.PrefixI 'GHC.Types.False)
                GHC.Generics.U1
              GHC.Generics.:+: GHC.Generics.C1
                                 ('GHC.Generics.MetaCons
                                    "Wipe" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                 GHC.Generics.U1)
             GHC.Generics.:+: (GHC.Generics.C1
                                 ('GHC.Generics.MetaCons
                                    "Blend" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                 GHC.Generics.U1
                               GHC.Generics.:+: GHC.Generics.C1
                                                  ('GHC.Generics.MetaCons
                                                     "Checkerboard"
                                                     'GHC.Generics.PrefixI
                                                     'GHC.Types.False)
                                                  GHC.Generics.U1))
3691ed8b5e249ec582535ba8aa70b6ee
  data Tool = ZipImage | Wipe | Blend | Checkerboard
instance GHC.Classes.Eq [Models.Tool] = Models.$fEqTool
instance Data.Aeson.Types.FromJSON.FromJSON [Models.Tool]
  = Models.$fFromJSONTool
instance GHC.Generics.Generic [Models.Tool] = Models.$fGenericTool
instance GHC.Read.Read [Models.Tool] = Models.$fReadTool
instance GHC.Show.Show [Models.Tool] = Models.$fShowTool
instance Data.Aeson.Types.ToJSON.ToJSON [Models.Tool]
  = Models.$fToJSONTool
family instance GHC.Generics.Rep [Models.Tool] = Models.Rep_Tool
"SPEC/Models $fConstructorMetaMetaCons @ "Blend" @ 'PrefixI @ 'False" [ALWAYS] forall ($dSingI1 :: GHC.Generics.SingI
                                                                                                     'GHC.Types.False)
                                                                                      ($dSingI :: GHC.Generics.SingI
                                                                                                    'GHC.Generics.PrefixI)
                                                                                      ($dKnownSymbol :: GHC.TypeLits.KnownSymbol
                                                                                                          "Blend")
  GHC.Generics.$fConstructorMetaMetaCons @ "Blend"
                                         @ 'GHC.Generics.PrefixI
                                         @ 'GHC.Types.False
                                         $dKnownSymbol
                                         $dSingI
                                         $dSingI1
  = Models.$fFromJSONTool_$s$fConstructorMetaMetaCons1
"SPEC/Models $fConstructorMetaMetaCons @ "Checkerboard" @ 'PrefixI @ 'False" [ALWAYS] forall ($dSingI1 :: GHC.Generics.SingI
                                                                                                            'GHC.Types.False)
                                                                                             ($dSingI :: GHC.Generics.SingI
                                                                                                           'GHC.Generics.PrefixI)
                                                                                             ($dKnownSymbol :: GHC.TypeLits.KnownSymbol
                                                                                                                 "Checkerboard")
  GHC.Generics.$fConstructorMetaMetaCons @ "Checkerboard"
                                         @ 'GHC.Generics.PrefixI
                                         @ 'GHC.Types.False
                                         $dKnownSymbol
                                         $dSingI
                                         $dSingI1
  = Models.$fFromJSONTool_$s$fConstructorMetaMetaCons
"SPEC/Models $fConstructorMetaMetaCons @ "Wipe" @ 'PrefixI @ 'False" [ALWAYS] forall ($dSingI1 :: GHC.Generics.SingI
                                                                                                    'GHC.Types.False)
                                                                                     ($dSingI :: GHC.Generics.SingI
                                                                                                   'GHC.Generics.PrefixI)
                                                                                     ($dKnownSymbol :: GHC.TypeLits.KnownSymbol
                                                                                                         "Wipe")
  GHC.Generics.$fConstructorMetaMetaCons @ "Wipe"
                                         @ 'GHC.Generics.PrefixI
                                         @ 'GHC.Types.False
                                         $dKnownSymbol
                                         $dSingI
                                         $dSingI1
  = Models.$fFromJSONTool_$s$fConstructorMetaMetaCons2
"SPEC/Models $fConstructorMetaMetaCons @ "ZipImage" @ 'PrefixI @ 'False" [ALWAYS] forall ($dSingI1 :: GHC.Generics.SingI
                                                                                                        'GHC.Types.False)
                                                                                         ($dSingI :: GHC.Generics.SingI
                                                                                                       'GHC.Generics.PrefixI)
                                                                                         ($dKnownSymbol :: GHC.TypeLits.KnownSymbol
                                                                                                             "ZipImage")
  GHC.Generics.$fConstructorMetaMetaCons @ "ZipImage"
                                         @ 'GHC.Generics.PrefixI
                                         @ 'GHC.Types.False
                                         $dKnownSymbol
                                         $dSingI
                                         $dSingI1
  = Models.$fFromJSONTool_$s$fConstructorMetaMetaCons3
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False


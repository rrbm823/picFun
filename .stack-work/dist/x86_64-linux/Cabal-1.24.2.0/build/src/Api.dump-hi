
==================== FINAL INTERFACE ====================
2017-07-04 19:27:50.824007 UTC

interface picFun-0.1.0.0-HoOlrcFQZ6zLB3TVOgtkf:Api 8002
  interface hash: 89ec3a37d38d57c726a1a12161799ee9
  ABI hash: cec13e727da71c433fe3c19aad96d2b9
  export-list hash: c1ce43ad452a44a0fd00d3408a502629
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: cb37e631bc4c684e53d2fda28c8fcb7e
  sig of: Nothing
  used TH splices: False
  where
exports:
  Api.imageApi
  Api.GIFAnim
  Api.ImageAPI
module dependencies: Htmls Models
package dependencies: JuicyPixels-3.2.8.1@JuicyPixels-3.2.8.1-4AbHYLGcEbLBNOsmMKGed
                      aeson-1.0.2.1@aeson-1.0.2.1-CYngHPh1vosBJovY7C9thn
                      array-0.5.1.1@array-0.5.1.1
                      attoparsec-0.13.1.0@attoparsec-0.13.1.0-1ABl8gBrvGSCXKXEElG6rU
                      base-4.9.1.0
                      base-compat-0.9.2@base-compat-0.9.2-6QxKnlgzGYzLT4ZO71q1el
                      binary-0.8.3.0@binary-0.8.3.0
                      blaze-builder-0.4.0.2@blaze-builder-0.4.0.2-CGB8BvrFgghHy5bLy0SFOg
                      blaze-html-0.8.1.3@blaze-html-0.8.1.3-4x5sR7CihaZBuBa398ibiy
                      blaze-markup-0.7.1.1@blaze-markup-0.7.1.1-7tIWNv8iALFJhJ4kVxNmNT
                      bytestring-0.10.8.1@bytestring-0.10.8.1
                      case-insensitive-1.2.0.8@case-insensitive-1.2.0.8-336s2tfPdxOEPgnLH8r0bz
                      containers-0.5.7.1@containers-0.5.7.1
                      deepseq-1.4.2.0@deepseq-1.4.2.0
                      dlist-0.8.0.2@dlist-0.8.0.2-6Wnps4GD7EFnRucVzXIFD
                      ghc-boot-th-8.0.2@ghc-boot-th-8.0.2 ghc-prim-0.5.0.0
                      hashable-1.2.6.0@hashable-1.2.6.0-3EXxoqeEgbfAKr6aGkye6x
                      http-api-data-0.3.5@http-api-data-0.3.5-I8V2cgXR5W924Ax42O3A11
                      http-media-0.6.4@http-media-0.6.4-Ic2rsgpbcUZCv89ocBCZpr
                      http-types-0.9.1@http-types-0.9.1-5rMGX8lemrMDaQeDulF4OF
                      integer-gmp-1.0.0.1
                      integer-logarithms-1.0.1@integer-logarithms-1.0.1-IEHCuEd5sG4JjSjlx7m5JF
                      mtl-2.2.1@mtl-2.2.1-BLKBelFsPB3BoFeSWSOYj6
                      network-uri-2.6.1.0@network-uri-2.6.1.0-EwGrJ9bdUqR1E7dAIJ4cwF
                      parsec-3.1.11@parsec-3.1.11-113irVHGgd88sRnywByDNw
                      pretty-1.1.3.3@pretty-1.1.3.3
                      primitive-0.6.1.0@primitive-0.6.1.0-6AbSTw9JXz141LE5p6LGH
                      random-1.1@random-1.1-9tceXaeYIMZ4JrKq20Egog
                      scientific-0.3.4.10@scientific-0.3.4.10-70WEAestTPg2u2sFCYJUhG
                      servant-0.9.1.1@servant-0.9.1.1-kVuyd51zvkQL9yX4P4Nq
                      servant-JuicyPixels-0.3.0.2@servant-JuicyPixels-0.3.0.2-KFDh0ZSrRqdHyQZspaSYy6
                      string-conversions-0.4.0.1@string-conversions-0.4.0.1-5bhARACLQyXG4DLNegoSj4
                      tagged-0.8.5@tagged-0.8.5-1mTloBSoUxv8dqUr8XBGBt
                      template-haskell-2.11.1.0
                      text-1.2.2.1@text-1.2.2.1-Ji7hMs2U4BkBwavd4taEVR
                      th-lift-0.7.6@th-lift-0.7.6-BJcuQtn7dnPzL4YOk4wps
                      th-lift-instances-0.1.11@th-lift-instances-0.1.11-C7WWQYsyhhMpc6laO6Bed
                      time-1.6.0.1@time-1.6.0.1
                      time-locale-compat-0.1.1.3@time-locale-compat-0.1.1.3-KZ1jqNx8uhlHjmuPPj6V1Y
                      transformers-0.5.2.0@transformers-0.5.2.0
                      unordered-containers-0.2.8.0@unordered-containers-0.2.8.0-1XEErQCPPPc2SEtcHHNx9o
                      uri-bytestring-0.2.3.1@uri-bytestring-0.2.3.1-6LL9CpgznmMIcIWZQ2UZ46
                      utf8-string-1.0.1.1@utf8-string-1.0.1.1-1DpjxLeTvGg7ttZZojxJR5
                      uuid-types-1.0.3@uuid-types-1.0.3-29hQYgnErrj49JbrlmjGHl
                      vault-0.3.0.6@vault-0.3.0.6-1vXP2sqILbxIC44bzfQYGg
                      vector-0.11.0.0@vector-0.11.0.0-LMwQhhnXj8U3T5Bm1JFxG
                      zlib-0.6.1.2@zlib-0.6.1.2-7negTfm2ujt1gW4wr40MUp
orphans: attoparsec-0.13.1.0@attoparsec-0.13.1.0-1ABl8gBrvGSCXKXEElG6rU:Data.Attoparsec.ByteString.Char8
         attoparsec-0.13.1.0@attoparsec-0.13.1.0-1ABl8gBrvGSCXKXEElG6rU:Data.Attoparsec.Text.Internal
         base-4.9.1.0:GHC.Base base-4.9.1.0:GHC.Float
         binary-0.8.3.0@binary-0.8.3.0:Data.Binary.Generic
         bytestring-0.10.8.1@bytestring-0.10.8.1:Data.ByteString.Builder
         hashable-1.2.6.0@hashable-1.2.6.0-3EXxoqeEgbfAKr6aGkye6x:Data.Hashable.Generic
         picFun-0.1.0.0-HoOlrcFQZ6zLB3TVOgtkf:Htmls
         text-1.2.2.1@text-1.2.2.1-Ji7hMs2U4BkBwavd4taEVR:Data.Text
         text-1.2.2.1@text-1.2.2.1-Ji7hMs2U4BkBwavd4taEVR:Data.Text.Lazy
         text-1.2.2.1@text-1.2.2.1-Ji7hMs2U4BkBwavd4taEVR:Data.Text.Show
         th-lift-0.7.6@th-lift-0.7.6-BJcuQtn7dnPzL4YOk4wps:Language.Haskell.TH.Lift
         th-lift-instances-0.1.11@th-lift-instances-0.1.11-C7WWQYsyhhMpc6laO6Bed:Instances.TH.Lift
         time-1.6.0.1@time-1.6.0.1:Data.Time.Calendar.Gregorian
         time-1.6.0.1@time-1.6.0.1:Data.Time.Format.Parse
         time-1.6.0.1@time-1.6.0.1:Data.Time.LocalTime.LocalTime
         transformers-0.5.2.0@transformers-0.5.2.0:Control.Monad.Trans.Error
         vector-0.11.0.0@vector-0.11.0.0-LMwQhhnXj8U3T5Bm1JFxG:Data.Vector.Fusion.Bundle
         vector-0.11.0.0@vector-0.11.0.0-LMwQhhnXj8U3T5Bm1JFxG:Data.Vector.Unboxed
family instance modules: JuicyPixels-3.2.8.1@JuicyPixels-3.2.8.1-4AbHYLGcEbLBNOsmMKGed:Codec.Picture.Tga
                         JuicyPixels-3.2.8.1@JuicyPixels-3.2.8.1-4AbHYLGcEbLBNOsmMKGed:Codec.Picture.Tiff
                         JuicyPixels-3.2.8.1@JuicyPixels-3.2.8.1-4AbHYLGcEbLBNOsmMKGed:Codec.Picture.Types
                         attoparsec-0.13.1.0@attoparsec-0.13.1.0-1ABl8gBrvGSCXKXEElG6rU:Data.Attoparsec.Internal.Types
                         base-4.9.1.0:Control.Applicative base-4.9.1.0:Data.Complex
                         base-4.9.1.0:Data.Either base-4.9.1.0:Data.Functor.Compose
                         base-4.9.1.0:Data.Functor.Const base-4.9.1.0:Data.Functor.Identity
                         base-4.9.1.0:Data.Functor.Product base-4.9.1.0:Data.Functor.Sum
                         base-4.9.1.0:Data.List.NonEmpty base-4.9.1.0:Data.Monoid
                         base-4.9.1.0:Data.Semigroup base-4.9.1.0:Data.Type.Equality
                         base-4.9.1.0:Data.Version base-4.9.1.0:Data.Void
                         base-4.9.1.0:GHC.Exts base-4.9.1.0:GHC.Generics
                         base-4.9.1.0:GHC.IO.Exception base-4.9.1.0:GHC.TypeLits
                         containers-0.5.7.1@containers-0.5.7.1:Data.IntMap.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.IntSet.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.Map.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.Sequence
                         containers-0.5.7.1@containers-0.5.7.1:Data.Set.Base
                         dlist-0.8.0.2@dlist-0.8.0.2-6Wnps4GD7EFnRucVzXIFD:Data.DList
                         ghc-boot-th-8.0.2@ghc-boot-th-8.0.2:GHC.LanguageExtensions.Type
                         http-api-data-0.3.5@http-api-data-0.3.5-I8V2cgXR5W924Ax42O3A11:Web.Internal.FormUrlEncoded
                         network-uri-2.6.1.0@network-uri-2.6.1.0-EwGrJ9bdUqR1E7dAIJ4cwF:Network.URI
                         picFun-0.1.0.0-HoOlrcFQZ6zLB3TVOgtkf:Models
                         pretty-1.1.3.3@pretty-1.1.3.3:Text.PrettyPrint.Annotated.HughesPJ
                         pretty-1.1.3.3@pretty-1.1.3.3:Text.PrettyPrint.HughesPJ
                         primitive-0.6.1.0@primitive-0.6.1.0-6AbSTw9JXz141LE5p6LGH:Control.Monad.Primitive
                         servant-0.9.1.1@servant-0.9.1.1-kVuyd51zvkQL9yX4P4Nq:Servant.API.ContentTypes
                         servant-0.9.1.1@servant-0.9.1.1-kVuyd51zvkQL9yX4P4Nq:Servant.API.IsSecure
                         servant-0.9.1.1@servant-0.9.1.1-kVuyd51zvkQL9yX4P4Nq:Servant.API.Verbs
                         servant-0.9.1.1@servant-0.9.1.1-kVuyd51zvkQL9yX4P4Nq:Servant.Utils.Links
                         tagged-0.8.5@tagged-0.8.5-1mTloBSoUxv8dqUr8XBGBt:Data.Tagged
                         template-haskell-2.11.1.0:Language.Haskell.TH.Syntax
                         text-1.2.2.1@text-1.2.2.1-Ji7hMs2U4BkBwavd4taEVR:Data.Text
                         text-1.2.2.1@text-1.2.2.1-Ji7hMs2U4BkBwavd4taEVR:Data.Text.Lazy
                         unordered-containers-0.2.8.0@unordered-containers-0.2.8.0-1XEErQCPPPc2SEtcHHNx9o:Data.HashMap.Base
                         unordered-containers-0.2.8.0@unordered-containers-0.2.8.0-1XEErQCPPPc2SEtcHHNx9o:Data.HashSet
                         uri-bytestring-0.2.3.1@uri-bytestring-0.2.3.1-6LL9CpgznmMIcIWZQ2UZ46:URI.ByteString.Types
                         uuid-types-1.0.3@uuid-types-1.0.3-29hQYgnErrj49JbrlmjGHl:Data.UUID.Types.Internal
                         uuid-types-1.0.3@uuid-types-1.0.3-29hQYgnErrj49JbrlmjGHl:Data.UUID.Types.Internal.Builder
                         vector-0.11.0.0@vector-0.11.0.0-LMwQhhnXj8U3T5Bm1JFxG:Data.Vector
                         vector-0.11.0.0@vector-0.11.0.0-LMwQhhnXj8U3T5Bm1JFxG:Data.Vector.Primitive
                         vector-0.11.0.0@vector-0.11.0.0-LMwQhhnXj8U3T5Bm1JFxG:Data.Vector.Storable
                         vector-0.11.0.0@vector-0.11.0.0-LMwQhhnXj8U3T5Bm1JFxG:Data.Vector.Unboxed
                         vector-0.11.0.0@vector-0.11.0.0-LMwQhhnXj8U3T5Bm1JFxG:Data.Vector.Unboxed.Base
                         zlib-0.6.1.2@zlib-0.6.1.2-7negTfm2ujt1gW4wr40MUp:Codec.Compression.Zlib.Stream
import  -/  JuicyPixels-3.2.8.1@JuicyPixels-3.2.8.1-4AbHYLGcEbLBNOsmMKGed:Codec.Picture c28c03ed1b5e2bad2d1a6a2be36f49e1
import  -/  JuicyPixels-3.2.8.1@JuicyPixels-3.2.8.1-4AbHYLGcEbLBNOsmMKGed:Codec.Picture.Gif ad704388b1ac67a6d306f6cbd7e57722
import  -/  JuicyPixels-3.2.8.1@JuicyPixels-3.2.8.1-4AbHYLGcEbLBNOsmMKGed:Codec.Picture.Types 22b7a216fd591cfd9ca02dad94569487
import  -/  base-4.9.1.0:Data.Either 20b09ef8d0a5b74fdec011c40c1587f5
import  -/  base-4.9.1.0:Data.Proxy d7f87a37cf7ec5ca87c59c8d2859031f
import  -/  base-4.9.1.0:GHC.Base c4231c43c07e46080a26bf94094c7aa1
import  -/  base-4.9.1.0:GHC.Err 3bba35a16538d33d424682ce66876cdd
import  -/  base-4.9.1.0:GHC.Num 00bfaa7b2f9d6084913c0697a8a49ec8
import  -/  base-4.9.1.0:GHC.TypeLits 93e12de936472fe3136ec0d1e30a3bd9
import  -/  base-4.9.1.0:Prelude 22dd289b8469a8fa8dc81cab7b237771
import  -/  bytestring-0.10.8.1@bytestring-0.10.8.1:Data.ByteString.Lazy 208431757121593b5ca64b062df0cfbd
import  -/  http-media-0.6.4@http-media-0.6.4-Ic2rsgpbcUZCv89ocBCZpr:Network.HTTP.Media 07625d65eebeff997f1e9bc032ba3b6e
import  -/  http-media-0.6.4@http-media-0.6.4-Ic2rsgpbcUZCv89ocBCZpr:Network.HTTP.Media.MediaType d33bfddaa1306ad267f9a6689258b69b
import  -/  Htmls c8f882b4e9492955dcce536e246ffd85
  exports: 3aa197b1619ffdb8f2e6e00c837ee2cb
  HTMLBlaze 71e9b6ef84f7601188f085ac6a4a2310
import  -/  Models 5992fa304552c7c8ef828c4d5dfbaa4c
  exports: ed66af611eab7c3185e2115f774dae78
  Tool 55cf370781b39a8a4ed28483475a4bde
import  -/  servant-0.9.1.1@servant-0.9.1.1-kVuyd51zvkQL9yX4P4Nq:Servant.API ea4c313cfea87bcfbf12f5ad55ca0674
import  -/  servant-0.9.1.1@servant-0.9.1.1-kVuyd51zvkQL9yX4P4Nq:Servant.API.Alternative 23b24c34dda253c03c99ee6490f6a518
import  -/  servant-0.9.1.1@servant-0.9.1.1-kVuyd51zvkQL9yX4P4Nq:Servant.API.Capture 2a727c94fad9a3319e7ee886e834a4f3
import  -/  servant-0.9.1.1@servant-0.9.1.1-kVuyd51zvkQL9yX4P4Nq:Servant.API.ContentTypes f46c3af563d8e4f630ae29c1d96b30a9
import  -/  servant-0.9.1.1@servant-0.9.1.1-kVuyd51zvkQL9yX4P4Nq:Servant.API.Raw 818230447654833d886254fb5ea6ba37
import  -/  servant-0.9.1.1@servant-0.9.1.1-kVuyd51zvkQL9yX4P4Nq:Servant.API.ReqBody 5dd1533175f08974194e0cdd6857e55c
import  -/  servant-0.9.1.1@servant-0.9.1.1-kVuyd51zvkQL9yX4P4Nq:Servant.API.Sub d0e5e51568655ac1054371be0600b169
import  -/  servant-0.9.1.1@servant-0.9.1.1-kVuyd51zvkQL9yX4P4Nq:Servant.API.Verbs 87a2450d8afc747bc7c80e87c25d47b8
import  -/  servant-JuicyPixels-0.3.0.2@servant-JuicyPixels-0.3.0.2-KFDh0ZSrRqdHyQZspaSYy6:Servant.JuicyPixels 8b5d4bad3818d21fd79b30ab2960a0f1
import  -/  text-1.2.2.1@text-1.2.2.1-Ji7hMs2U4BkBwavd4taEVR:Data.Text 9ba4693a108b74a0b1eb8f7d38f1abee
fa58714819a4a1511b9d8cf68f90e15f
  $fAccept(->)GIFAnim :: Servant.API.ContentTypes.Accept Api.GIFAnim
  DFunId
  {- Arity: 1, Strictness: <L,A>, Inline: INLINE (sat-args=0),
     Unfolding: InlineRule (0, False, True)
                Api.$fAccept(->)GIFAnim_$ccontentType
                  `cast`
                (Sym (Servant.API.ContentTypes.N:Accept[0]
                          <GHC.Types.Nat -> *>_N <Api.GIFAnim>_N)) -}
03f130d5304256f29ccc249b9541c28c
  $fAccept(->)GIFAnim1 ::
    Network.HTTP.Media.MediaType.Internal.MediaType
  {- Unfolding: (case GHC.Prim.newMutVar#
                        @ GHC.ForeignPtr.Finalizers
                        @ GHC.Prim.RealWorld
                        GHC.ForeignPtr.NoFinalizers
                        GHC.Prim.realWorld# of ds1 { (#,#) ipv ipv1 ->
                 let {
                   addr# :: GHC.Prim.Addr# = "image"#
                 } in
                 case {__pkg_ccall bytestring-0.10.8.1@bytestring-0.10.8.1 strlen GHC.Prim.Addr#
                                                                                  -> GHC.Prim.State#
                                                                                       GHC.Prim.RealWorld
                                                                                  -> (# GHC.Prim.State#
                                                                                          GHC.Prim.RealWorld,
                                                                                        GHC.Prim.Word# #)}
                        addr#
                        ipv of wild { (#,#) ds3 ds4 ->
                 let {
                   addr#1 :: GHC.Prim.Addr# = "gif"#
                 } in
                 case {__pkg_ccall bytestring-0.10.8.1@bytestring-0.10.8.1 strlen GHC.Prim.Addr#
                                                                                  -> GHC.Prim.State#
                                                                                       GHC.Prim.RealWorld
                                                                                  -> (# GHC.Prim.State#
                                                                                          GHC.Prim.RealWorld,
                                                                                        GHC.Prim.Word# #)}
                        addr#1
                        ipv of wild1 { (#,#) ds2 ds6 ->
                 case Network.HTTP.Media.MediaType.$w//
                        addr#
                        (GHC.ForeignPtr.PlainForeignPtr ipv1)
                        0#
                        (GHC.Prim.word2Int# ds4)
                        addr#1
                        (GHC.ForeignPtr.PlainForeignPtr ipv1)
                        0#
                        (GHC.Prim.word2Int# ds6) of ww10 { (#,,#) ww11 ww12 ww13 ->
                 Network.HTTP.Media.MediaType.Internal.MediaType
                   ww11
                   ww12
                   ww13 } } } }) -}
fa58714819a4a1511b9d8cf68f90e15f
  $fAccept(->)GIFAnim_$ccontentType ::
    Data.Proxy.Proxy Api.GIFAnim
    -> Network.HTTP.Media.MediaType.Internal.MediaType
  {- Arity: 1, Strictness: <L,A>,
     Unfolding: InlineRule (1, True, True)
                (\ (ds :: Data.Proxy.Proxy Api.GIFAnim) ->
                 Api.$fAccept(->)GIFAnim1) -}
fa58714819a4a1511b9d8cf68f90e15f
  $fAcceptTYPEGIFAnim ::
    (GHC.TypeLits.KnownNat delay, delay GHC.TypeLits.<= 10) =>
    Servant.API.ContentTypes.Accept (Api.GIFAnim delay)
  DFunId
  {- Arity: 3, Strictness: <L,A><S(S),1*U(1*U)><L,A>,
     Inline: INLINE (sat-args=0),
     Unfolding: InlineRule (2, False, True)
                Api.$fAcceptTYPEGIFAnim_$ccontentType
                  `cast`
                (forall (delay :: <GHC.Types.Nat>_N).
                 <GHC.TypeLits.KnownNat delay>_R
                 ->_R <delay GHC.TypeLits.<= 10>_R
                 ->_R Sym (Servant.API.ContentTypes.N:Accept[0]
                               <*>_N <Api.GIFAnim delay>_N)) -}
fa58714819a4a1511b9d8cf68f90e15f
  $fAcceptTYPEGIFAnim_$ccontentType ::
    (GHC.TypeLits.KnownNat delay, delay GHC.TypeLits.<= 10) =>
    Data.Proxy.Proxy (Api.GIFAnim delay)
    -> Network.HTTP.Media.MediaType.Internal.MediaType
  {- Arity: 3, Strictness: <L,A><S(S),1*U(1*U)><L,A>,
     Unfolding: InlineRule (3, True, False)
                (\ @ (delay :: GHC.Types.Nat)
                   ($dKnownNat :: GHC.TypeLits.KnownNat delay)
                   ($d~ :: delay GHC.TypeLits.<= 10)
                   (eta :: Data.Proxy.Proxy (Api.GIFAnim delay)) ->
                 case GHC.Types.HEq_sc
                        @ GHC.Types.Bool
                        @ GHC.Types.Bool
                        @ (delay GHC.TypeLits.<=? 10)
                        @ 'GHC.Types.True
                        $d~
                          `cast`
                        (Data.Type.Equality.N:~[0] <GHC.Types.Bool>_N <delay
                                                                       GHC.TypeLits.<=? 10>_N <'GHC.Types.True>_N) of cobox0 { DEFAULT ->
                 Api.$fAccept(->)GIFAnim1 }) -}
fa58714819a4a1511b9d8cf68f90e15f
  $fMimeRenderTYPEGIFAnim[] ::
    (GHC.TypeLits.KnownNat delay, delay GHC.TypeLits.<= 10) =>
    Servant.API.ContentTypes.MimeRender
      (Api.GIFAnim delay)
      [Codec.Picture.Types.Image Codec.Picture.Types.PixelRGB8]
  DFunId
  {- Arity: 2, Strictness: <L,1*U><L,U(U)>m,
     Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun: @ (delay :: GHC.Types.Nat)
                      ($dKnownNat :: GHC.TypeLits.KnownNat delay)
                      ($d~ :: delay GHC.TypeLits.<= 10).
                  @ *
                  @ (Api.GIFAnim delay)
                  @ [Codec.Picture.Types.Image Codec.Picture.Types.PixelRGB8]
                  (Api.$fMimeRenderTYPEGIFAnim[]_$cp1MimeRender
                     @ delay
                     $dKnownNat
                     $d~)
                  (Api.$fMimeRenderTYPEGIFAnim[]_$cmimeRender
                     @ delay
                     $dKnownNat
                     $d~) -}
61975fb2c2aadd182e03830c90d3e83c
  $fMimeRenderTYPEGIFAnim[]1 ::
    [GHC.Types.Char] -> Data.ByteString.Lazy.Internal.ByteString
  {- Arity: 1, Strictness: <L,U>x -}
fa58714819a4a1511b9d8cf68f90e15f
  $fMimeRenderTYPEGIFAnim[]2 ::
    (GHC.TypeLits.KnownNat delay, delay GHC.TypeLits.<= 10) =>
    Data.Proxy.Proxy (Api.GIFAnim delay)
    -> Network.HTTP.Media.MediaType.Internal.MediaType
  {- Arity: 3, Strictness: <L,A><S(S),U(U)><L,A>,
     Unfolding: InlineRule (3, True, False)
                (\ @ (delay :: GHC.Types.Nat)
                   ($dKnownNat :: GHC.TypeLits.KnownNat delay)
                   ($d~ :: delay GHC.TypeLits.<= 10)
                   (eta :: Data.Proxy.Proxy (Api.GIFAnim delay)) ->
                 case GHC.Types.HEq_sc
                        @ GHC.Types.Bool
                        @ GHC.Types.Bool
                        @ (delay GHC.TypeLits.<=? 10)
                        @ 'GHC.Types.True
                        $d~
                          `cast`
                        (Data.Type.Equality.N:~[0] <GHC.Types.Bool>_N <delay
                                                                       GHC.TypeLits.<=? 10>_N <'GHC.Types.True>_N) of cobox0 { DEFAULT ->
                 case GHC.Types.HEq_sc
                        @ GHC.Types.Bool
                        @ GHC.Types.Bool
                        @ (delay GHC.TypeLits.<=? 10)
                        @ 'GHC.Types.True
                        $d~
                          `cast`
                        (Data.Type.Equality.N:~[0] <GHC.Types.Bool>_N <delay
                                                                       GHC.TypeLits.<=? 10>_N <'GHC.Types.True>_N) of cobox1 { DEFAULT ->
                 Api.$fAccept(->)GIFAnim1 } }) -}
fa58714819a4a1511b9d8cf68f90e15f
  $fMimeRenderTYPEGIFAnim[]_$cmimeRender ::
    (GHC.TypeLits.KnownNat delay, delay GHC.TypeLits.<= 10) =>
    Data.Proxy.Proxy (Api.GIFAnim delay)
    -> [Codec.Picture.Types.Image Codec.Picture.Types.PixelRGB8]
    -> Data.ByteString.Lazy.Internal.ByteString
  {- Arity: 2, Strictness: <L,1*U><S(S),1*U(1*U)>,
     Unfolding: (\ @ (delay :: GHC.Types.Nat)
                   ($dKnownNat :: GHC.TypeLits.KnownNat delay)
                   ($d~ :: delay GHC.TypeLits.<= 10) ->
                 case GHC.Types.HEq_sc
                        @ GHC.Types.Bool
                        @ GHC.Types.Bool
                        @ (delay GHC.TypeLits.<=? 10)
                        @ 'GHC.Types.True
                        $d~
                          `cast`
                        (Data.Type.Equality.N:~[0] <GHC.Types.Bool>_N <delay
                                                                       GHC.TypeLits.<=? 10>_N <'GHC.Types.True>_N) of cobox0 { DEFAULT ->
                 let {
                   g :: Codec.Picture.Gif.GifDelay
                   = case GHC.Integer.Type.integerToInt
                            $dKnownNat
                              `cast`
                            (Trans
                                 (GHC.TypeLits.N:KnownNat[0] <delay>_N)
                                 (GHC.TypeLits.N:SNat[0] <delay>_P)) of wild { DEFAULT ->
                     GHC.Types.I# wild }
                 } in
                 \ (ds :: Data.Proxy.Proxy (Api.GIFAnim delay))
                   (eta :: [Codec.Picture.Types.Image
                              Codec.Picture.Types.PixelRGB8]) ->
                 case Codec.Picture.encodeGifAnimation
                        g
                        Codec.Picture.Gif.LoopingForever
                        eta of wild {
                   Data.Either.Left x -> Api.$fMimeRenderTYPEGIFAnim[]1 x
                   Data.Either.Right y -> y } }) -}
fa58714819a4a1511b9d8cf68f90e15f
  $fMimeRenderTYPEGIFAnim[]_$cp1MimeRender ::
    (GHC.TypeLits.KnownNat delay, delay GHC.TypeLits.<= 10) =>
    Servant.API.ContentTypes.Accept (Api.GIFAnim delay)
  {- Arity: 3, Strictness: <L,A><S(S),U(U)><L,A>,
     Unfolding: InlineRule (0, True, True)
                Api.$fMimeRenderTYPEGIFAnim[]2
                  `cast`
                (forall (delay :: <GHC.Types.Nat>_N).
                 <GHC.TypeLits.KnownNat delay>_R
                 ->_R <delay GHC.TypeLits.<= 10>_R
                 ->_R Sym (Servant.API.ContentTypes.N:Accept[0]
                               <*>_N <Api.GIFAnim delay>_N)) -}
fa58714819a4a1511b9d8cf68f90e15f
  $fMimeUnrender(->)GIFAnimDynamicImage ::
    Servant.API.ContentTypes.MimeUnrender
      Api.GIFAnim Codec.Picture.Types.DynamicImage
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (GHC.Types.Nat -> *)
                  @ Api.GIFAnim
                  @ Codec.Picture.Types.DynamicImage
                  Api.$fAccept(->)GIFAnim_$ccontentType
                    `cast`
                  (Sym (Servant.API.ContentTypes.N:Accept[0]
                            <GHC.Types.Nat -> *>_N <Api.GIFAnim>_N))
                  Api.$fMimeUnrender(->)GIFAnimDynamicImage_$cmimeUnrender -}
d381c9de167a2e0bd87f1f16ba619848
  $fMimeUnrender(->)GIFAnimDynamicImage1 ::
    Data.ByteString.Lazy.Internal.ByteString
    -> Data.Either.Either
         GHC.Base.String Codec.Picture.Types.DynamicImage
  {- Arity: 1, Strictness: <L,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Data.ByteString.Lazy.Internal.ByteString) ->
                 Codec.Picture.Gif.decodeGif (Data.ByteString.Lazy.toStrict x)) -}
fa58714819a4a1511b9d8cf68f90e15f
  $fMimeUnrender(->)GIFAnimDynamicImage_$cmimeUnrender ::
    Data.Proxy.Proxy Api.GIFAnim
    -> Data.ByteString.Lazy.Internal.ByteString
    -> Data.Either.Either
         GHC.Base.String Codec.Picture.Types.DynamicImage
  {- Arity: 2, Strictness: <L,A>,
     Unfolding: InlineRule (1, True, True)
                (\ (ds :: Data.Proxy.Proxy Api.GIFAnim)
                   (eta :: Data.ByteString.Lazy.Internal.ByteString) ->
                 Api.$fMimeUnrender(->)GIFAnimDynamicImage1 eta) -}
74f27bfadfbfb63684a15e08daac2da8
  $tcGIFAnim :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   10976501648575010234##
                   17778061987098577854##
                   Api.$trModule
                   Api.$tcGIFAnim1) -}
54f16f03b57036a3e1839669821436a2
  $tcGIFAnim1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "GIFAnim"#) -}
e18f338d7d6383febeb4864dcf1b8bbb
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module Api.$trModule2 Api.$trModule1) -}
af22920facf3f29fe2048120650205ac
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "Api"#) -}
2362da0fda7fb1d945b40f657595fb43
  $trModule2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   "picFun-0.1.0.0-HoOlrcFQZ6zLB3TVOgtkf"#) -}
fa58714819a4a1511b9d8cf68f90e15f
  type role GIFAnim phantom
  data GIFAnim (delay :: GHC.Types.Nat)
aaa395ca62f141a1913875c4dcb4b3a8
  type ImageAPI =
    ("postImg"
     Servant.API.Sub.:> (Servant.API.Capture.Capture
                           "true/false" GHC.Types.Bool
                         Servant.API.Sub.:> (Servant.API.ReqBody.ReqBody
                                               '[Servant.JuicyPixels.JPEG 100]
                                               Codec.Picture.Types.DynamicImage
                                             Servant.API.Sub.:> Servant.API.Verbs.Post
                                                                  '[Servant.API.ContentTypes.JSON]
                                                                  GHC.Types.Bool)))
    Servant.API.Alternative.:<|> (("image"
                                   Servant.API.Sub.:> (Servant.API.Capture.Capture
                                                         "tool" GHC.Base.String
                                                       Servant.API.Sub.:> Servant.API.Verbs.Get
                                                                            '[Servant.JuicyPixels.JPEG
                                                                                100]
                                                                            Codec.Picture.Types.DynamicImage))
                                  Servant.API.Alternative.:<|> (("gif"
                                                                 Servant.API.Sub.:> (Servant.API.Capture.Capture
                                                                                       "tool"
                                                                                       GHC.Base.String
                                                                                     Servant.API.Sub.:> Servant.API.Verbs.Get
                                                                                                          '[Api.GIFAnim
                                                                                                              10]
                                                                                                          [Codec.Picture.Types.Image
                                                                                                             Codec.Picture.Types.PixelRGB8]))
                                                                Servant.API.Alternative.:<|> (("show"
                                                                                               Servant.API.Sub.:> (Servant.API.Capture.Capture
                                                                                                                     "tool"
                                                                                                                     GHC.Base.String
                                                                                                                   Servant.API.Sub.:> Servant.API.Verbs.Get
                                                                                                                                        '[Htmls.HTMLBlaze]
                                                                                                                                        Models.Tool))
                                                                                              Servant.API.Alternative.:<|> Servant.API.Raw.Raw)))
d3a21f35e20458b9da28fdea66834d67
  imageApi :: Data.Proxy.Proxy Api.ImageAPI
  {- HasNoCafRefs,
     Unfolding: InlineRule (0, True, True)
                (Data.Proxy.Proxy @ * @ Api.ImageAPI) -}
instance Servant.API.ContentTypes.Accept [(->), Api.GIFAnim]
  = Api.$fAccept(->)GIFAnim
instance Servant.API.ContentTypes.Accept [TYPE, Api.GIFAnim]
  = Api.$fAcceptTYPEGIFAnim
instance Servant.API.ContentTypes.MimeRender [TYPE, Api.GIFAnim,
                                              []]
  = Api.$fMimeRenderTYPEGIFAnim[]
instance Servant.API.ContentTypes.MimeUnrender [(->), Api.GIFAnim,
                                                Codec.Picture.Types.DynamicImage]
  = Api.$fMimeUnrender(->)GIFAnimDynamicImage
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False

